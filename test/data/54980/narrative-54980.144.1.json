{
    "data": {
        "cells": [
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Reset Version"
                        },
                        "cellState": {
                            "selected": true,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Reset Version\n### Metagenome Assembly, Binning, and Quality Assessment and Genome Annotation and Comparative Genomics \n\n####  Complete version of this Narrative can be found at https://narrative.kbase.us/narrative/ws.24035.obj.1\n\n\n####  If you have questions/comments please type that in here, so KBase staff address that quickly \nhttps://docs.google.com/document/d/1MuaHx6ExDoLmjPZ37YsSJQus0OtdE8cey0eHosd1d4c/edit\n\n\n\n### Regarding sequencing data that we use in this Narrative..\nSoil from the Cedar Creek Ecosystem* Science Reserve (https://www.cedarcreek.umn.edu/) was collected and plated onto a dilute native soil extract agar (10g soil to 1L DI water). A co-culture was grown by repeated streaking of an apparent single colony onto soil extract. This consortium was then grown in batch culture on a 100-fold dilution of standard nutrient broth. DNA from this batch culture was extracted and sent to the Environmental Sample Preparation and Sequencing Facility (https://www.bio.anl.gov/facilities/environmental-sample-preparation-sequencing-facility) for shotgun metagenomic sequencing.\n\n*Cedar Creek Ecosystem Science Reserve is a University of Minnesota biological field station with many ecosystems and species found throughout the forests and grasslands of North America. Faculty, staff and students who work at Cedar Creek are dedicated to understanding how human activities, such as agriculture and fossil fuel combustion, are changing ecosystems.\n\n#### In this narrative, we demonstrate the tools in KBase that assemble the metagenomic sequencing reads, quality assessment of assembly, contig binning, genome annotation and comparative genomics"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": ""
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "<center>\n<img src=http://bioseed.mcs.anl.gov/~janakae/DOE/binning_slide1.png  alt=\"Shewanella\" style=\"height: 600px;\"/>\n</center>"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Paired End reads library Sample_CCESR16"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Paired End reads library Sample_CCESR16\n\n#### Step 1\n"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 07 Sep 2017 15:27:50 GMT",
                            "icon": "database",
                            "id": "7c219d0b-16a2-4d2e-87b7-0f3d6bc1f229",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "v2 - KBaseFile.PairedEndLibrary-2.1",
                            "title": "Sample_CCESR16"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "chsum": "2aa8e7aedba0a03453c23581b3b7d296",
                                "id": 4,
                                "meta": {
                                    "gc_content": "0.6448269999999999",
                                    "number_of_duplicates": "353787",
                                    "phred_type": "33",
                                    "qual_max": "41.0",
                                    "qual_mean": "36.6187",
                                    "qual_min": "2.0",
                                    "qual_stdev": "5.9076",
                                    "read_count": "19754580",
                                    "read_length_mean": "101.0",
                                    "read_length_stdev": "0.0",
                                    "sequencing_tech": "Illumina",
                                    "single_genome": "0",
                                    "total_bases": "1995212580"
                                },
                                "name": "Sample_CCESR16",
                                "save_date": "2017-09-07T04:30:57+0000",
                                "saved_by": "janakakbase",
                                "size": 773,
                                "type": "KBaseFile.PairedEndLibrary-2.1",
                                "version": 2,
                                "ws_id": 24065,
                                "ws_name": "janakakbase:narrative_1504758657134"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-7a1ab460-d6ec-4921-9f05-66d344a0228e' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-7a1ab460-d6ec-4921-9f05-66d344a0228e'), {\n                \"data\": {\"output\": {\"obj_ref\": \"24065/4/2\", \"wsName\": \"janakakbase:narrative_1504758657134\"}, \"type_spec\": {\"import_method_ids\": [], \"subtitle\": \"Short reads object\", \"name\": \"Short reads\", \"export_functions\": {\"FASTQ\": \"ReadsUtils/export_reads\"}, \"view_method_ids\": [\"NarrativeViewers/view_reads\"], \"description\": \"<p>This type describes short reads.</p>\\n\", \"type_name\": \"KBaseFile.PairedEndLibrary\", \"tooltip\": \"Short reads object\", \"landing_page_url_prefix\": \"\", \"icon\": {\"url\": \"img?type_name=KBaseFile.PairedEndLibrary&image_name=none\"}}, \"info_tuple\": [4, \"Sample_CCESR16\", \"KBaseFile.PairedEndLibrary-2.1\", \"2017-09-07T04:30:57+0000\", 2, \"janakakbase\", 24065, \"janakakbase:narrative_1504758657134\", \"2aa8e7aedba0a03453c23581b3b7d296\", 773, {\"qual_max\": \"41.0\", \"read_length_stdev\": \"0.0\", \"total_bases\": \"1995212580\", \"qual_min\": \"2.0\", \"phred_type\": \"33\", \"read_count\": \"19754580\", \"qual_mean\": \"36.6187\", \"read_length_mean\": \"101.0\", \"sequencing_tech\": \"Illumina\", \"qual_stdev\": \"5.9076\", \"number_of_duplicates\": \"353787\", \"gc_content\": \"0.6448269999999999\", \"single_genome\": \"0\"}], \"app_spec\": {\"info\": {\"ver\": \"1.0.0\", \"name\": \"View Reads\", \"subtitle\": \"View and explore a Reads object in your workspace. [5]\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"View and explore a Reads object in your workspace. [5]\", \"git_commit_hash\": \"553d49cff9a813d3281f259eedadd9c0809d34ee\", \"input_types\": [\"KBaseFile.PairedEndLibrary\", \"KBaseFile.SingleEndLibrary\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_reads\", \"categories\": [\"viewers\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseReadsViewer\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"select the Reads you want to view [5.1]\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseFile.PairedEndLibrary\", \"KBaseFile.SingleEndLibrary\"]}, \"disabled\": 0, \"short_hint\": \"select the Reads you want to view [5.1]\", \"default_values\": [\"\"], \"ui_name\": \"Reads\", \"optional\": 0, \"id\": \"param0\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"obj_ref\", \"input_parameter\": \"param0\", \"target_type_transform\": \"resolved-ref\"}, {\"target_property\": \"wsName\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"7c219d0b-16a2-4d2e-87b7-0f3d6bc1f229\",\n                \"title\":\"Sample_CCESR16\",\n                \"time\":1504798071599\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"24065/4/2\",\n    cell_id=\"7c219d0b-16a2-4d2e-87b7-0f3d6bc1f229\",\n    title=\"Sample_CCESR16\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Assemble the sequences with MEGAHIT assembler"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Assemble the sequences with MEGAHIT assembler \n#### Step 2"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                "id": "MEGAHIT/run_megahit",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_library_ref",
                                                "target_property": "read_library_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "megahit_parameter_preset",
                                                "target_property": "megahit_parameter_preset"
                                            },
                                            {
                                                "input_parameter": "min_count",
                                                "target_property": "min_count"
                                            },
                                            {
                                                "input_parameter": "k_min",
                                                "target_property": "k_min"
                                            },
                                            {
                                                "input_parameter": "k_max",
                                                "target_property": "k_max"
                                            },
                                            {
                                                "input_parameter": "k_step",
                                                "target_property": "k_step"
                                            },
                                            {
                                                "input_parameter": "k_list",
                                                "target_property": "k_list"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_megahit",
                                        "kb_service_name": "MEGAHIT",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "833c6d8cceedbb67c4001133e347f71cab488572"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "msneddon",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                        "icon": {
                                            "url": "img?method_id=MEGAHIT/run_megahit&image_name=megahit-blue.png&tag=release"
                                        },
                                        "id": "MEGAHIT/run_megahit",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseFile.PairedEndLibrary"
                                        ],
                                        "module_name": "MEGAHIT",
                                        "name": "Assemble Reads with MEGAHIT v1.1.1",
                                        "namespace": "MEGAHIT",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "tooltip": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "ver": "2.2.8"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_library_ref",
                                            "optional": 0,
                                            "short_hint": "Read library (only PairedEnd Libs supported now)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "MEGAHIT.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "Enter a name for the assembled contigs data object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Assembly name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "This option overrides a group of parameters.\nmeta-sensitive  '--min-count 1 --k-list 21,29,39,49,...,129,141'\nmeta-large      '--k-min 27 --k-max 127 --k-step 10'",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "meta-sensitive - More sensitive assembly, but slower",
                                                        "index": 0,
                                                        "value": "meta-sensitive"
                                                    },
                                                    {
                                                        "display": "meta-large - Large and complex assembly, e.g. soil",
                                                        "index": 1,
                                                        "value": "meta-large"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "megahit_parameter_preset",
                                            "optional": 1,
                                            "short_hint": "Select a MEGAHIT parameter preset",
                                            "ui_class": "parameter",
                                            "ui_name": "Parameter preset"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_count",
                                            "optional": 1,
                                            "short_hint": "minimum multiplicity for filtering (k_min+1)-mers, default 2",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-count"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_min",
                                            "optional": 1,
                                            "short_hint": "minimum kmer size (<= 127), must be odd number, default 21",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 127,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-min"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_max",
                                            "optional": 1,
                                            "short_hint": "maximum kmer size (<= 255), must be odd number, default 141",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-max"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_step",
                                            "optional": 1,
                                            "short_hint": "increment of kmer size of each iteration (<= 28), must be even number, default 12",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 28,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-step"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_list",
                                            "optional": 1,
                                            "short_hint": "list of kmer size (all must be odd, in the range 15-255, increment <= 28)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 15,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-list"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2000"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "minimum length of contigs to output",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 300,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-contig-len"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "2.2.8"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assemble Reads with MEGAHIT v1.1.1",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a87079ce4b07981a2f93385": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 12 Mar 2018 21:11:27 GMT",
                                        "params": {
                                            "k_list": [],
                                            "k_max": null,
                                            "k_min": null,
                                            "k_step": null,
                                            "megahit_parameter_preset": "",
                                            "min_contig_length": 2000,
                                            "min_count": null,
                                            "output_contigset_name": "CCESR16_MEGAHIT.assembly",
                                            "read_library_ref": "Sample_CCESR16"
                                        }
                                    },
                                    "5aa84df0e4b07981a2f94ddf": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 04:03:30 GMT",
                                        "params": {
                                            "k_list": [],
                                            "k_max": null,
                                            "k_min": null,
                                            "k_step": null,
                                            "megahit_parameter_preset": "",
                                            "min_contig_length": 2000,
                                            "min_count": null,
                                            "output_contigset_name": "CCESR16_MEGAHIT.assembly",
                                            "read_library_ref": "Sample_CCESR16"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "k_list": [],
                                "k_max": null,
                                "k_min": null,
                                "k_step": null,
                                "megahit_parameter_preset": "",
                                "min_contig_length": 2000,
                                "min_count": null,
                                "output_contigset_name": "CCESR16_MEGAHIT.assembly",
                                "read_library_ref": "Sample_CCESR16"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:20:59 GMT",
                            "id": "b90b5dc1-1209-4a5e-9985-d89f41faee01",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/MEGAHIT/run_megahit/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                            "title": "Assemble Reads with MEGAHIT v1.1.1"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"MEGAHIT/run_megahit\",\n    {\n        \"read_library_ref\": \"Sample_CCESR16\",\n        \"output_contigset_name\": \"CCESR16_MEGAHIT.assembly\",\n        \"megahit_parameter_preset\": \"\",\n        \"min_count\": None,\n        \"k_min\": None,\n        \"k_max\": None,\n        \"k_step\": None,\n        \"k_list\": [],\n        \"min_contig_length\": 2000\n    },\n    tag=\"release\",\n    version=\"2.2.8\",\n    cell_id=\"b90b5dc1-1209-4a5e-9985-d89f41faee01\",\n    run_id=\"4877f32a-7035-459e-ae07-122914e7e8a0\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Assess Assembly Quality with CheckM"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Assess Assembly Quality with CheckM\n\nCheckM allows us to also see the marker lineage for assemblies or binned contigs, as well as how complete and contaminated assemblies or binned contigs are. The letters \"k, p, c, o, f, g, s\" in front of the marker lineage represents either kingdom, phylum, class, order, family, genus, or species. Both completeness and contamination ratings are in units of percentages. (CheckM literature : http://genome.cshlp.org/content/25/7/1043.full)\n\nIn this sample, CheckM reports a ~97% contamination which tells us the sample may represent multiple genomes. In the next step, we will use a Contig Binner to verify this hypothesis.\n\n#### Step 3"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assess Genome Quality with CheckM - v1.0.18",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a87081fe4b07981a2f9339d": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 12 Mar 2018 21:11:27 GMT",
                                        "params": {
                                            "input_ref": "CCESR16_MEGAHIT.assembly",
                                            "reduced_tree": "1",
                                            "save_all_plots": "1"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_ref": "CCESR16_MEGAHIT.assembly",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:22:28 GMT",
                            "id": "01a26e5f-46e6-4738-ac6d-01ff7703f41d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"CCESR16_MEGAHIT.assembly\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"01a26e5f-46e6-4738-ac6d-01ff7703f41d\",\n    run_id=\"7962fb50-05e8-4d6a-add3-ecebcabecf10\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Contig Binning with MaxBin 2"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Contig Binning with MaxBin 2\n\nKBase currently only offers MaxBin 2 as a genome binner. MaxBin relies on an Expectation-Maximization (EM) algorithm to separate draft genomes from a metagenome sample. By focusing on the tetranuncleotide frequencies of the contigs and their coverage to determine the binning of each genome, the app is able to bin contigs into bins, depending on their properties and akin to a shared genome. \n\nAs we hypothesized in the previous step, there are two genomes in this sample. In the results below, a total of 120 contigs were binned out of 147 total inputted contigs and MaxBin 2.0 was able to create two bins, which will lead to two individual genomes.\n\n#### Step 4"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cb01c12e327a089953f59f4085623d9046daa11a",
                                "id": "kb_maxbin/run_maxbin2",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "assembly_ref",
                                                "target_property": "assembly_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "binned_contig_name",
                                                "target_property": "binned_contig_name"
                                            },
                                            {
                                                "input_parameter": "reads_list",
                                                "target_property": "reads_list",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "constant_value": 4,
                                                "target_property": "thread"
                                            },
                                            {
                                                "input_parameter": "prob_threshold",
                                                "target_property": "prob_threshold"
                                            },
                                            {
                                                "input_parameter": "markerset",
                                                "target_property": "markerset"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "plotmarker",
                                                "target_property": "plotmarker"
                                            }
                                        ],
                                        "kb_service_method": "run_max_bin",
                                        "kb_service_name": "kb_maxbin",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "result_directory"
                                                ],
                                                "target_property": "result_directory"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "binned_contig_obj_ref"
                                                ],
                                                "target_property": "binned_contig_obj_ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "binned_contig_obj_ref"
                                                ],
                                                "target_property": "objRef"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cb01c12e327a089953f59f4085623d9046daa11a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "cb01c12e327a089953f59f4085623d9046daa11a",
                                        "icon": {
                                            "url": "img?method_id=kb_maxbin/run_maxbin2&image_name=maxbin2-green.png&tag=release"
                                        },
                                        "id": "kb_maxbin/run_maxbin2",
                                        "input_types": [
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "kb_maxbin",
                                        "name": "MaxBin2 Contig Binning - v2.2.3",
                                        "namespace": "kb_maxbin",
                                        "output_types": [
                                            "KBaseMetagenomes.BinnedContigs"
                                        ],
                                        "subtitle": "Bin assembled metagenomic contigs",
                                        "tooltip": "Group assembled metagenomic contigs into lineages (Binning) using depth-of-coverage, nucleotide composition, and marker genes",
                                        "ver": "1.0.0"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Metagenome assembly object",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_ref",
                                            "optional": 0,
                                            "short_hint": "Metagenome assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly Object"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Output BinnedContig object name",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "binned_contig_name",
                                            "optional": 0,
                                            "short_hint": "Output BinnedContig object name",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "BinnedContig Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of reads object (PairedEndLibrary/SingleEndLibrary) upon which MaxBin will be run",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "reads_list",
                                            "optional": 0,
                                            "short_hint": "A list of reads object (PairedEndLibrary/SingleEndLibrary) upon which MaxBin will be run",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Library Object"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.8"
                                            ],
                                            "description": "Minimum probability for EM algorithm (default 0.8). Sequences that do not meet the threshold are discarded as 'unclassified'.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "prob_threshold",
                                            "optional": 1,
                                            "short_hint": "Minimum probability for EM algorithm (default 0.8)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Probability Threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "107"
                                            ],
                                            "description": "By default MaxBin will look for 107 marker genes present in >95% of bacteria. Alternatively you can also choose 40 marker gene sets that are universal among bacteria and archaea.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "107 Bacterial Marker Gene Set",
                                                        "index": 0,
                                                        "value": "107"
                                                    },
                                                    {
                                                        "display": "40 Bacterial and Archaeal Marker Gene Set",
                                                        "index": 1,
                                                        "value": "40"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "markerset",
                                            "optional": 1,
                                            "short_hint": "Choose between 107 marker genes by default or 40 marker genes",
                                            "ui_class": "parameter",
                                            "ui_name": "Marker Set"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1000"
                                            ],
                                            "description": "minimum contig length (default 1000)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 1,
                                            "short_hint": "minimum contig length (default 1000)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Specify this option if you want to plot the markers in each contig",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "plotmarker",
                                            "optional": 1,
                                            "short_hint": "Specify this option if you want to plot the markers in each contig",
                                            "ui_class": "parameter",
                                            "ui_name": "Plot Markers per Contig"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseNarrativeMethodInput",
                                        "output": "kbaseBinnedContigs"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.0"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Bin Contigs using MaxBin2 - v2.2.4",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "assembly_ref": "CCESR16_MEGAHIT.assembly",
                                "binned_contig_name": "CCESR16_MEGAHIT.Bins",
                                "markerset": "107",
                                "min_contig_length": 1000,
                                "plotmarker": 0,
                                "prob_threshold": 0.8,
                                "reads_list": [
                                    "24035/4/2"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Wed, 06 Sep 2017 15:18:47 GMT",
                            "id": "4d6ba671-fa4d-4fd9-810e-8cf26d0ad4be",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_maxbin/run_maxbin2/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Bin assembled metagenomic contigs",
                            "title": "MaxBin2 Contig Binning - v2.2.3"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_maxbin/run_maxbin2\",\n    {\n        \"reads_list\": [\"24035/4/2\"],\n        \"plotmarker\": 0,\n        \"markerset\": \"107\",\n        \"prob_threshold\": 0.8,\n        \"binned_contig_name\": \"CCESR16_MEGAHIT.Bins\",\n        \"assembly_ref\": \"CCESR16_MEGAHIT.assembly\",\n        \"min_contig_length\": 1000\n    },\n    tag=\"release\",\n    version=\"1.0.0\",\n    cell_id=\"4d6ba671-fa4d-4fd9-810e-8cf26d0ad4be\",\n    run_id=\"f740c791-1b21-4e6f-8f5f-d7c3641c25ce\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "We used CheckM once again, this time on the Binned..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "We used CheckM once again, this time on the Binned Contigs objects to assess the genome completeness of each genome bin. \n\nThe results show a 100% completness for \"CCESR16_MEGAHIT.bins.001\" and 99.65% for \"CCESR16_MEGAHIT.bins.002\". Both genomes show <1% contamination. \n\n#### Step 5"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assess Genome Quality with CheckM - v1.0.18",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "input_ref": "CCESR16_MEGAHIT.Bins",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:25:37 GMT",
                            "id": "f24ccc7b-9d12-4848-9511-1d84bcb85fb3",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"CCESR16_MEGAHIT.Bins\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"f24ccc7b-9d12-4848-9511-1d84bcb85fb3\",\n    run_id=\"18c64959-250a-4299-beca-c1b90408b8f2\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Assemble with IDBA metagenomic assembler"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Assemble with IDBA metagenomic assembler \nIt is a good practise to use multiple assemblers if available, in order to identify which assembler perform better with your reads sample. Based on the different characteristic of reads, certain assemblers perform better than others. In this demo, we ran the same analysis with <b>IDBA</b> metagenomic assembler in addition to Megahit assembler.\n\n\n#### Step 6"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "6b53504432594986d85ad0895cd3b99cd3720be8",
                                "id": "kb_IDBA/run_idba_ud",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_idba_ud",
                                        "kb_service_name": "kb_IDBA",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "IDBA_result"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "6b53504432594986d85ad0895cd3b99cd3720be8"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "umaganapathyswork",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "6b53504432594986d85ad0895cd3b99cd3720be8",
                                        "icon": {
                                            "url": "img?method_id=kb_IDBA/run_idba_ud&image_name=idba-ud.png&tag=release"
                                        },
                                        "id": "kb_IDBA/run_idba_ud",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseFile.PairedEndLibrary"
                                        ],
                                        "module_name": "kb_IDBA",
                                        "name": "Assemble with IDBA-UD v1.1.3",
                                        "namespace": "kb_IDBA",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble paired-end reads from single-cell or metagenomic sequencing technologies using the IDBA-UD assembler.",
                                        "tooltip": "Assemble paired-end reads from single-cell or metagenomic sequencing technologies using the IDBA-UD assembler.",
                                        "ver": "1.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The libraries of reads (length upto 512bp) to be assembled",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "The libraries of reads (length upto 512bp) to be assembled",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Reads library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "IDBA.contigs"
                                            ],
                                            "description": "The name under which the resulting ContigSet will be saved in the Narrative",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting ContigSet will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2000"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object, should be less than largest output contig size",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 300,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.1"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assemble Reads with IDBA-UD - v1.1.3",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "min_contig_length": 2000,
                                "output_contigset_name": "CCESR16_IDBA.assembly",
                                "read_libraries": "Sample_CCESR16"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:26:07 GMT",
                            "id": "caa207bf-cdcf-4bb9-8fa9-0a67e750f42e",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_IDBA/run_idba_ud/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Assemble paired-end reads from single-cell or metagenomic sequencing technologies using the IDBA-UD assembler.",
                            "title": "Assemble with IDBA-UD v1.1.3"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_IDBA/run_idba_ud\",\n    {\n        \"read_libraries\": \"Sample_CCESR16\",\n        \"output_contigset_name\": \"CCESR16_IDBA.assembly\",\n        \"min_contig_length\": 2000\n    },\n    tag=\"release\",\n    version=\"1.0.1\",\n    cell_id=\"caa207bf-cdcf-4bb9-8fa9-0a67e750f42e\",\n    run_id=\"5d9ecb3e-7a3a-49c8-ad8a-a8690ab31df9\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assess Genome Quality with CheckM - v1.0.18",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "input_ref": "CCESR16_IDBA.assembly",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:27:07 GMT",
                            "id": "0ba4bdcb-f50b-489c-9afe-77604e6d5a60",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"CCESR16_IDBA.assembly\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"0ba4bdcb-f50b-489c-9afe-77604e6d5a60\",\n    run_id=\"5f826771-f688-48f9-b062-ba3b3cc0d447\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "We bin IDBA assembly with MaxBin 2 which resulted ..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "We bin IDBA assembly with MaxBin 2 which resulted in providing two bins.\n\n\n#### Step 7"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cb01c12e327a089953f59f4085623d9046daa11a",
                                "id": "kb_maxbin/run_maxbin2",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "assembly_ref",
                                                "target_property": "assembly_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "binned_contig_name",
                                                "target_property": "binned_contig_name"
                                            },
                                            {
                                                "input_parameter": "reads_list",
                                                "target_property": "reads_list",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "constant_value": 4,
                                                "target_property": "thread"
                                            },
                                            {
                                                "input_parameter": "prob_threshold",
                                                "target_property": "prob_threshold"
                                            },
                                            {
                                                "input_parameter": "markerset",
                                                "target_property": "markerset"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "plotmarker",
                                                "target_property": "plotmarker"
                                            }
                                        ],
                                        "kb_service_method": "run_max_bin",
                                        "kb_service_name": "kb_maxbin",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "result_directory"
                                                ],
                                                "target_property": "result_directory"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "binned_contig_obj_ref"
                                                ],
                                                "target_property": "binned_contig_obj_ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "binned_contig_obj_ref"
                                                ],
                                                "target_property": "objRef"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cb01c12e327a089953f59f4085623d9046daa11a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "cb01c12e327a089953f59f4085623d9046daa11a",
                                        "icon": {
                                            "url": "img?method_id=kb_maxbin/run_maxbin2&image_name=maxbin2-green.png&tag=release"
                                        },
                                        "id": "kb_maxbin/run_maxbin2",
                                        "input_types": [
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "kb_maxbin",
                                        "name": "MaxBin2 Contig Binning - v2.2.3",
                                        "namespace": "kb_maxbin",
                                        "output_types": [
                                            "KBaseMetagenomes.BinnedContigs"
                                        ],
                                        "subtitle": "Bin assembled metagenomic contigs",
                                        "tooltip": "Group assembled metagenomic contigs into lineages (Binning) using depth-of-coverage, nucleotide composition, and marker genes",
                                        "ver": "1.0.0"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Metagenome assembly object",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_ref",
                                            "optional": 0,
                                            "short_hint": "Metagenome assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly Object"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Output BinnedContig object name",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "binned_contig_name",
                                            "optional": 0,
                                            "short_hint": "Output BinnedContig object name",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "BinnedContig Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of reads object (PairedEndLibrary/SingleEndLibrary) upon which MaxBin will be run",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "reads_list",
                                            "optional": 0,
                                            "short_hint": "A list of reads object (PairedEndLibrary/SingleEndLibrary) upon which MaxBin will be run",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Library Object"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.8"
                                            ],
                                            "description": "Minimum probability for EM algorithm (default 0.8). Sequences that do not meet the threshold are discarded as 'unclassified'.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "prob_threshold",
                                            "optional": 1,
                                            "short_hint": "Minimum probability for EM algorithm (default 0.8)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Probability Threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "107"
                                            ],
                                            "description": "By default MaxBin will look for 107 marker genes present in >95% of bacteria. Alternatively you can also choose 40 marker gene sets that are universal among bacteria and archaea.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "107 Bacterial Marker Gene Set",
                                                        "index": 0,
                                                        "value": "107"
                                                    },
                                                    {
                                                        "display": "40 Bacterial and Archaeal Marker Gene Set",
                                                        "index": 1,
                                                        "value": "40"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "markerset",
                                            "optional": 1,
                                            "short_hint": "Choose between 107 marker genes by default or 40 marker genes",
                                            "ui_class": "parameter",
                                            "ui_name": "Marker Set"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1000"
                                            ],
                                            "description": "minimum contig length (default 1000)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 1,
                                            "short_hint": "minimum contig length (default 1000)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Specify this option if you want to plot the markers in each contig",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "plotmarker",
                                            "optional": 1,
                                            "short_hint": "Specify this option if you want to plot the markers in each contig",
                                            "ui_class": "parameter",
                                            "ui_name": "Plot Markers per Contig"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseNarrativeMethodInput",
                                        "output": "kbaseBinnedContigs"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.0"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Bin Contigs using MaxBin2 - v2.2.4",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "assembly_ref": "CCESR16_IDBA.assembly",
                                "binned_contig_name": "CCESR16_IDBA.Bins",
                                "markerset": "107",
                                "min_contig_length": 1000,
                                "plotmarker": 0,
                                "prob_threshold": 0.8,
                                "reads_list": [
                                    "24065/4/2"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Wed, 06 Sep 2017 15:20:41 GMT",
                            "id": "0a5569ff-58ff-4728-92ca-e14fdb4a7e3f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_maxbin/run_maxbin2/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Bin assembled metagenomic contigs",
                            "title": "MaxBin2 Contig Binning - v2.2.3"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_maxbin/run_maxbin2\",\n    {\n        \"reads_list\": [\"24065/4/2\"],\n        \"plotmarker\": 0,\n        \"markerset\": \"107\",\n        \"prob_threshold\": 0.8,\n        \"binned_contig_name\": \"CCESR16_IDBA.Bins\",\n        \"assembly_ref\": \"CCESR16_IDBA.assembly\",\n        \"min_contig_length\": 1000\n    },\n    tag=\"release\",\n    version=\"1.0.0\",\n    cell_id=\"0a5569ff-58ff-4728-92ca-e14fdb4a7e3f\",\n    run_id=\"71fb444c-9195-4dc0-a22a-1ef9500c8ce0\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "And the last step, we run CheckM for the bins crea..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "And the last step, we run CheckM for the bins created from the IDBA assembly.\n\n\n#### Step 8"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Assess Genome Quality with CheckM - v1.0.18",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "input_ref": "CCESR16_IDBA.Bins",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:27:31 GMT",
                            "id": "4f47b2af-9e71-4cbe-ae10-c0098b85d9f5",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"CCESR16_IDBA.Bins\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"4f47b2af-9e71-4cbe-ae10-c0098b85d9f5\",\n    run_id=\"eeda818e-accc-4aa4-8563-6417b76023f9\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "CheckM results show exactly the same results in wh..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "CheckM results show exactly the same results in what regards to genome completeness and contamination for the Bins from the three different assemblers. For consistency, we choose to use the genome Bins from the IDBA assembly, as the assemblies from this particular assembler performed overall better in our analysis the other samples in this study.\n\n### Extract Bins as Assemblies\n\nThe next step is to use the \"Extract Bins as Assemblies from BinnedContigs - v1.0.0\" App to extract the Assemblies from the bins.\n\n\n#### Step 9"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "66c2d8b2b1baab8a3d81cca10068df455db4a321",
                                "id": "MetagenomeUtils/extract_bins_as_assemblies",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "binned_contig_obj_ref",
                                                "target_property": "binned_contig_obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "extracted_assemblies",
                                                "target_property": "extracted_assemblies"
                                            }
                                        ],
                                        "kb_service_method": "extract_binned_contigs_as_assembly",
                                        "kb_service_name": "MetagenomeUtils",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "assembly_ref_list"
                                                ],
                                                "target_property": "assembly_ref_list"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "66c2d8b2b1baab8a3d81cca10068df455db4a321"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "66c2d8b2b1baab8a3d81cca10068df455db4a321",
                                        "icon": {
                                            "url": "img?method_id=MetagenomeUtils/extract_bins_as_assemblies&image_name=binutil-green.png&tag=release"
                                        },
                                        "id": "MetagenomeUtils/extract_bins_as_assemblies",
                                        "input_types": [
                                            "KBaseMetagenomes.BinnedContigs"
                                        ],
                                        "module_name": "MetagenomeUtils",
                                        "name": "Extract Bins as Assemblies from BinnedContigs - v1.0.0",
                                        "namespace": "MetagenomeUtils",
                                        "output_types": [],
                                        "subtitle": "Extract a bin as an Assembly from a BinnedContig dataset",
                                        "tooltip": "Extract a bin as an Assembly from a BinnedContig dataset",
                                        "ver": "1.0.0"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "",
                                            "id": "extracted_assemblies",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "bin_id",
                                                "assembly_suffix"
                                            ],
                                            "short_hint": "Specify the bins and assembly names to extract",
                                            "ui_name": "Assemblies to Extract",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "binned_contig_obj_ref",
                                            "optional": 0,
                                            "short_hint": "the binned contig data to edit",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Binned Contigs"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "bin_id",
                                            "optional": 0,
                                            "short_hint": "Enter the name of the bin to extract",
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "parameter_id": "binned_contig_obj_ref",
                                                    "path_to_subdata": [
                                                        "bins"
                                                    ],
                                                    "selection_id": "bid",
                                                    "subdata_included": [
                                                        "bins/[*]/bid"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Bin Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "_assembly"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_suffix",
                                            "optional": 0,
                                            "short_hint": "provide a suffix append to Bin name for new Assembly name",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Assembly Name Suffix"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.0"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "6bd1dd52-5b46-4514-9488-30aa73315e6f",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                                    "creation_time": 1520980125490,
                                    "exec_start_time": 1520980127720,
                                    "finish_time": 1520980250857,
                                    "finished": 1,
                                    "job_id": "5aa8509de4b07981a2f94deb",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "assembly_ref_list": [
                                                "24065/139/1",
                                                "24065/140/1"
                                            ],
                                            "report_name": "MetagenomeUtils_report_c6a41607-bc8a-4fa2-a451-9b0564d7c5e7",
                                            "report_ref": "24065/141/1"
                                        }
                                    ],
                                    "run_id": "330fb894-2be2-4267-b0c5-a42c60bebbf6",
                                    "status": [
                                        "2018-03-13T22:30:50+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1520980258196,
                                "launchState": {
                                    "cell_id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                                    "event": "launched_job",
                                    "event_at": "2018-03-13T22:28:45.485558Z",
                                    "job_id": "5aa8509de4b07981a2f94deb",
                                    "run_id": "330fb894-2be2-4267-b0c5-a42c60bebbf6"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-03-13T22:28:45.030Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-03-13T22:28:45.527Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "6bd1dd52-5b46-4514-9488-30aa73315e6f",
                                                "awe_job_state": "queued",
                                                "cell_id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                                                "creation_time": 1520980125490,
                                                "finished": 0,
                                                "job_id": "5aa8509de4b07981a2f94deb",
                                                "job_state": "queued",
                                                "position": 27,
                                                "run_id": "330fb894-2be2-4267-b0c5-a42c60bebbf6",
                                                "status": [
                                                    "2018-03-13T22:28:45+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "f06ff6b1-d6ab-4db4-a04e-fef523973190",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:28:45.693Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "6bd1dd52-5b46-4514-9488-30aa73315e6f",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                                                "creation_time": 1520980125490,
                                                "exec_start_time": 1520980127720,
                                                "finished": 0,
                                                "job_id": "5aa8509de4b07981a2f94deb",
                                                "job_state": "in-progress",
                                                "run_id": "330fb894-2be2-4267-b0c5-a42c60bebbf6",
                                                "status": [
                                                    "2018-03-13T22:28:47+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:28:54.544Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "6bd1dd52-5b46-4514-9488-30aa73315e6f",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                                                "creation_time": 1520980125490,
                                                "exec_start_time": 1520980127720,
                                                "finish_time": 1520980250857,
                                                "finished": 1,
                                                "job_id": "5aa8509de4b07981a2f94deb",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "assembly_ref_list": [
                                                            "24065/139/1",
                                                            "24065/140/1"
                                                        ],
                                                        "report_name": "MetagenomeUtils_report_c6a41607-bc8a-4fa2-a451-9b0564d7c5e7",
                                                        "report_ref": "24065/141/1"
                                                    }
                                                ],
                                                "run_id": "330fb894-2be2-4267-b0c5-a42c60bebbf6",
                                                "status": [
                                                    "2018-03-13T22:30:50+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:30:58.196Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "assembly_ref_list": [
                                            "24065/139/1",
                                            "24065/140/1"
                                        ],
                                        "report_name": "MetagenomeUtils_report_c6a41607-bc8a-4fa2-a451-9b0564d7c5e7",
                                        "report_ref": "24065/141/1",
                                        "report_window_line_height": "16",
                                        "wsName": "janakakbase:narrative_1504758657134"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Extract Bins as Assemblies from BinnedContigs - v1.0.2",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "59b01b4de4b0e2363d449642": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Thu, 07 Sep 2017 04:31:07 GMT",
                                        "params": {
                                            "binned_contig_obj_ref": "CCESR16_IDBA.Bins",
                                            "extracted_assemblies": [
                                                {
                                                    "assembly_suffix": " CCESR16_IDBA.bin.001.assembly",
                                                    "bin_id": [
                                                        "Bin.001.fasta"
                                                    ]
                                                },
                                                {
                                                    "assembly_suffix": " CCESR16_IDBA.bin.002.assembly",
                                                    "bin_id": [
                                                        "Bin.002.fasta"
                                                    ]
                                                }
                                            ]
                                        }
                                    },
                                    "5aa8509de4b07981a2f94deb": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 04:03:30 GMT",
                                        "params": {
                                            "binned_contig_obj_ref": "CCESR16_IDBA.Bins",
                                            "extracted_assemblies": [
                                                {
                                                    "assembly_suffix": "Bin1_assembly",
                                                    "bin_id": [
                                                        "Bin.001.fasta"
                                                    ]
                                                },
                                                {
                                                    "assembly_suffix": "_assembly",
                                                    "bin_id": [
                                                        "Bin.002.fasta"
                                                    ]
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "binned_contig_obj_ref": "CCESR16_IDBA.Bins",
                                "extracted_assemblies": [
                                    {
                                        "assembly_suffix": "Bin1_assembly",
                                        "bin_id": [
                                            "Bin.001.fasta"
                                        ]
                                    },
                                    {
                                        "assembly_suffix": "_assembly",
                                        "bin_id": [
                                            "Bin.002.fasta"
                                        ]
                                    }
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Wed, 06 Sep 2017 15:58:09 GMT",
                            "id": "2e6d82d4-c0ea-4032-b8a2-a49a584e8b51",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/MetagenomeUtils/extract_bins_as_assemblies/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Extract a bin as an Assembly from a BinnedContig dataset",
                            "title": "Extract Bins as Assemblies from BinnedContigs - v1.0.0"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"MetagenomeUtils/extract_bins_as_assemblies\",\n    {\n        \"binned_contig_obj_ref\": \"CCESR16_IDBA.Bins\",\n        \"extracted_assemblies\": [{\n            \"bin_id\": [\"Bin.001.fasta\"],\n            \"assembly_suffix\": \"Bin1_assembly\"\n        }, {\n            \"bin_id\": [\"Bin.002.fasta\"],\n            \"assembly_suffix\": \"_assembly\"\n        }]\n    },\n    tag=\"release\",\n    version=\"1.0.0\",\n    cell_id=\"2e6d82d4-c0ea-4032-b8a2-a49a584e8b51\",\n    run_id=\"330fb894-2be2-4267-b0c5-a42c60bebbf6\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotate Microbial Assemblies"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Annotate Microbial Assemblies\n\nWe used the RAST \"Annotate Microbial Assembly\" App to annotate the two assemblies from our analysis.\n\nFor the mandatory field \"Scientific Name\" used information available from the CheckM report and choose \"_Burkholderiales_ sp\" and \"_Flavobacteriaceae_ sp\" for bin001 and bin002 respectively.\n\n\n#### Step 10"
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                "id": "RAST_SDK/annotate_contigset",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_contigset",
                                                "target_property": "input_contigset",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "scientific_name",
                                                "target_property": "scientific_name"
                                            },
                                            {
                                                "input_parameter": "domain",
                                                "target_property": "domain"
                                            },
                                            {
                                                "input_parameter": "genetic_code",
                                                "target_property": "genetic_code"
                                            },
                                            {
                                                "input_parameter": "call_features_rRNA_SEED",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_tRNA_trnascan",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "input_parameter": "call_selenoproteins",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "input_parameter": "call_pyrrolysoproteins",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "input_parameter": "call_features_repeat_region_SEED",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_insertion_sequences",
                                                "target_property": "call_features_insertion_sequences"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_suis_repeat",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_pneumo_repeat",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_crispr",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_glimmer3",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_prodigal",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_kmer_v2",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "input_parameter": "kmer_v1_parameters",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_similarity",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "input_parameter": "resolve_overlapping_features",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "input_parameter": "find_close_neighbors",
                                                "target_property": "find_close_neighbors"
                                            },
                                            {
                                                "input_parameter": "call_features_prophage_phispy",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genome_"
                                                },
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "44dd19a28a24ec2fdd178f5bf9f80303050412af"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry",
                                            "olson"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/annotate_contigset&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/annotate_contigset",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Microbial Assembly",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "tooltip": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "ver": "0.0.11"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "An Assembly or ContigSet object to annotate",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_contigset",
                                            "optional": 0,
                                            "short_hint": "An Assembly or ContigSet object to annotate",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The scientific name to assign to the genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "scientific_name",
                                            "optional": 0,
                                            "short_hint": "The scientific name to assign to the genome",
                                            "ui_class": "parameter",
                                            "ui_name": "Scientific Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "B"
                                            ],
                                            "description": "The domain of life of the organism being annotated",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "B (Bacteria)",
                                                        "index": 0,
                                                        "value": "B"
                                                    },
                                                    {
                                                        "display": "A (Archaea)",
                                                        "index": 1,
                                                        "value": "A"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "domain",
                                            "optional": 0,
                                            "short_hint": "The domain of life of the organism being annotated",
                                            "ui_class": "parameter",
                                            "ui_name": "Domain"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "11"
                                            ],
                                            "description": "The genetic code used in translating to protein sequences",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)",
                                                        "index": 0,
                                                        "value": "11"
                                                    },
                                                    {
                                                        "display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)",
                                                        "index": 1,
                                                        "value": "4"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "genetic_code",
                                            "optional": 0,
                                            "short_hint": "The genetic code used in translating to protein sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic Code"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 0,
                                            "short_hint": "Name to assign the output genome",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call rRNAs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_rRNA_SEED",
                                            "optional": 0,
                                            "short_hint": "Call rRNAs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call rRNAs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call tRNAs with tRNAscan",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_tRNA_trnascan",
                                            "optional": 0,
                                            "short_hint": "Call tRNAs with tRNAscan",
                                            "ui_class": "parameter",
                                            "ui_name": "Call tRNAs with tRNAscan"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call selenoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_selenoproteins",
                                            "optional": 0,
                                            "short_hint": "Call selenoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call selenoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_pyrrolysoproteins",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call pyrrolysoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_repeat_region_SEED",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call large repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call insertion sequences",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_insertion_sequences",
                                            "optional": 0,
                                            "short_hint": "Call insertion sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Call insertion sequences"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find Streptococcus repeat regions",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_suis_repeat",
                                            "optional": 0,
                                            "short_hint": "Find Streptococcus repeat regions",
                                            "ui_class": "parameter",
                                            "ui_name": "Find Streptococcus repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call features strep pneumo repeat",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_pneumo_repeat",
                                            "optional": 0,
                                            "short_hint": "Call features strep pneumo repeat",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features strep pneumo repeat"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call CRISPRs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_crispr",
                                            "optional": 0,
                                            "short_hint": "Call CRISPRs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call CRISPRs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Glimmer3",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_glimmer3",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Glimmer3",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Glimmer3"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Prodigal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_prodigal",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Prodigal",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Prodigal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate protein-encoding genes with k-mers v2",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_kmer_v2",
                                            "optional": 0,
                                            "short_hint": "Annotate protein-encoding genes with k-mers v2",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate protein-encoding genes with k-mers v2"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins with k-mers",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "kmer_v1_parameters",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins with k-mers",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins with k-mers"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_similarity",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Perform basic gene overlap removal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "resolve_overlapping_features",
                                            "optional": 0,
                                            "short_hint": "Perform basic gene overlap removal",
                                            "ui_class": "parameter",
                                            "ui_name": "Perform basic gene overlap removal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find close neighbors",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "find_close_neighbors",
                                            "optional": 0,
                                            "short_hint": "Find close neighbors",
                                            "ui_class": "parameter",
                                            "ui_name": "Find close neighbors"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Find prophage elements with phispy",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_prophage_phispy",
                                            "optional": 0,
                                            "short_hint": "Find prophage elements with phispy",
                                            "ui_class": "parameter",
                                            "ui_name": "Find prophage elements with phispy"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.11"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Annotate Microbial Assembly",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a870d29e4b07981a2f933db": {
                                        "cell": {
                                            "created": true,
                                            "id": "346746f6-796b-44cd-a0a9-c5ee250fd910"
                                        },
                                        "createdAt": "Tue, 13 Mar 2018 03:30:44 GMT",
                                        "params": {
                                            "annotate_proteins_kmer_v2": 1,
                                            "annotate_proteins_similarity": 1,
                                            "call_features_CDS_glimmer3": 1,
                                            "call_features_CDS_prodigal": 1,
                                            "call_features_crispr": 1,
                                            "call_features_insertion_sequences": 0,
                                            "call_features_prophage_phispy": 0,
                                            "call_features_rRNA_SEED": 1,
                                            "call_features_repeat_region_SEED": 1,
                                            "call_features_strep_pneumo_repeat": 1,
                                            "call_features_strep_suis_repeat": 1,
                                            "call_features_tRNA_trnascan": 1,
                                            "call_pyrrolysoproteins": 1,
                                            "call_selenoproteins": 1,
                                            "domain": "B",
                                            "find_close_neighbors": 1,
                                            "genetic_code": "11",
                                            "input_contigset": "Bin.001.fastaCCESR16_IDBA.bin.001.assembly",
                                            "kmer_v1_parameters": 1,
                                            "output_genome": "CCESR16_IDBA.bin.001.genome",
                                            "resolve_overlapping_features": 1,
                                            "scientific_name": "Burkholderiales sp"
                                        }
                                    },
                                    "5aa850dee4b07981a2f94ded": {
                                        "cell": {
                                            "created": true,
                                            "id": "4e1a7aa3-2c7b-4f0b-946a-8e1ca20c80c6"
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 04:03:33 GMT",
                                        "params": {
                                            "annotate_proteins_kmer_v2": 1,
                                            "annotate_proteins_similarity": 1,
                                            "call_features_CDS_glimmer3": 1,
                                            "call_features_CDS_prodigal": 1,
                                            "call_features_crispr": 1,
                                            "call_features_insertion_sequences": 0,
                                            "call_features_prophage_phispy": 0,
                                            "call_features_rRNA_SEED": 1,
                                            "call_features_repeat_region_SEED": 1,
                                            "call_features_strep_pneumo_repeat": 1,
                                            "call_features_strep_suis_repeat": 1,
                                            "call_features_tRNA_trnascan": 1,
                                            "call_pyrrolysoproteins": 1,
                                            "call_selenoproteins": 1,
                                            "domain": "B",
                                            "find_close_neighbors": 1,
                                            "genetic_code": "11",
                                            "input_contigset": "Bin.001.fastaCCESR16_IDBA.bin.001.assembly",
                                            "kmer_v1_parameters": 1,
                                            "output_genome": "CCESR16_IDBA.bin.001.genome",
                                            "resolve_overlapping_features": 1,
                                            "scientific_name": "Burkholderiales sp"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "annotate_proteins_kmer_v2": 1,
                                "annotate_proteins_similarity": 1,
                                "call_features_CDS_glimmer3": 1,
                                "call_features_CDS_prodigal": 1,
                                "call_features_crispr": 1,
                                "call_features_insertion_sequences": 0,
                                "call_features_prophage_phispy": 0,
                                "call_features_rRNA_SEED": 1,
                                "call_features_repeat_region_SEED": 1,
                                "call_features_strep_pneumo_repeat": 1,
                                "call_features_strep_suis_repeat": 1,
                                "call_features_tRNA_trnascan": 1,
                                "call_pyrrolysoproteins": 1,
                                "call_selenoproteins": 1,
                                "domain": "B",
                                "find_close_neighbors": 1,
                                "genetic_code": "11",
                                "input_contigset": "Bin.001.fastaCCESR16_IDBA.bin.001.assembly",
                                "kmer_v1_parameters": 1,
                                "output_genome": "CCESR16_IDBA.bin.001.genome",
                                "resolve_overlapping_features": 1,
                                "scientific_name": "Burkholderiales sp"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 15 Feb 2018 22:22:08 GMT",
                            "id": "98657dbc-a82d-453f-b10b-3110ee752d5f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/annotate_contigset/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                            "title": "Annotate Microbial Assembly"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/annotate_contigset\",\n    {\n        \"call_pyrrolysoproteins\": 1,\n        \"call_features_strep_suis_repeat\": 1,\n        \"domain\": \"B\",\n        \"kmer_v1_parameters\": 1,\n        \"call_features_crispr\": 1,\n        \"genetic_code\": \"11\",\n        \"call_features_CDS_prodigal\": 1,\n        \"call_features_rRNA_SEED\": 1,\n        \"call_features_insertion_sequences\": 0,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"call_features_prophage_phispy\": 0,\n        \"call_features_strep_pneumo_repeat\": 1,\n        \"call_selenoproteins\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"scientific_name\": \"Burkholderiales sp\",\n        \"call_features_tRNA_trnascan\": 1,\n        \"find_close_neighbors\": 1,\n        \"input_contigset\": \"Bin.001.fastaCCESR16_IDBA.bin.001.assembly\",\n        \"call_features_CDS_glimmer3\": 1,\n        \"output_genome\": \"CCESR16_IDBA.bin.001.genome\",\n        \"call_features_repeat_region_SEED\": 1,\n        \"resolve_overlapping_features\": 1\n    },\n    tag=\"release\",\n    version=\"0.0.11\",\n    cell_id=\"98657dbc-a82d-453f-b10b-3110ee752d5f\",\n    run_id=\"15541f1b-6993-446c-9ba8-f0963bef2fbd\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 04:03:33 GMT",
                            "icon": "arrow-right",
                            "id": "4e1a7aa3-2c7b-4f0b-946a-8e1ca20c80c6",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "title": "Output from Annotate Microbial Assembly"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5aa850dee4b07981a2f94ded",
                            "parentCellId": "98657dbc-a82d-453f-b10b-3110ee752d5f",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeView",
                                "params": {
                                    "id": "CCESR16_IDBA.bin.001.genome",
                                    "report_name": "CCESR16_IDBA.bin.001.genome.report",
                                    "report_ref": "24065/17/3",
                                    "workspace_name": "janakakbase:narrative_1504758657134",
                                    "ws": "janakakbase:narrative_1504758657134"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-6d1092a6-a4c0-44e6-ad5f-417f286dbf0c' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-6d1092a6-a4c0-44e6-ad5f-417f286dbf0c'), {\n                \"data\": {\"workspace_name\": \"janakakbase:narrative_1504758657134\", \"report_ref\": \"24065/17/3\", \"ws\": \"janakakbase:narrative_1504758657134\", \"id\": \"CCESR16_IDBA.bin.001.genome\", \"report_name\": \"CCESR16_IDBA.bin.001.genome.report\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseGenomeView\",\n                \"cellId\":\"4e1a7aa3-2c7b-4f0b-946a-8e1ca20c80c6\",\n                \"title\":\"\",\n                \"time\":1523333013363\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeView\",\n    {\n        \"workspace_name\": \"janakakbase:narrative_1504758657134\",\n        \"report_ref\": \"24065/17/3\",\n        \"ws\": \"janakakbase:narrative_1504758657134\",\n        \"id\": \"CCESR16_IDBA.bin.001.genome\",\n        \"report_name\": \"CCESR16_IDBA.bin.001.genome.report\"\n    },\n    tag=\"release\",\n    cell_id=\"4e1a7aa3-2c7b-4f0b-946a-8e1ca20c80c6\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 13 Mar 2018 03:30:44 GMT",
                            "icon": "arrow-right",
                            "id": "346746f6-796b-44cd-a0a9-c5ee250fd910",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "title": "Output from Annotate Microbial Assembly"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5a870d29e4b07981a2f933db",
                            "parentCellId": "98657dbc-a82d-453f-b10b-3110ee752d5f",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeView",
                                "params": {
                                    "id": "CCESR16_IDBA.bin.001.genome",
                                    "report_name": "CCESR16_IDBA.bin.001.genome.report",
                                    "report_ref": "24065/17/2",
                                    "workspace_name": "janakakbase:narrative_1504758657134",
                                    "ws": "janakakbase:narrative_1504758657134"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-7c2d9bcb-1d08-4ffd-9265-ae3af6f1c1b5' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-7c2d9bcb-1d08-4ffd-9265-ae3af6f1c1b5'), {\n                \"data\": {\"workspace_name\": \"janakakbase:narrative_1504758657134\", \"report_ref\": \"24065/17/2\", \"ws\": \"janakakbase:narrative_1504758657134\", \"id\": \"CCESR16_IDBA.bin.001.genome\", \"report_name\": \"CCESR16_IDBA.bin.001.genome.report\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseGenomeView\",\n                \"cellId\":\"346746f6-796b-44cd-a0a9-c5ee250fd910\",\n                \"title\":\"\",\n                \"time\":1520911845768\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeView\",\n    {\n        \"workspace_name\": \"janakakbase:narrative_1504758657134\",\n        \"report_ref\": \"24065/17/2\",\n        \"ws\": \"janakakbase:narrative_1504758657134\",\n        \"id\": \"CCESR16_IDBA.bin.001.genome\",\n        \"report_name\": \"CCESR16_IDBA.bin.001.genome.report\"\n    },\n    tag=\"release\",\n    cell_id=\"346746f6-796b-44cd-a0a9-c5ee250fd910\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotation of IDBA.bin.002 with RAST Annotate Micr..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "Annotation of IDBA.bin.002 with RAST Annotate Microbial Assembly app\n\n\n#### Step 11"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                "id": "RAST_SDK/annotate_contigset",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_contigset",
                                                "target_property": "input_contigset",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "scientific_name",
                                                "target_property": "scientific_name"
                                            },
                                            {
                                                "input_parameter": "domain",
                                                "target_property": "domain"
                                            },
                                            {
                                                "input_parameter": "genetic_code",
                                                "target_property": "genetic_code"
                                            },
                                            {
                                                "input_parameter": "call_features_rRNA_SEED",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_tRNA_trnascan",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "input_parameter": "call_selenoproteins",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "input_parameter": "call_pyrrolysoproteins",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "input_parameter": "call_features_repeat_region_SEED",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_insertion_sequences",
                                                "target_property": "call_features_insertion_sequences"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_suis_repeat",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_pneumo_repeat",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_crispr",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_glimmer3",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_prodigal",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_kmer_v2",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "input_parameter": "kmer_v1_parameters",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_similarity",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "input_parameter": "resolve_overlapping_features",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "input_parameter": "find_close_neighbors",
                                                "target_property": "find_close_neighbors"
                                            },
                                            {
                                                "input_parameter": "call_features_prophage_phispy",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genome_"
                                                },
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "44dd19a28a24ec2fdd178f5bf9f80303050412af"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry",
                                            "olson"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/annotate_contigset&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/annotate_contigset",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Microbial Assembly",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "tooltip": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "ver": "0.0.11"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "An Assembly or ContigSet object to annotate",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_contigset",
                                            "optional": 0,
                                            "short_hint": "An Assembly or ContigSet object to annotate",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The scientific name to assign to the genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "scientific_name",
                                            "optional": 0,
                                            "short_hint": "The scientific name to assign to the genome",
                                            "ui_class": "parameter",
                                            "ui_name": "Scientific Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "B"
                                            ],
                                            "description": "The domain of life of the organism being annotated",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "B (Bacteria)",
                                                        "index": 0,
                                                        "value": "B"
                                                    },
                                                    {
                                                        "display": "A (Archaea)",
                                                        "index": 1,
                                                        "value": "A"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "domain",
                                            "optional": 0,
                                            "short_hint": "The domain of life of the organism being annotated",
                                            "ui_class": "parameter",
                                            "ui_name": "Domain"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "11"
                                            ],
                                            "description": "The genetic code used in translating to protein sequences",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)",
                                                        "index": 0,
                                                        "value": "11"
                                                    },
                                                    {
                                                        "display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)",
                                                        "index": 1,
                                                        "value": "4"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "genetic_code",
                                            "optional": 0,
                                            "short_hint": "The genetic code used in translating to protein sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic Code"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 0,
                                            "short_hint": "Name to assign the output genome",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call rRNAs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_rRNA_SEED",
                                            "optional": 0,
                                            "short_hint": "Call rRNAs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call rRNAs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call tRNAs with tRNAscan",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_tRNA_trnascan",
                                            "optional": 0,
                                            "short_hint": "Call tRNAs with tRNAscan",
                                            "ui_class": "parameter",
                                            "ui_name": "Call tRNAs with tRNAscan"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call selenoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_selenoproteins",
                                            "optional": 0,
                                            "short_hint": "Call selenoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call selenoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_pyrrolysoproteins",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call pyrrolysoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_repeat_region_SEED",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call large repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call insertion sequences",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_insertion_sequences",
                                            "optional": 0,
                                            "short_hint": "Call insertion sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Call insertion sequences"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find Streptococcus repeat regions",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_suis_repeat",
                                            "optional": 0,
                                            "short_hint": "Find Streptococcus repeat regions",
                                            "ui_class": "parameter",
                                            "ui_name": "Find Streptococcus repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call features strep pneumo repeat",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_pneumo_repeat",
                                            "optional": 0,
                                            "short_hint": "Call features strep pneumo repeat",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features strep pneumo repeat"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call CRISPRs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_crispr",
                                            "optional": 0,
                                            "short_hint": "Call CRISPRs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call CRISPRs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Glimmer3",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_glimmer3",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Glimmer3",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Glimmer3"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Prodigal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_prodigal",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Prodigal",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Prodigal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate protein-encoding genes with k-mers v2",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_kmer_v2",
                                            "optional": 0,
                                            "short_hint": "Annotate protein-encoding genes with k-mers v2",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate protein-encoding genes with k-mers v2"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins with k-mers",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "kmer_v1_parameters",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins with k-mers",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins with k-mers"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_similarity",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Perform basic gene overlap removal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "resolve_overlapping_features",
                                            "optional": 0,
                                            "short_hint": "Perform basic gene overlap removal",
                                            "ui_class": "parameter",
                                            "ui_name": "Perform basic gene overlap removal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find close neighbors",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "find_close_neighbors",
                                            "optional": 0,
                                            "short_hint": "Find close neighbors",
                                            "ui_class": "parameter",
                                            "ui_name": "Find close neighbors"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Find prophage elements with phispy",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_prophage_phispy",
                                            "optional": 0,
                                            "short_hint": "Find prophage elements with phispy",
                                            "ui_class": "parameter",
                                            "ui_name": "Find prophage elements with phispy"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.11"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Annotate Microbial Assembly",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "annotate_proteins_kmer_v2": 1,
                                "annotate_proteins_similarity": 1,
                                "call_features_CDS_glimmer3": 1,
                                "call_features_CDS_prodigal": 1,
                                "call_features_crispr": 1,
                                "call_features_insertion_sequences": 0,
                                "call_features_prophage_phispy": 0,
                                "call_features_rRNA_SEED": 1,
                                "call_features_repeat_region_SEED": 1,
                                "call_features_strep_pneumo_repeat": 1,
                                "call_features_strep_suis_repeat": 1,
                                "call_features_tRNA_trnascan": 1,
                                "call_pyrrolysoproteins": 1,
                                "call_selenoproteins": 1,
                                "domain": "B",
                                "find_close_neighbors": 1,
                                "genetic_code": "11",
                                "input_contigset": "Bin.002.fastaCCESR16_IDBA.bin.002.assembly",
                                "kmer_v1_parameters": 1,
                                "output_genome": "CCESR16_IDBA.bin.002.genome",
                                "resolve_overlapping_features": 1,
                                "scientific_name": "Flavobacteriaceae sp."
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 15 Feb 2018 22:22:47 GMT",
                            "id": "dc1c66fe-647a-42d3-9b5e-841e9ab0600e",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/annotate_contigset/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                            "title": "Annotate Microbial Assembly"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/annotate_contigset\",\n    {\n        \"call_pyrrolysoproteins\": 1,\n        \"call_features_strep_suis_repeat\": 1,\n        \"domain\": \"B\",\n        \"kmer_v1_parameters\": 1,\n        \"call_features_crispr\": 1,\n        \"genetic_code\": \"11\",\n        \"call_features_CDS_prodigal\": 1,\n        \"call_features_rRNA_SEED\": 1,\n        \"call_features_insertion_sequences\": 0,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"call_features_prophage_phispy\": 0,\n        \"call_features_strep_pneumo_repeat\": 1,\n        \"call_selenoproteins\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"scientific_name\": \"Flavobacteriaceae sp.\",\n        \"call_features_tRNA_trnascan\": 1,\n        \"find_close_neighbors\": 1,\n        \"input_contigset\": \"Bin.002.fastaCCESR16_IDBA.bin.002.assembly\",\n        \"call_features_CDS_glimmer3\": 1,\n        \"output_genome\": \"CCESR16_IDBA.bin.002.genome\",\n        \"call_features_repeat_region_SEED\": 1,\n        \"resolve_overlapping_features\": 1\n    },\n    tag=\"release\",\n    version=\"0.0.11\",\n    cell_id=\"dc1c66fe-647a-42d3-9b5e-841e9ab0600e\",\n    run_id=\"8825f8f8-a9b1-4c6e-9521-629934e64840\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotation of IDBA.bin.001 with Prokka annotation ..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Annotation of IDBA.bin.001 with Prokka annotation algorithm \n\nIt is often the case that different annotation algorithms can produce slightly different results in terms of number of genes get called or the functions that get assigned to genes. If a user does not find a certain functional annotation for a given genome, user may run different annotation algorithms for further verification\n\n\n#### Step 12"
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332",
                                "id": "ProkkaAnnotation/annotate_contigs",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "output_workspace"
                                            },
                                            {
                                                "input_parameter": "assembly_ref",
                                                "target_property": "assembly_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "output_genome_name",
                                                "target_property": "output_genome_name"
                                            },
                                            {
                                                "input_parameter": "scientific_name",
                                                "target_property": "scientific_name"
                                            },
                                            {
                                                "input_parameter": "kingdom",
                                                "target_property": "kingdom"
                                            },
                                            {
                                                "input_parameter": "genus",
                                                "target_property": "genus"
                                            },
                                            {
                                                "input_parameter": "gcode",
                                                "target_property": "gcode"
                                            },
                                            {
                                                "input_parameter": "metagenome",
                                                "target_property": "metagenome"
                                            },
                                            {
                                                "input_parameter": "rawproduct",
                                                "target_property": "rawproduct"
                                            },
                                            {
                                                "input_parameter": "fast",
                                                "target_property": "fast"
                                            },
                                            {
                                                "input_parameter": "mincontiglen",
                                                "target_property": "mincontiglen"
                                            },
                                            {
                                                "input_parameter": "evalue",
                                                "target_property": "evalue"
                                            },
                                            {
                                                "input_parameter": "rfam",
                                                "target_property": "rfam"
                                            },
                                            {
                                                "input_parameter": "norrna",
                                                "target_property": "norrna"
                                            },
                                            {
                                                "input_parameter": "notrna",
                                                "target_property": "notrna"
                                            }
                                        ],
                                        "kb_service_method": "annotate_contigs",
                                        "kb_service_name": "ProkkaAnnotation",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "input_parameter": "output_genome_name",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332",
                                        "icon": {
                                            "url": "img?method_id=ProkkaAnnotation/annotate_contigs&image_name=prokka.png&tag=release"
                                        },
                                        "id": "ProkkaAnnotation/annotate_contigs",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "module_name": "ProkkaAnnotation",
                                        "name": "Annotate Assembly with Prokka v1.12",
                                        "namespace": "ProkkaAnnotation",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate Assembly with Prokka annotation pipeline.",
                                        "tooltip": "Annotate Assembly with Prokka annotation pipeline.",
                                        "ver": "1.0.5"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_ref",
                                            "optional": 0,
                                            "short_hint": "Assembly object (set of contigs)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "scientific_name",
                                            "optional": 1,
                                            "short_hint": "Optional scientific name of organism (default 'Unknown')",
                                            "ui_class": "parameter",
                                            "ui_name": "Scientific name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting Genome will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output genome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Bacteria"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Bacteria",
                                                        "index": 0,
                                                        "value": "Bacteria"
                                                    },
                                                    {
                                                        "display": "Archaea",
                                                        "index": 1,
                                                        "value": "Archaea"
                                                    },
                                                    {
                                                        "display": "Mitochondria",
                                                        "index": 2,
                                                        "value": "Mitochondria"
                                                    },
                                                    {
                                                        "display": "Viruses",
                                                        "index": 3,
                                                        "value": "Viruses"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "kingdom",
                                            "optional": 0,
                                            "short_hint": "Annotation mode: Archaea | Bacteria | Mitochondria | Viruses (default 'Bacteria').",
                                            "ui_class": "parameter",
                                            "ui_name": "Kingdom"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Do not use genus-specific database",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "Enterococcus",
                                                        "index": 1,
                                                        "value": "Enterococcus"
                                                    },
                                                    {
                                                        "display": "Escherichia",
                                                        "index": 2,
                                                        "value": "Escherichia"
                                                    },
                                                    {
                                                        "display": "Staphylococcus",
                                                        "index": 3,
                                                        "value": "Staphylococcus"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "genus",
                                            "optional": 1,
                                            "short_hint": "Optional genus name: Enterococcus | Escherichia | Staphylococcus (uses genus-specific BLAST database) (default 'do not use genus-specific database')",
                                            "ui_class": "parameter",
                                            "ui_name": "Genus"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gcode",
                                            "optional": 1,
                                            "short_hint": "Genetic code / Translation table (set if --kingdom is set) (default '0')",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic code"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "metagenome",
                                            "optional": 1,
                                            "short_hint": "Improve gene predictions for highly fragmented genomes (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Metagenome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "rawproduct",
                                            "optional": 1,
                                            "short_hint": "Do not clean up /product annotation (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Raw product"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "fast",
                                            "optional": 1,
                                            "short_hint": "Fast mode - skip CDS /product searching (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Fast"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mincontiglen",
                                            "optional": 1,
                                            "short_hint": "Minimum contig size [NCBI needs 200] (default '1')",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min.contig size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "evalue",
                                            "optional": 1,
                                            "short_hint": "Similarity e-value cutoff (default '1e-06').",
                                            "ui_class": "parameter",
                                            "ui_name": "E-value"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "rfam",
                                            "optional": 1,
                                            "short_hint": "Enable searching for ncRNAs with Infernal+Rfam (SLOW!, default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Rfam"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "norrna",
                                            "optional": 1,
                                            "short_hint": "Don't run rRNA search (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "No rRNA"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "notrna",
                                            "optional": 1,
                                            "short_hint": "Don't run tRNA search (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "No tRNA"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.5"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "1f187c87-9f6e-42c0-b23c-199d1c98241d",
                                    "canceled": 0,
                                    "cell_id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                                    "creation_time": 1520980310204,
                                    "exec_start_time": 1520980313166,
                                    "finish_time": 1520981251275,
                                    "finished": 1,
                                    "job_id": "5aa85156e4b07981a2f94df2",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "output_genome_ref": "24065/23/2",
                                            "report_name": "kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27",
                                            "report_ref": "24065/143/1"
                                        }
                                    ],
                                    "run_id": null,
                                    "status": [
                                        "2018-03-13T22:47:31+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "token_id": "e7251661-2293-4579-b85a-fdc0b142f1eb",
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523333012295,
                                "launchState": {
                                    "cell_id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                                    "event": "launched_job",
                                    "event_at": "2018-03-13T22:31:50.547191Z",
                                    "job_id": "5aa85156e4b07981a2f94df2",
                                    "run_id": "ff628543-6f69-4f1f-8ed6-c0441ada0e68"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-03-13T22:31:49.600Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-03-13T22:31:50.625Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "1f187c87-9f6e-42c0-b23c-199d1c98241d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                                                "creation_time": 1520980310204,
                                                "finished": 0,
                                                "job_id": "5aa85156e4b07981a2f94df2",
                                                "job_state": "queued",
                                                "position": 31,
                                                "run_id": "ff628543-6f69-4f1f-8ed6-c0441ada0e68",
                                                "status": [
                                                    "2018-03-13T22:31:50+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "e7251661-2293-4579-b85a-fdc0b142f1eb",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:31:50.875Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "1f187c87-9f6e-42c0-b23c-199d1c98241d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                                                "creation_time": 1520980310204,
                                                "exec_start_time": 1520980313166,
                                                "finished": 0,
                                                "job_id": "5aa85156e4b07981a2f94df2",
                                                "job_state": "in-progress",
                                                "run_id": "ff628543-6f69-4f1f-8ed6-c0441ada0e68",
                                                "status": [
                                                    "2018-03-13T22:31:53+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:32:01.906Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "1f187c87-9f6e-42c0-b23c-199d1c98241d",
                                                "canceled": 0,
                                                "cell_id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                                                "creation_time": 1520980310204,
                                                "exec_start_time": 1520980313166,
                                                "finish_time": 1520981251275,
                                                "finished": 1,
                                                "job_id": "5aa85156e4b07981a2f94df2",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "output_genome_ref": "24065/23/2",
                                                        "report_name": "kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27",
                                                        "report_ref": "24065/143/1"
                                                    }
                                                ],
                                                "run_id": null,
                                                "status": [
                                                    "2018-03-13T22:47:31+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "token_id": "e7251661-2293-4579-b85a-fdc0b142f1eb",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T04:03:32.295Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbaseGenomeView",
                                    "params": {
                                        "id": "CCESR16_IDBA.bin.001.genome_Prokka_Annotation",
                                        "report_name": "kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27",
                                        "report_ref": "24065/143/1",
                                        "report_window_line_height": "5",
                                        "ws": "janakakbase:narrative_1504758657134"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Annotate Assembly and Re-annotate Genomes with Prokka(v1.12)",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5aa85156e4b07981a2f94df2": {
                                        "cell": {
                                            "created": true,
                                            "id": "5488bb05-af8e-430e-bdf1-284e45be03fb"
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 04:03:33 GMT",
                                        "params": {
                                            "assembly_ref": "Bin.001.fastaCCESR16_IDBA.bin.001.assembly",
                                            "evalue": "",
                                            "fast": 0,
                                            "gcode": null,
                                            "genus": "",
                                            "kingdom": "Bacteria",
                                            "metagenome": 0,
                                            "mincontiglen": 1,
                                            "norrna": 0,
                                            "notrna": 0,
                                            "output_genome_name": "CCESR16_IDBA.bin.001.genome_Prokka_Annotation",
                                            "rawproduct": 0,
                                            "rfam": 0,
                                            "scientific_name": "Burkholderiales sp."
                                        }
                                    }
                                }
                            },
                            "params": {
                                "assembly_ref": "Bin.001.fastaCCESR16_IDBA.bin.001.assembly",
                                "evalue": "",
                                "fast": 0,
                                "gcode": null,
                                "genus": "",
                                "kingdom": "Bacteria",
                                "metagenome": 0,
                                "mincontiglen": 1,
                                "norrna": 0,
                                "notrna": 0,
                                "output_genome_name": "CCESR16_IDBA.bin.001.genome_Prokka_Annotation",
                                "rawproduct": 0,
                                "rfam": 0,
                                "scientific_name": "Burkholderiales sp."
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 15 Feb 2018 22:23:25 GMT",
                            "id": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/ProkkaAnnotation/annotate_contigs/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Annotate Assembly with Prokka annotation pipeline.",
                            "title": "Annotate Assembly with Prokka v1.12"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"ProkkaAnnotation/annotate_contigs\",\n    {\n        \"kingdom\": \"Bacteria\",\n        \"mincontiglen\": 1,\n        \"norrna\": 0,\n        \"rawproduct\": 0,\n        \"metagenome\": 0,\n        \"output_genome_name\": \"CCESR16_IDBA.bin.001.genome_Prokka_Annotation\",\n        \"scientific_name\": \"Burkholderiales sp.\",\n        \"gcode\": None,\n        \"evalue\": \"\",\n        \"fast\": 0,\n        \"notrna\": 0,\n        \"assembly_ref\": \"Bin.001.fastaCCESR16_IDBA.bin.001.assembly\",\n        \"rfam\": 0,\n        \"genus\": \"\"\n    },\n    tag=\"release\",\n    version=\"1.0.5\",\n    cell_id=\"9d6b064b-4baa-468b-ae76-ad8b194d5c4d\",\n    run_id=\"ff628543-6f69-4f1f-8ed6-c0441ada0e68\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 04:03:33 GMT",
                            "icon": "arrow-right",
                            "id": "5488bb05-af8e-430e-bdf1-284e45be03fb",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "title": "Output from Annotate Assembly with Prokka v1.12"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5aa85156e4b07981a2f94df2",
                            "parentCellId": "9d6b064b-4baa-468b-ae76-ad8b194d5c4d",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeView",
                                "params": {
                                    "id": "CCESR16_IDBA.bin.001.genome_Prokka_Annotation",
                                    "report_name": "kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27",
                                    "report_ref": "24065/143/1",
                                    "report_window_line_height": "5",
                                    "ws": "janakakbase:narrative_1504758657134"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-acdc8398-40ad-423c-81a5-958d1e660a34' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-acdc8398-40ad-423c-81a5-958d1e660a34'), {\n                \"data\": {\"report_window_line_height\": \"5\", \"report_ref\": \"24065/143/1\", \"ws\": \"janakakbase:narrative_1504758657134\", \"id\": \"CCESR16_IDBA.bin.001.genome_Prokka_Annotation\", \"report_name\": \"kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseGenomeView\",\n                \"cellId\":\"5488bb05-af8e-430e-bdf1-284e45be03fb\",\n                \"title\":\"\",\n                \"time\":1523333013411\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 2,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeView\",\n    {\n        \"report_window_line_height\": \"5\",\n        \"report_ref\": \"24065/143/1\",\n        \"ws\": \"janakakbase:narrative_1504758657134\",\n        \"id\": \"CCESR16_IDBA.bin.001.genome_Prokka_Annotation\",\n        \"report_name\": \"kb_prokka_report_ab7747a9-017c-47bf-b929-f39922b3dd27\"\n    },\n    tag=\"release\",\n    cell_id=\"5488bb05-af8e-430e-bdf1-284e45be03fb\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Using a code-cell"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Using a code-cell\nUsers can use code-cells in order to run multiple apps in bulk or programatically derive analysis. In this example, we extract bins and run genome annotation apps programatically.\n\n#### Step 13"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "title": "Bulk extraction of bins based on Binned Contigs object followed by genome annotation # Janaka Edirisinghe. v.o1 September 5th, 2017"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        }
                    }
                },
                "outputs": [],
                "source": "import time\nimport pprint\nimport json\nimport sys\nfrom biokbase.narrative.jobs.appmanager import AppManager\nversion = \"release\"\ncurrent_ws = os.environ['KB_WORKSPACE_ID']\n# Bulk extraction of bins based on Binned Contigs object followed by genome annotation # Janaka Edirisinghe. v.o1 September 5th, 2017\n\nws = biokbase.narrative.clients.get(\"workspace\")\nmy_list = ws.list_objects({'workspaces':[current_ws],'type':'KBaseMetagenomes.BinnedContigs'})\n\ncount =0\nfor binnedContig in my_list:\n     print (\"\\nNow running Bin extraction on binned contig \" + binnedContig[1] + \"\\n\")\n     contigOb = ws.get_objects([{'ref': str (binnedContig[6]) + '/' + str (binnedContig[0]) + '/' + str(binnedContig[4])}])[0]['data']['bins']\n     data = contigOb\n     assembly_name = binnedContig[1].split('.Bins')[0]\n     bin_list = []\n     for eachbin in range(len (contigOb)):   \n         bin_hash = {}    \n         bin_hash['bin_id'] = [contigOb[eachbin]['bid']]\n         bin_hash['assembly_suffix'] = assembly_name + '_' + contigOb[eachbin]['bid'].split('.fasta')[0]   \n         bin_list.append(bin_hash)      \n     \n     print (\"\\n\\n individual bins in for binnedContig[1]\")\n     pprint.pprint (bin_list)   \n\n        \n     job = AppManager().run_app(\n             \"MetagenomeUtils/extract_bins_as_assemblies\",\n             {\n              \"binned_contig_obj_ref\": str (binnedContig[6]) + '/' + str (binnedContig[0]) + '/' + str(binnedContig[4]),\n              \"extracted_assemblies\": bin_list\n             },\n             tag=\"release\",\n     )\n     job_result = []\n     \n     while True:\n        time.sleep(10)\n        try:\n             job_result = job.state()\n             if job_result['job_state'] in ['completed', 'suspend']:\n                break\n        except Error:\n            print \"Job state command failed... try again.\"\n     \n     if job_result['job_state'] != 'completed':\n        print \"Bin extracting Failed  : \" + \",\".join(job_result['status'][0:3])\n     \n     else:\n        print \"Succeeded - extract binning of :\"+ binnedContig[1] +\" file  \"+ \",\".join(job_result['status'][0:3])\n        #pprint.pprint (job_result)\n     print (\"\\n Moving to annotation step on each binned contig\\n\\n\")\n    \n     for eachGenome in  range(len (bin_list)): \n         print (\"Now annotating \" + bin_list[eachGenome]['assembly_suffix'] + \"\\n\")\n         assemblyprefix = bin_list[eachGenome]['assembly_suffix'].split('_')[-1]\n         inputContigname = assemblyprefix + '.fasta' + bin_list[eachGenome]['assembly_suffix']\n         \n         job = AppManager().run_app(\n                \"RAST_SDK/annotate_contigset\",\n                {\n                    \"input_contigset\": inputContigname,\n                    \"scientific_name\": \"unknown\",\n                    \"domain\": \"B\",\n                    \"genetic_code\": \"11\",\n                    \"output_genome\": bin_list[eachGenome]['assembly_suffix'],\n                    \"call_features_rRNA_SEED\": 1,\n                    \"call_features_tRNA_trnascan\": 1,\n                    \"call_selenoproteins\": 1,\n                    \"call_pyrrolysoproteins\": 1,\n                    \"call_features_repeat_region_SEED\": 1,\n                    \"call_features_insertion_sequences\": 0,\n                    \"call_features_strep_suis_repeat\": 1,\n                    \"call_features_strep_pneumo_repeat\": 1,\n                    \"call_features_crispr\": 1,\n                    \"call_features_CDS_glimmer3\": 1,\n                    \"call_features_CDS_prodigal\": 1,\n                    \"annotate_proteins_kmer_v2\": 1,\n                    \"kmer_v1_parameters\": 1,\n                    \"annotate_proteins_similarity\": 1,\n                    \"resolve_overlapping_features\": 1,\n                    \"find_close_neighbors\": 1,\n                    \"call_features_prophage_phispy\": 0\n                },\n                tag=version\n         )  \n         job_result = []\n\n         while True:\n            time.sleep(10)\n            try:\n                 job_result = job.state()\n                 if job_result['job_state'] in ['completed', 'suspend']:\n                    break\n            except Error:\n                print \"Job state command failed... try again.\"\n\n         if job_result['job_state'] != 'completed':\n            print \"Annotation Failed  : \" + \",\".join(job_result['status'][0:3])\n\n         else:\n            print \"\\nSucceeded - Annotation of :\"+ bin_list[eachGenome]['assembly_suffix'] +\" file  \"+ \",\".join(job_result['status'][0:3])"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Insert into Species Tree"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Insert into Species Tree\n\nCheckM provided the phylogenetic \"Burkholderiales\" for one of our genomes and the family \"Flavobacteriaceae\" for the other. Now that we have annotated genomes we use can use the \"Insert Genome Into Species Tree\" App to assess what genomes in KBase's genome reference database are closest to our genomes of interest.\n\nRelatedness is determined by alignment similarity to a select subset of COG (Clusters of Orthologous Groups) domains. Next, a phylogenetic tree is reconstructed using FastTree (a method to quickly estimate maximum likelihood phylogeny).\n\nThe results show that the closet reference genome to Bin001 is \"<i>Variovorax paradoxus EPS</i>\" and \"<i>Flavobacterium reichenbachii</i>\" for Bin002.\n\n\n#### Step 14"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "param0",
                                                "target_property": "new_genomes",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "param1",
                                                "target_property": "nearest_genome_count",
                                                "target_type_transform": "int"
                                            },
                                            {
                                                "input_parameter": "copy_genomes",
                                                "target_property": "copy_genomes"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "sptree_"
                                                },
                                                "input_parameter": "treeID",
                                                "target_property": "out_tree_id"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genomeset_"
                                                },
                                                "input_parameter": "genomeSetName",
                                                "target_property": "out_genomeset_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "out_workspace"
                                            },
                                            {
                                                "constant_value": 0,
                                                "target_property": "use_ribosomal_s9_only"
                                            }
                                        ],
                                        "kb_service_method": "construct_species_tree",
                                        "kb_service_name": "SpeciesTreeBuilder",
                                        "kb_service_output_mapping": [
                                            {
                                                "input_parameter": "treeID",
                                                "target_property": "treeID"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspaceID"
                                            },
                                            {
                                                "constant_value": "500px",
                                                "target_property": "height"
                                            },
                                            {
                                                "service_method_output_path": [],
                                                "target_property": "jobID"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                        "icon": {
                                            "url": "img?method_id=SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree&image_name=speciestree-purple.png&tag=release"
                                        },
                                        "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "SpeciesTreeBuilder",
                                        "name": "Insert Genome Into Species Tree",
                                        "namespace": "SpeciesTreeBuilder",
                                        "output_types": [
                                            "KBaseSearch.GenomeSet",
                                            "KBaseTrees.Tree"
                                        ],
                                        "subtitle": "Add one or more genomes to a KBase species tree.",
                                        "tooltip": "Add one or more genomes to a KBase species tree.",
                                        "ver": "0.0.7"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Genome to be inserted into a phylogenetic species tree composed of closely related publicly available genomes",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param0",
                                            "optional": 0,
                                            "short_hint": "Genome to be inserted into a phylogenetic species tree",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "20"
                                            ],
                                            "description": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param1",
                                            "optional": 1,
                                            "short_hint": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 200,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Neighbor public genome count"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them.  If you don't want to do anything else with the species tree, you may not need copies",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "copy_genomes",
                                            "optional": 0,
                                            "short_hint": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them",
                                            "ui_class": "parameter",
                                            "ui_name": "Copy public genomes to your workspace"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The name of the output phylogenetic tree relating genomes available in KBase to your genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "treeID",
                                            "optional": 0,
                                            "short_hint": "Output species tree name",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A collection of Genome objects",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genomeSetName",
                                            "optional": 0,
                                            "short_hint": "A collection of Genome objects",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name the set of genomes generated",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Set"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTree"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.7"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Insert Genome Into Species Tree 2.1.10",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "copy_genomes": 1,
                                "genomeSetName": "CCESR16_species_tree_GenomeSet",
                                "param0": [
                                    "24065/16/2",
                                    "24065/18/1"
                                ],
                                "param1": 20,
                                "treeID": "CCESR16_species_tree"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 16:29:54 GMT",
                            "id": "2e9ee6a5-fd1f-461d-9c86-5d635ba3fd5d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Add one or more genomes to a KBase species tree.",
                            "title": "Insert Genome Into Species Tree"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree\",\n    {\n        \"genomeSetName\": \"CCESR16_species_tree_GenomeSet\",\n        \"param0\": [\"24065/16/2\", \"24065/18/1\"],\n        \"copy_genomes\": 1,\n        \"param1\": 20,\n        \"treeID\": \"CCESR16_species_tree\"\n    },\n    tag=\"release\",\n    version=\"0.0.7\",\n    cell_id=\"2e9ee6a5-fd1f-461d-9c86-5d635ba3fd5d\",\n    run_id=\"0db57acf-76ac-4b6e-93c8-e71d403e46fe\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Proteome comparison"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Proteome comparison \n\n#### Compare the two genomes (IDBA_Bin1_RASTvsProkka ) based on their protein sequences\n\n\n#### Step 15"
            },
            {
                "cell_type": "code",
                "execution_count": 28,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "51060a171c71d15a85ce9c6f36c28e3c9dbcb2f4",
                                "id": "GenomeProteomeComparison/compare_two_proteomes",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "param0",
                                                "target_property": "genome1id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "genome1ws"
                                            },
                                            {
                                                "input_parameter": "param1",
                                                "target_property": "genome2id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "genome2ws"
                                            },
                                            {
                                                "input_parameter": "param2",
                                                "target_property": "output_id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "output_ws"
                                            },
                                            {
                                                "input_parameter": "param_max_eval",
                                                "target_property": "max_evalue"
                                            },
                                            {
                                                "input_parameter": "param_min_perc",
                                                "target_property": "sub_bbh_percent"
                                            }
                                        ],
                                        "kb_service_method": "blast_proteomes",
                                        "kb_service_name": "GenomeProteomeComparison",
                                        "kb_service_output_mapping": [
                                            {
                                                "input_parameter": "param2",
                                                "target_property": "ws_id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws_name"
                                            },
                                            {
                                                "service_method_output_path": [],
                                                "target_property": "output_ref"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "51060a171c71d15a85ce9c6f36c28e3c9dbcb2f4"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "51060a171c71d15a85ce9c6f36c28e3c9dbcb2f4",
                                        "icon": {
                                            "url": "img?method_id=GenomeProteomeComparison/compare_two_proteomes&image_name=kb-purple.png&tag=release"
                                        },
                                        "id": "GenomeProteomeComparison/compare_two_proteomes",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "GenomeProteomeComparison",
                                        "name": "Compare Two Proteomes",
                                        "namespace": "GenomeProteomeComparison",
                                        "output_types": [
                                            "GenomeComparison.ProteomeComparison"
                                        ],
                                        "subtitle": "Perform a comparison of two proteomes, producing a dot plot matrix and a table of gene differences.",
                                        "tooltip": "Perform a comparison of two proteomes, producing a dot plot matrix and a table of gene differences.",
                                        "ver": "0.0.5"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Source genome 1",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param0",
                                            "optional": 0,
                                            "short_hint": "Source genome 1",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome1 ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Source genome 2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param1",
                                            "optional": 0,
                                            "short_hint": "Source genome 2",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome2 ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Output proteome comparison",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param2",
                                            "optional": 0,
                                            "short_hint": "Output proteome comparison",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "GenomeComparison.ProteomeComparison"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Proteome Comparison"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10e-10"
                                            ],
                                            "description": "Maximum e-value threshold",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param_max_eval",
                                            "optional": 1,
                                            "short_hint": "Maximum e-value threshold",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Max. e-value"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "90"
                                            ],
                                            "description": "Minimum threshold for percent ratio between hit bit-score and bit-score of related best bi-directional hit",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param_min_perc",
                                            "optional": 1,
                                            "short_hint": "Minimum threshold for percent ratio between hit bit-score and bit-score of related best bi-directional hit",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum sub-optimal BBH ratio"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "GenomeComparisonWidget"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.5"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Compare Two Proteomes",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "param0": "CCESR16_IDBA.bin.001.genome",
                                "param1": "CCESR16_IDBA.bin.001.genome_Prokka_Annotation",
                                "param2": "IDBA_Bin1_RASTvsProkka_proteome_comparison",
                                "param_max_eval": 1e-09,
                                "param_min_perc": 90
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Wed, 06 Sep 2017 20:08:34 GMT",
                            "id": "77442708-36bf-4336-a2d9-b2e267a0c4ef",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/GenomeProteomeComparison/compare_two_proteomes/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Perform a comparison of two proteomes, producing a dot plot matrix and a table of gene differences.",
                            "title": "Compare Two Proteomes"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"GenomeProteomeComparison/compare_two_proteomes\",\n    {\n        \"param0\": \"CCESR16_IDBA.bin.001.genome\",\n        \"param1\": \"CCESR16_IDBA.bin.001.genome_Prokka_Annotation\",\n        \"param2\": \"IDBA_Bin1_RASTvsProkka_proteome_comparison\",\n        \"param_max_eval\": 1e-9,\n        \"param_min_perc\": 90\n    },\n    tag=\"release\",\n    version=\"0.0.5\",\n    cell_id=\"77442708-36bf-4336-a2d9-b2e267a0c4ef\",\n    run_id=\"f1bd6199-d7e1-43ae-85bb-27840905d924\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "So that conclude sessions 3 and 4, If we have more..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "#### So that conclude sessions 3 and 4, If we have more time left, we could cover\n\n### Build a genome set from the tree\n\n\n#### Step 16\n"
            },
            {
                "cell_type": "code",
                "execution_count": 6,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                "id": "SpeciesTreeBuilder/build_genome_set_from_tree",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "param0",
                                                "target_property": "tree_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genomeset_"
                                                },
                                                "input_parameter": "genomeSetName",
                                                "target_property": "genomeset_ref",
                                                "target_type_transform": "ref"
                                            }
                                        ],
                                        "kb_service_method": "build_genome_set_from_tree",
                                        "kb_service_name": "SpeciesTreeBuilder",
                                        "kb_service_output_mapping": [
                                            {
                                                "input_parameter": "genomeSetName",
                                                "target_property": "genomeSetName"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "constant_value": 1,
                                                "target_property": "loadExisting"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                        "icon": {
                                            "url": "img?method_id=SpeciesTreeBuilder/build_genome_set_from_tree&image_name=speciestree-purple.png&tag=release"
                                        },
                                        "id": "SpeciesTreeBuilder/build_genome_set_from_tree",
                                        "input_types": [
                                            "KBaseTrees.Tree"
                                        ],
                                        "module_name": "SpeciesTreeBuilder",
                                        "name": "Build Genome Set From Tree",
                                        "namespace": "SpeciesTreeBuilder",
                                        "output_types": [
                                            "KBaseSearch.GenomeSet"
                                        ],
                                        "subtitle": "Extract a set of genomes from a species tree.",
                                        "tooltip": "Extract a set of genomes from a species tree.",
                                        "ver": "0.0.7"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "User-generated KBase phylogenetic species tree",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param0",
                                            "optional": 0,
                                            "short_hint": "User-generated KBase phylogenetic species tree",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Species Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A collection of Genome objects",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genomeSetName",
                                            "optional": 0,
                                            "short_hint": "A collection of Genome objects",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name the set of genomes generated",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Set"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeSetBuilder"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.7"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "9239cf72-4cf3-4f92-929e-d988ec3af1b1",
                                    "canceled": 0,
                                    "cell_id": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                                    "creation_time": 1520980697480,
                                    "exec_start_time": 1520980700691,
                                    "finish_time": 1520980754970,
                                    "finished": 1,
                                    "job_id": "5aa852d9e4b07981a2f94df4",
                                    "job_state": "completed",
                                    "result": [
                                        "24065/134/3"
                                    ],
                                    "run_id": null,
                                    "status": [
                                        "2018-03-13T22:39:14+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "token_id": "55bd208d-d509-4e72-9250-9ad92d5dac19",
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523333013350,
                                "launchState": {
                                    "cell_id": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                                    "event": "launched_job",
                                    "event_at": "2018-03-13T22:38:17.477631Z",
                                    "job_id": "5aa852d9e4b07981a2f94df4",
                                    "run_id": "24044c4e-df96-4ebd-a267-b6fc438522ea"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-03-13T22:38:16.906Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-03-13T22:38:17.514Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "9239cf72-4cf3-4f92-929e-d988ec3af1b1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                                                "creation_time": 1520980697480,
                                                "finished": 0,
                                                "job_id": "5aa852d9e4b07981a2f94df4",
                                                "job_state": "queued",
                                                "position": 29,
                                                "run_id": "24044c4e-df96-4ebd-a267-b6fc438522ea",
                                                "status": [
                                                    "2018-03-13T22:38:17+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "55bd208d-d509-4e72-9250-9ad92d5dac19",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-03-13T22:38:17.728Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "9239cf72-4cf3-4f92-929e-d988ec3af1b1",
                                                "canceled": 0,
                                                "cell_id": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                                                "creation_time": 1520980697480,
                                                "exec_start_time": 1520980700691,
                                                "finish_time": 1520980754970,
                                                "finished": 1,
                                                "job_id": "5aa852d9e4b07981a2f94df4",
                                                "job_state": "completed",
                                                "result": [
                                                    "24065/134/3"
                                                ],
                                                "run_id": null,
                                                "status": [
                                                    "2018-03-13T22:39:14+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "token_id": "55bd208d-d509-4e72-9250-9ad92d5dac19",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T04:03:33.350Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbaseGenomeSetBuilder",
                                    "params": {
                                        "genomeSetName": "CCESR16_species_tree_GenomeSet",
                                        "loadExisting": 1,
                                        "wsName": "janakakbase:narrative_1504758657134"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Build Genome Set From Tree",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5aa852d9e4b07981a2f94df4": {
                                        "cell": {
                                            "created": true,
                                            "id": "25a7aa3e-14cd-40db-b914-bac3a7aa14af"
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 04:03:34 GMT",
                                        "params": {
                                            "genomeSetName": "CCESR16_species_tree_GenomeSet",
                                            "param0": "CCESR16_species_tree"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "genomeSetName": "CCESR16_species_tree_GenomeSet",
                                "param0": "CCESR16_species_tree"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 11 Dec 2017 04:33:45 GMT",
                            "id": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/SpeciesTreeBuilder/build_genome_set_from_tree/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Extract a set of genomes from a species tree.",
                            "title": "Build Genome Set From Tree"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"SpeciesTreeBuilder/build_genome_set_from_tree\",\n    {\n        \"param0\": \"CCESR16_species_tree\",\n        \"genomeSetName\": \"CCESR16_species_tree_GenomeSet\"\n    },\n    tag=\"release\",\n    version=\"0.0.7\",\n    cell_id=\"6f78071a-37b3-45f6-9382-0d8978b26ec0\",\n    run_id=\"24044c4e-df96-4ebd-a267-b6fc438522ea\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 04:03:34 GMT",
                            "icon": "arrow-right",
                            "id": "25a7aa3e-14cd-40db-b914-bac3a7aa14af",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "title": "Output from Build Genome Set From Tree"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5aa852d9e4b07981a2f94df4",
                            "parentCellId": "6f78071a-37b3-45f6-9382-0d8978b26ec0",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeSetBuilder",
                                "params": {
                                    "genomeSetName": "CCESR16_species_tree_GenomeSet",
                                    "loadExisting": 1,
                                    "wsName": "janakakbase:narrative_1504758657134"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-f5548fec-a962-480f-b4f7-0a97df5d7ff9' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-f5548fec-a962-480f-b4f7-0a97df5d7ff9'), {\n                \"data\": {\"genomeSetName\": \"CCESR16_species_tree_GenomeSet\", \"wsName\": \"janakakbase:narrative_1504758657134\", \"loadExisting\": 1},\n                \"type\":\"method\",\n                \"widget\":\"kbaseGenomeSetBuilder\",\n                \"cellId\":\"25a7aa3e-14cd-40db-b914-bac3a7aa14af\",\n                \"title\":\"\",\n                \"time\":1523333014375\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 3,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeSetBuilder\",\n    {\n        \"genomeSetName\": \"CCESR16_species_tree_GenomeSet\",\n        \"wsName\": \"janakakbase:narrative_1504758657134\",\n        \"loadExisting\": 1\n    },\n    tag=\"release\",\n    cell_id=\"25a7aa3e-14cd-40db-b914-bac3a7aa14af\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Compute orthologous protein families using OrthoMC..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Compute orthologous protein families using OrthoMCL\n\n\n#### Step 17"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "fd6b156cb12dd66341002f18325d6869c2b19136",
                                "id": "PangenomeOrthomcl/build_pangenome_with_orthomcl",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_genomeset",
                                                "target_property": "input_genomeset_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "input_genomes",
                                                "target_property": "input_genome_refs",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "output_workspace"
                                            },
                                            {
                                                "input_parameter": "output_pangenome",
                                                "target_property": "output_pangenome_id"
                                            },
                                            {
                                                "input_parameter": "num_descriptions",
                                                "target_property": "num_descriptions"
                                            },
                                            {
                                                "input_parameter": "num_alignments",
                                                "target_property": "num_alignments"
                                            },
                                            {
                                                "input_parameter": "evalue",
                                                "target_property": "evalue"
                                            },
                                            {
                                                "input_parameter": "word_size",
                                                "target_property": "word_size"
                                            },
                                            {
                                                "input_parameter": "gapopen",
                                                "target_property": "gapopen"
                                            },
                                            {
                                                "input_parameter": "gapextend",
                                                "target_property": "gapextend"
                                            },
                                            {
                                                "input_parameter": "matrix",
                                                "target_property": "matrix"
                                            },
                                            {
                                                "input_parameter": "threshold",
                                                "target_property": "threshold"
                                            },
                                            {
                                                "input_parameter": "comp_based_stats",
                                                "target_property": "comp_based_stats"
                                            },
                                            {
                                                "input_parameter": "seg",
                                                "target_property": "seg"
                                            },
                                            {
                                                "input_parameter": "lcase_masking",
                                                "target_property": "lcase_masking"
                                            },
                                            {
                                                "input_parameter": "xdrop_gap_final",
                                                "target_property": "xdrop_gap_final"
                                            },
                                            {
                                                "input_parameter": "window_size",
                                                "target_property": "window_size"
                                            },
                                            {
                                                "input_parameter": "use_sw_tback",
                                                "target_property": "use_sw_tback"
                                            },
                                            {
                                                "input_parameter": "mcl_p",
                                                "target_property": "mcl_p"
                                            },
                                            {
                                                "input_parameter": "mcl_s",
                                                "target_property": "mcl_s"
                                            },
                                            {
                                                "input_parameter": "mcl_r",
                                                "target_property": "mcl_r"
                                            },
                                            {
                                                "input_parameter": "mcl_pct",
                                                "target_property": "mcl_pct"
                                            },
                                            {
                                                "input_parameter": "mcl_warn_p",
                                                "target_property": "mcl_warn_p"
                                            },
                                            {
                                                "input_parameter": "mcl_warn_factor",
                                                "target_property": "mcl_warn_factor"
                                            },
                                            {
                                                "input_parameter": "mcl_init_l",
                                                "target_property": "mcl_init_l"
                                            },
                                            {
                                                "input_parameter": "mcl_main_l",
                                                "target_property": "mcl_main_l"
                                            },
                                            {
                                                "input_parameter": "mcl_init_i",
                                                "target_property": "mcl_init_i"
                                            },
                                            {
                                                "input_parameter": "mcl_main_i",
                                                "target_property": "mcl_main_i"
                                            }
                                        ],
                                        "kb_service_method": "build_pangenome_with_orthomcl",
                                        "kb_service_name": "PangenomeOrthomcl",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "pangenome_ref"
                                                ],
                                                "target_property": "pangenome_ref"
                                            },
                                            {
                                                "input_parameter": "output_pangenome",
                                                "target_property": "name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "fd6b156cb12dd66341002f18325d6869c2b19136"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "fd6b156cb12dd66341002f18325d6869c2b19136",
                                        "icon": {
                                            "url": "img?method_id=PangenomeOrthomcl/build_pangenome_with_orthomcl&image_name=orthomcl-purple.png&tag=release"
                                        },
                                        "id": "PangenomeOrthomcl/build_pangenome_with_orthomcl",
                                        "input_types": [
                                            "KBaseGenomes.Genome",
                                            "KBaseSearch.GenomeSet"
                                        ],
                                        "module_name": "PangenomeOrthomcl",
                                        "name": "Build Pangenome with OrthoMCL",
                                        "namespace": "PangenomeOrthomcl",
                                        "output_types": [
                                            "KBaseGenomes.Pangenome"
                                        ],
                                        "subtitle": "Perform OrthoMCL orthologous groups construction",
                                        "tooltip": "Perform OrthoMCL orthologous groups construction",
                                        "ver": "0.0.7"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A set of references to genomes stored in KBase",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genomeset",
                                            "optional": 1,
                                            "short_hint": "A set of references to genomes stored in KBase",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome Set"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of references to genomes stored in KBase",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genomes",
                                            "optional": 1,
                                            "short_hint": "A list of references to genomes stored in KBase",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genomes"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of all distinct protein families identified by OrthoMCL in a set of input genome sequences, as well as the IDs of the proteins present in each family",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_pangenome",
                                            "optional": 0,
                                            "short_hint": "A list of all distinct protein families identified in input genome set",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Pangenome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Pangenome ID"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -v] Store one-line descriptions for this number of database sequences. Default value is 100000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "num_descriptions",
                                            "optional": 1,
                                            "short_hint": "Store one-line descriptions for this number of database sequences",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "num_descriptions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -b] Store alignments for this number of database sequences. Default value is 100000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "num_alignments",
                                            "optional": 1,
                                            "short_hint": "Store alignments for this number of database sequences",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "num_alignments"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -e] Expect value (E) for saving hits. Default value is 1e-5.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "evalue",
                                            "optional": 1,
                                            "short_hint": "Expect value (E) for saving hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "evalue"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -W] Word size of initial match. Valid word sizes are 2-7. Default value is 3.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "word_size",
                                            "optional": 1,
                                            "short_hint": "Word size of initial match",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 7,
                                                "min_int": 2,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "word_size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -G] Cost to open a gap. Default value is 11.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gapopen",
                                            "optional": 1,
                                            "short_hint": "Cost to open a gap",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "gapopen"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -E] Cost to extend a gap. Default value is 1.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gapextend",
                                            "optional": 1,
                                            "short_hint": "Cost to extend a gap",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "gapextend"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -M] Scoring matrix name. Default value is BLOSUM62.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "matrix",
                                            "optional": 1,
                                            "short_hint": "Scoring matrix name",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "matrix"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -f] Minimum score to add a word to the BLAST lookup table. Default value is 11.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "threshold",
                                            "optional": 1,
                                            "short_hint": "Minimum score to add a word to the BLAST lookup table",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -C] Use composition-based statistics (0: no composition-based statistics; 1: composition-based statistics as in NAR 29:2994-3005, 2001; 2: Composition-based score adjustments as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties; 3 - Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally). Default value is 2.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "default",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "0: no composition-based statistics",
                                                        "index": 1,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "1: Composition-based statistics as in NAR 29:2994-3005, 2001",
                                                        "index": 2,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "2: Composition-based score adjustments as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties",
                                                        "index": 3,
                                                        "value": "2"
                                                    },
                                                    {
                                                        "display": "3 - Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally",
                                                        "index": 4,
                                                        "value": "3"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "comp_based_stats",
                                            "optional": 1,
                                            "short_hint": "Use composition-based statistics",
                                            "ui_class": "parameter",
                                            "ui_name": "comp_based_stats"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -F] Filter query sequence with SEG (yes/no). Default value is yes.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "default",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "yes",
                                                        "index": 1,
                                                        "value": "yes"
                                                    },
                                                    {
                                                        "display": "no",
                                                        "index": 2,
                                                        "value": "no"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "seg",
                                            "optional": 1,
                                            "short_hint": "Filter query sequence with SEG",
                                            "ui_class": "parameter",
                                            "ui_name": "seg"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -U] Use lower case filtering in query and subject sequence(s). Default value is false(0).",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "lcase_masking",
                                            "optional": 1,
                                            "short_hint": "Use lower case filtering in query and subject sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "lcase_masking"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -Z] Heuristic value (in bits) for final gapped alignment. Default value is 25.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "xdrop_gap_final",
                                            "optional": 1,
                                            "short_hint": "Heuristic value (in bits) for final gapped alignment",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "xdrop_gap_final"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -A] Multiple hits window size, use 0 to specify 1-hit algorithm. Default value is 40.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "window_size",
                                            "optional": 1,
                                            "short_hint": "Multiple hits window size",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "window_size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -s] Compute locally optimal Smith-Waterman alignments. Default value is false(0).",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "use_sw_tback",
                                            "optional": 1,
                                            "short_hint": "Compute locally optimal Smith-Waterman alignments",
                                            "ui_class": "parameter",
                                            "ui_name": "use_sw_tback"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -P] Prune number. Default value is 10000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_p",
                                            "optional": 1,
                                            "short_hint": "Prune number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_p"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -S] Selection number. Default value is 1100.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_s",
                                            "optional": 1,
                                            "short_hint": "Selection number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_s"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -R] Recovery number. Default value is 1400.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_r",
                                            "optional": 1,
                                            "short_hint": "Recovery number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_r"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -pct] Recovery percentage. Default value is 90.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_pct",
                                            "optional": 1,
                                            "short_hint": "Recovery percentage",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_pct"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -warn-p] Warn if pruning reduces mass to this weight. Default value is 10.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_warn_p",
                                            "optional": 1,
                                            "short_hint": "Warn if pruning reduces mass to this weight",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_warn_p"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -warn-factor] Warn if pruning reduces entry count by this value. Default value is 1000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_warn_factor",
                                            "optional": 1,
                                            "short_hint": "Warn if pruning reduces entry count by this value",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_warn_factor"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -l] Initial loop length. Default value is 0.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_init_l",
                                            "optional": 1,
                                            "short_hint": "Initial loop length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_init_l"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -L] Main loop length. Default value is 10000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_main_l",
                                            "optional": 1,
                                            "short_hint": "Main loop length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_main_l"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -i] Initial inflation. Default value is 2.0.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_init_i",
                                            "optional": 1,
                                            "short_hint": "Initial inflation",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_init_i"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -I] Main inflation. Default value is 1.5.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_main_i",
                                            "optional": 1,
                                            "short_hint": "Main inflation",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_main_i"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbasePanGenome"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.7"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "comp_based_stats": "",
                                "evalue": "",
                                "gapextend": null,
                                "gapopen": null,
                                "input_genomes": [
                                    "24065/16/1",
                                    "24065/18/1"
                                ],
                                "input_genomeset": "CCESR16_species_tree_GenomeSet",
                                "lcase_masking": 0,
                                "matrix": "",
                                "mcl_init_i": null,
                                "mcl_init_l": null,
                                "mcl_main_i": null,
                                "mcl_main_l": null,
                                "mcl_p": null,
                                "mcl_pct": null,
                                "mcl_r": null,
                                "mcl_s": null,
                                "mcl_warn_factor": null,
                                "mcl_warn_p": null,
                                "num_alignments": null,
                                "num_descriptions": null,
                                "output_pangenome": "PanGenomeAnalysis_Bin1vsBin2",
                                "seg": "",
                                "threshold": null,
                                "use_sw_tback": 0,
                                "window_size": null,
                                "word_size": null,
                                "xdrop_gap_final": null
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 15 Feb 2018 22:24:49 GMT",
                            "id": "b7911db8-9497-4515-993c-7b18b154a708",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/PangenomeOrthomcl/build_pangenome_with_orthomcl/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "subtitle": "Perform OrthoMCL orthologous groups construction",
                            "title": "Build Pangenome with OrthoMCL"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"PangenomeOrthomcl/build_pangenome_with_orthomcl\",\n    {\n        \"use_sw_tback\": 0,\n        \"mcl_s\": None,\n        \"mcl_warn_p\": None,\n        \"mcl_warn_factor\": None,\n        \"input_genomes\": [\"24065/16/1\", \"24065/18/1\"],\n        \"seg\": \"\",\n        \"threshold\": None,\n        \"num_descriptions\": None,\n        \"xdrop_gap_final\": None,\n        \"num_alignments\": None,\n        \"gapextend\": None,\n        \"mcl_pct\": None,\n        \"evalue\": \"\",\n        \"window_size\": None,\n        \"matrix\": \"\",\n        \"mcl_p\": None,\n        \"mcl_init_l\": None,\n        \"gapopen\": None,\n        \"output_pangenome\": \"PanGenomeAnalysis_Bin1vsBin2\",\n        \"comp_based_stats\": \"\",\n        \"mcl_init_i\": None,\n        \"lcase_masking\": 0,\n        \"word_size\": None,\n        \"mcl_main_l\": None,\n        \"mcl_r\": None,\n        \"mcl_main_i\": None,\n        \"input_genomeset\": \"CCESR16_species_tree_GenomeSet\"\n    },\n    tag=\"release\",\n    version=\"0.0.7\",\n    cell_id=\"b7911db8-9497-4515-993c-7b18b154a708\",\n    run_id=\"c063d29d-5ae5-48c3-89f1-e93a137727c7\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Sun, 10 Dec 2017 14:06:54 GMT",
                            "icon": "arrow-right",
                            "id": "8af99123-c632-43b3-bee8-b51ca43c634c",
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:15 GMT",
                            "status": "new",
                            "title": "Output from Build Pangenome with OrthoMCL"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "59b0c6a1e4b0e2363d4496fc",
                            "parentCellId": "96741241-c043-48b2-8a6c-a13fada9d565",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbasePanGenome",
                                "params": {
                                    "name": "PanGenomeAnalysis_Bin1vsBin2",
                                    "pangenome_ref": "24035/29/1",
                                    "report_name": "orthomcl_report_0x242ac110009L",
                                    "report_ref": "24035/30/1",
                                    "workspace_name": "janakakbase:narrative_1504710860060",
                                    "ws": "janakakbase:narrative_1504710860060"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-e4dd24af-5b69-4056-977b-1c2d876bdb53' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-e4dd24af-5b69-4056-977b-1c2d876bdb53'), {\n                \"data\": {\"ws\": \"janakakbase:narrative_1504710860060\", \"name\": \"PanGenomeAnalysis_Bin1vsBin2\", \"workspace_name\": \"janakakbase:narrative_1504710860060\", \"report_ref\": \"24035/30/1\", \"pangenome_ref\": \"24035/29/1\", \"report_name\": \"orthomcl_report_0x242ac110009L\"},\n                \"type\":\"method\",\n                \"widget\":\"kbasePanGenome\",\n                \"cellId\":\"8af99123-c632-43b3-bee8-b51ca43c634c\",\n                \"title\":\"\",\n                \"time\":1512914815165\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 2,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbasePanGenome\",\n    {\n        \"ws\": \"janakakbase:narrative_1504710860060\",\n        \"name\": \"PanGenomeAnalysis_Bin1vsBin2\",\n        \"workspace_name\": \"janakakbase:narrative_1504710860060\",\n        \"report_ref\": \"24035/30/1\",\n        \"pangenome_ref\": \"24035/29/1\",\n        \"report_name\": \"orthomcl_report_0x242ac110009L\"\n    },\n    tag=\"release\",\n    cell_id=\"8af99123-c632-43b3-bee8-b51ca43c634c\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotate a plant genome"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Annotate a plant genome \n\n#### Step 18"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                "id": "RAST_SDK/annotate_plant_transcripts",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_genome",
                                                "target_property": "input_genome",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "constant_value": "1",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "constant_value": "1",
                                                "target_property": "genetic_code"
                                            },
                                            {
                                                "constant_value": "Plant",
                                                "target_property": "domain"
                                            },
                                            {
                                                "constant_value": "1",
                                                "target_property": "retain_old_anno_for_hypotheticals"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_insertion_sequences"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_CDS_genemark"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "find_close_neighbors"
                                            },
                                            {
                                                "constant_value": "0",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "44dd19a28a24ec2fdd178f5bf9f80303050412af"
                                    },
                                    "fixed_parameters": [
                                        {
                                            "description": "The name of the set of signature k-mers to use for annotating the plant transcripts. The SEED project frequently releases new and updated sets of signature k-mers for each round of annotation accomplished. The set that contains this parameter allows us to retrieve and use the signature k-mers computed via the PlantSEED project. We are currently using Release 70.",
                                            "ui_name": "Dataset name"
                                        },
                                        {
                                            "description": "The length of k-mer to use when annotating plant transcripts. When a set of signature k-mers is computed, the computation is done at various k-mer lengths. By default we are using the signature k-mers of 8 amino acids in length.",
                                            "ui_name": "k-mer size"
                                        }
                                    ],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "seaver"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/annotate_plant_transcripts&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/annotate_plant_transcripts",
                                        "input_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Plant Transcripts with Metabolic Functions",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate a set of plant transcripts with metabolic functions from the PlantSEED project.",
                                        "tooltip": "Annotate a set of plant transcripts with metabolic functions from the PlantSEED project.",
                                        "ver": "0.0.11"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The set of plant transcripts to annotate",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genome",
                                            "optional": 0,
                                            "short_hint": "The set of plant transcripts to annotate",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Plant Transcripts"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A set of metabolically annotated transcripts saved as a \"Genome\" object",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 0,
                                            "short_hint": "A set of metabolically annotated transcripts saved as a \"Genome\" object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name of Output Genome",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.11"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "newAppName": "Annotate Plant Transcripts with Metabolic Functions",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "input_genome": "Sbicolor_v2.1",
                                "output_genome": "SbiColor_Annotated"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 15 Feb 2018 23:22:32 GMT",
                            "id": "cffa5aa6-ba78-452b-b00b-2d885ddc0126",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/annotate_plant_transcripts/release"
                            },
                            "lastLoaded": "Tue, 29 Oct 2019 02:31:16 GMT",
                            "status": "new",
                            "subtitle": "Annotate a set of plant transcripts with metabolic functions from the PlantSEED project.",
                            "title": "Annotate Plant Transcripts with Metabolic Functions"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/annotate_plant_transcripts\",\n    {\n        \"input_genome\": \"Sbicolor_v2.1\",\n        \"output_genome\": \"SbiColor_Annotated\"\n    },\n    tag=\"release\",\n    version=\"0.0.11\",\n    cell_id=\"cffa5aa6-ba78-452b-b00b-2d885ddc0126\",\n    run_id=\"4e713819-efa4-4206-99e2-614bc55c64ca\"\n)"
            }
        ],
        "metadata": {
            "creator": "janakakbase",
            "data_dependencies": [],
            "description": "",
            "format": "ipynb",
            "is_temporary": "false",
            "job_ids": {
                "apps": [],
                "job_usage": {
                    "queue_time": 0,
                    "run_time": 0
                },
                "methods": []
            },
            "kbase": {
                "creator": "janakakbase",
                "job_ids": {
                    "apps": [],
                    "job_usage": {
                        "queue_time": 0,
                        "run_time": 0
                    },
                    "methods": []
                },
                "name": "Untitled",
                "ws_name": "janakakbase:narrative_1504710860060"
            },
            "kernelspec": {
                "display_name": "Python 2",
                "language": "python",
                "name": "python2"
            },
            "language_info": {
                "codemirror_mode": {
                    "name": "ipython",
                    "version": 2
                },
                "file_extension": ".py",
                "mimetype": "text/x-python",
                "name": "python",
                "nbconvert_exporter": "python",
                "pygments_lexer": "ipython2",
                "version": "2.7.14"
            },
            "name": "Metagenome Assembly, Binning, Quality Assessment, Genome Annotation and Comparative Genomics - Workshop @ICSB 2019-  RESET  Version - Copy",
            "type": "KBaseNarrative.Narrative",
            "ws_name": "wjriehl:narrative_1580925681044"
        },
        "nbformat": 4,
        "nbformat_minor": 1
    },
    "info": [
        144,
        "Narrative.1504710860060",
        "KBaseNarrative.Narrative-4.0",
        "2020-02-05T18:01:21+0000",
        1,
        "wjriehl",
        54980,
        "wjriehl:narrative_1580925681044",
        "165cbc8c9e89e6c0fc6f207ae6303461",
        174241,
        {
            "creator": "janakakbase",
            "method.RAST_SDK/annotate_plant_transcripts/44dd19a28a24ec2fdd178f5bf9f80303050412af": "1",
            "method.kb_maxbin/run_maxbin2/cb01c12e327a089953f59f4085623d9046daa11a": "2",
            "method.ProkkaAnnotation/annotate_contigs/30eb4fb9e26c82dcf02d55c58beabf7fb5796332": "1",
            "jupyter.markdown": "20",
            "jupyter.code": "1",
            "data_dependencies": "[]",
            "method.GenomeProteomeComparison/compare_two_proteomes/51060a171c71d15a85ce9c6f36c28e3c9dbcb2f4": "1",
            "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}",
            "format": "ipynb",
            "description": "",
            "method.PangenomeOrthomcl/build_pangenome_with_orthomcl/fd6b156cb12dd66341002f18325d6869c2b19136": "1",
            "type": "KBaseNarrative.Narrative",
            "method.kb_Msuite/run_checkM_lineage_wf/4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a": "4",
            "method.SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e": "1",
            "method.RAST_SDK/annotate_contigset/44dd19a28a24ec2fdd178f5bf9f80303050412af": "2",
            "is_temporary": "false",
            "method.SpeciesTreeBuilder/build_genome_set_from_tree/3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e": "1",
            "method.MEGAHIT/run_megahit/833c6d8cceedbb67c4001133e347f71cab488572": "1",
            "name": "Metagenome Assembly, Binning, Quality Assessment, Genome Annotation and Comparative Genomics - Workshop @ICSB 2019-  RESET  Version - Copy",
            "method.MetagenomeUtils/extract_bins_as_assemblies/66c2d8b2b1baab8a3d81cca10068df455db4a321": "1",
            "method.kb_IDBA/run_idba_ud/6b53504432594986d85ad0895cd3b99cd3720be8": "1",
            "ws_name": "wjriehl:narrative_1580925681044"
        }
    ],
    "path": [
        "54980/144/1"
    ],
    "provenance": [
        {
            "service": "narrative",
            "service_ver": "3.11.3",
            "input_ws_objects": [],
            "resolved_ws_objects": [],
            "external_data": [],
            "subactions": [],
            "custom": {},
            "description": "Saved by KBase Narrative Interface"
        }
    ],
    "creator": "wjriehl",
    "orig_wsid": 54980,
    "created": "2020-02-05T18:01:21+0000",
    "epoch": 1580925681769,
    "refs": [],
    "copy_source_inaccessible": 0,
    "extracted_ids": {}
}