{
    "data": {
        "cells": [
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Janthinobacterium FRC Isolate Analysis"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "# Janthinobacterium FRC Isolate Analysis\n\n### Authors\nXiaoqin Wu, Paramvir Dehal, Romy Chakraborty\n\n### Narrative Overview\nIn this study, groundwater samples from the ORNL Field Research Center site were collected from multiple wells, where researchers identified a Janthinobacterium isolate that produces violacein. Violacein is a naturally-occurring bis-indole pigment with antibiotic (anti- bacterial, anti-fungal and anti-tumor) properties.\nThe researchers loaded the isolate reads into KBase, performing QC and assembly. They applied both the Prokka and RAST annotation tools to the genome, with Prokka calling 5532 genes, while RAST called 5965. They then ran OrthoMCL to compare the two alternative annotations side by side. From this analysis, the researchers determined that both RAST and Prokka properly annotated 4 out of 5 genes in the violacein biosynthesis pathway. However, these algorithms differed in the specific violacein gene they missed. RAST missed VioC, while Prokka missed VioE. By combining both annotations, the researchers were able to confirm the presence of all violacein genes in their isolate of interest.\n\n# Upload Reads, Quality Assessment and De-novo Genome Assembly of Isolates\n\n### Loading reads from your own machine"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "import_type",
                                                "target_property": "import_type"
                                            },
                                            {
                                                "input_parameter": "fastq_fwd_staging_file_name",
                                                "target_property": "fastq_fwd_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "fastq_rev_staging_file_name",
                                                "target_property": "fastq_rev_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sra_staging_file_name",
                                                "target_property": "sra_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "interleaved",
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "import_reads_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_fastq_sra_as_reads_from_staging&image_name=data-pink.png&tag=release"
                                        },
                                        "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTQ/SRA File as Reads from Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "tooltip": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "ver": "1.0.13"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "FASTQ/FASTA"
                                            ],
                                            "description": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "FASTQ/FASTA",
                                                        "index": 0,
                                                        "value": "FASTQ/FASTA"
                                                    },
                                                    {
                                                        "display": "SRA",
                                                        "index": 1,
                                                        "value": "SRA"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "import_type",
                                            "optional": 0,
                                            "short_hint": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "ui_class": "parameter",
                                            "ui_name": "Import File Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_fwd_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Short read file containing a paired end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Forward/Left FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_rev_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Second short read file containing a paired end library in FASTA/FASTQ format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reverse/Right FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "SRA staing file path",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sra_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "SRA staing file path",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "SRA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads object that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads object that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads file is interleaved",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "interleaved",
                                            "optional": 0,
                                            "short_hint": "Select if reads file is interleaved",
                                            "ui_class": "parameter",
                                            "ui_name": "Interleaved"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.13"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "47d4f83d-dfc9-499b-8193-f1e0549a5c9d",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                                    "creation_time": 1523354954994,
                                    "exec_start_time": 1523354956342,
                                    "finish_time": 1523355008486,
                                    "finished": 1,
                                    "job_id": "5acc8d4ae4b09663c3f59d7b",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "30462/95/1",
                                            "report_name": "kb_sra_upload_report_cf2196e0-e08a-49b5-bcda-10ce4bf67dd2",
                                            "report_ref": "30462/96/1"
                                        }
                                    ],
                                    "run_id": "5925c754-b0be-4426-b75b-6020448e4250",
                                    "status": [
                                        "2018-04-10T10:10:08+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523355012502,
                                "launchState": {
                                    "cell_id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T10:09:15.004294Z",
                                    "job_id": "5acc8d4ae4b09663c3f59d7b",
                                    "run_id": "5925c754-b0be-4426-b75b-6020448e4250"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T10:09:13.886Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T10:09:15.084Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47d4f83d-dfc9-499b-8193-f1e0549a5c9d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                                                "creation_time": 1523354954994,
                                                "finished": 0,
                                                "job_id": "5acc8d4ae4b09663c3f59d7b",
                                                "job_state": "queued",
                                                "position": 3,
                                                "run_id": "5925c754-b0be-4426-b75b-6020448e4250",
                                                "status": [
                                                    "2018-04-10T10:09:14+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "8af8fbc4-011e-4e83-984d-b83628cc0688",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T10:09:15.222Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47d4f83d-dfc9-499b-8193-f1e0549a5c9d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                                                "creation_time": 1523354954994,
                                                "exec_start_time": 1523354956342,
                                                "finished": 0,
                                                "job_id": "5acc8d4ae4b09663c3f59d7b",
                                                "job_state": "in-progress",
                                                "run_id": "5925c754-b0be-4426-b75b-6020448e4250",
                                                "status": [
                                                    "2018-04-10T10:09:16+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T10:09:18.990Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47d4f83d-dfc9-499b-8193-f1e0549a5c9d",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                                                "creation_time": 1523354954994,
                                                "exec_start_time": 1523354956342,
                                                "finish_time": 1523355008486,
                                                "finished": 1,
                                                "job_id": "5acc8d4ae4b09663c3f59d7b",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "30462/95/1",
                                                        "report_name": "kb_sra_upload_report_cf2196e0-e08a-49b5-bcda-10ce4bf67dd2",
                                                        "report_ref": "30462/96/1"
                                                    }
                                                ],
                                                "run_id": "5925c754-b0be-4426-b75b-6020448e4250",
                                                "status": [
                                                    "2018-04-10T10:10:08+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T10:10:12.502Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "obj_ref": "30462/95/1",
                                        "report_name": "kb_sra_upload_report_cf2196e0-e08a-49b5-bcda-10ce4bf67dd2",
                                        "report_ref": "30462/96/1",
                                        "report_window_line_height": "16",
                                        "wsName": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acc8d4ae4b09663c3f59d7b": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:11:38 GMT",
                                        "params": {
                                            "fastq_fwd_staging_file_name": "bf01760f-3b3d-4be4-b6b4-d0c789975a1e.inter.fastq",
                                            "fastq_rev_staging_file_name": "",
                                            "import_type": "FASTQ/FASTA",
                                            "insert_size_mean": null,
                                            "insert_size_std_dev": null,
                                            "interleaved": 1,
                                            "name": "GW456_Reads",
                                            "read_orientation_outward": 0,
                                            "sequencing_tech": "Illumina",
                                            "single_genome": 1,
                                            "sra_staging_file_name": ""
                                        }
                                    }
                                }
                            },
                            "params": {
                                "fastq_fwd_staging_file_name": "bf01760f-3b3d-4be4-b6b4-d0c789975a1e.inter.fastq",
                                "fastq_rev_staging_file_name": "",
                                "import_type": "FASTQ/FASTA",
                                "insert_size_mean": null,
                                "insert_size_std_dev": null,
                                "interleaved": 1,
                                "name": "GW456_Reads",
                                "read_orientation_outward": 0,
                                "sequencing_tech": "Illumina",
                                "single_genome": 1,
                                "sra_staging_file_name": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 10:08:49 GMT",
                            "id": "84c8296e-f83a-4b73-9bb3-5694af0bd95d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fastq_sra_as_reads_from_staging/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                            "title": "Import FASTQ/SRA File as Reads from Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fastq_sra_as_reads_from_staging\",\n    {\n        \"import_type\": \"FASTQ/FASTA\",\n        \"fastq_fwd_staging_file_name\": \"bf01760f-3b3d-4be4-b6b4-d0c789975a1e.inter.fastq\",\n        \"fastq_rev_staging_file_name\": \"\",\n        \"sra_staging_file_name\": \"\",\n        \"sequencing_tech\": \"Illumina\",\n        \"name\": \"GW456_Reads\",\n        \"single_genome\": 1,\n        \"interleaved\": 1,\n        \"read_orientation_outward\": 0,\n        \"insert_size_std_dev\": None,\n        \"insert_size_mean\": None\n    },\n    tag=\"release\",\n    version=\"1.0.13\",\n    cell_id=\"84c8296e-f83a-4b73-9bb3-5694af0bd95d\",\n    run_id=\"5925c754-b0be-4426-b75b-6020448e4250\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "import_type",
                                                "target_property": "import_type"
                                            },
                                            {
                                                "input_parameter": "fastq_fwd_staging_file_name",
                                                "target_property": "fastq_fwd_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "fastq_rev_staging_file_name",
                                                "target_property": "fastq_rev_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sra_staging_file_name",
                                                "target_property": "sra_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "interleaved",
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "import_reads_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_fastq_sra_as_reads_from_staging&image_name=data-pink.png&tag=release"
                                        },
                                        "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTQ/SRA File as Reads from Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "tooltip": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "ver": "1.0.13"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "FASTQ/FASTA"
                                            ],
                                            "description": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "FASTQ/FASTA",
                                                        "index": 0,
                                                        "value": "FASTQ/FASTA"
                                                    },
                                                    {
                                                        "display": "SRA",
                                                        "index": 1,
                                                        "value": "SRA"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "import_type",
                                            "optional": 0,
                                            "short_hint": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "ui_class": "parameter",
                                            "ui_name": "Import File Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_fwd_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Short read file containing a paired end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Forward/Left FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_rev_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Second short read file containing a paired end library in FASTA/FASTQ format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reverse/Right FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "SRA staing file path",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sra_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "SRA staing file path",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "SRA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads object that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads object that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads file is interleaved",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "interleaved",
                                            "optional": 0,
                                            "short_hint": "Select if reads file is interleaved",
                                            "ui_class": "parameter",
                                            "ui_name": "Interleaved"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.13"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "fastq_fwd_staging_file_name": "bf01760f-3b3d-4be4-b6b4-d0c789975a1e.inter.fastq",
                                "fastq_rev_staging_file_name": "",
                                "import_type": "FASTQ/FASTA",
                                "insert_size_mean": null,
                                "insert_size_std_dev": null,
                                "interleaved": 1,
                                "name": "reads",
                                "read_orientation_outward": 0,
                                "sequencing_tech": "Illumina",
                                "single_genome": 1,
                                "sra_staging_file_name": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 18:21:49 GMT",
                            "id": "a7fd8d8b-a985-4b37-9b62-7598e06205c6",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fastq_sra_as_reads_from_staging/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:21:49 GMT",
                            "status": "new",
                            "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                            "title": "Import FASTQ/SRA File as Reads from Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fastq_sra_as_reads_from_staging\",\n    {\n        \"import_type\": \"FASTQ/FASTA\",\n        \"fastq_fwd_staging_file_name\": \"bf01760f-3b3d-4be4-b6b4-d0c789975a1e.inter.fastq\",\n        \"fastq_rev_staging_file_name\": \"\",\n        \"sra_staging_file_name\": \"\",\n        \"sequencing_tech\": \"Illumina\",\n        \"name\": \"reads\",\n        \"single_genome\": 1,\n        \"interleaved\": 1,\n        \"read_orientation_outward\": 0,\n        \"insert_size_std_dev\": None,\n        \"insert_size_mean\": None\n    },\n    tag=\"release\",\n    version=\"1.0.13\",\n    cell_id=\"a7fd8d8b-a985-4b37-9b62-7598e06205c6\",\n    run_id=\"15173cec-8a1d-4e5b-affd-d0c1c767e15f\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Loading raw reads from web"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Loading raw reads from web\n\nUpload from a public FTP site using FTP url.\n\nExample: \n\nfwd_file_url\u2019: https://www.dropbox.com/s/pgtja4btj62ctkx/small.forward.fq?dl=0\nrev_file_url\u2019: https://www.dropbox.com/s/hh55x00qluhfhr8/small.reverse.fq?dl=0\n\n\n[<sub>Return to Narrative contents</sub>](#Narrative-Overview)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                "id": "kb_uploadmethods/load_paired_end_reads_from_URL",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "download_type",
                                                "target_property": "download_type"
                                            },
                                            {
                                                "input_parameter": "fwd_file_url",
                                                "target_property": "fwd_file_url"
                                            },
                                            {
                                                "input_parameter": "rev_file_url",
                                                "target_property": "rev_file_url"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "urls_to_add",
                                                "target_property": "urls_to_add"
                                            },
                                            {
                                                "constant_value": 1,
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "upload_fastq_file",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/load_paired_end_reads_from_URL&image_name=data-pink.png&tag=beta"
                                        },
                                        "id": "kb_uploadmethods/load_paired_end_reads_from_URL",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Load Paired-End Reads From Web - v1.0.12",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Upload a Paired End Library from a URL into your Narrative",
                                        "tooltip": "Upload a Paired End Library from a URL into your Narrative",
                                        "ver": "1.0.13"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "FASTQ file URL and output reads filename",
                                            "id": "urls_to_add",
                                            "optional": 0,
                                            "parameter_ids": [
                                                "fwd_file_url",
                                                "rev_file_url",
                                                "name",
                                                "single_genome",
                                                "insert_size_mean",
                                                "insert_size_std_dev",
                                                "read_orientation_outward"
                                            ],
                                            "short_hint": "FASTQ file URL and output reads filename",
                                            "ui_name": "URL(s)",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Direct Download"
                                            ],
                                            "description": "URL type ('Regular URL (Direct Download Link)', 'FTP Link', 'Dropbox/Box Public Shared Link',  'Google Drive Public Shared Link')",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Direct Download Link",
                                                        "index": 0,
                                                        "value": "Direct Download"
                                                    },
                                                    {
                                                        "display": "FTP Link",
                                                        "index": 1,
                                                        "value": "FTP"
                                                    },
                                                    {
                                                        "display": "DropBox Public Shared Link",
                                                        "index": 2,
                                                        "value": "DropBox"
                                                    },
                                                    {
                                                        "display": "Google Drive Public Shared Link",
                                                        "index": 3,
                                                        "value": "Google Drive"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "download_type",
                                            "optional": 0,
                                            "short_hint": "URL type ('Regular URL (Direct Download Link)', 'FTP Link', 'Dropbox/Box Public Shared Link',  'Google Drive Public Shared Link')",
                                            "ui_class": "parameter",
                                            "ui_name": "URL Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fwd_file_url",
                                            "optional": 0,
                                            "short_hint": "Download link containing a single end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "URL for Forward/Left Reads (FASTA/FASTQ)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "rev_file_url",
                                            "optional": 1,
                                            "short_hint": "Second download link containing a single end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "URL for Reverse/Right Reads (FASTA/FASTQ)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the output object that will be created by this upload",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the output object that will be created by this upload",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "1.0.13"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "e42fda48-5968-466d-a7db-3b4d9d3c7800",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                    "creation_time": 1523384555393,
                                    "exec_start_time": 1523384559423,
                                    "finish_time": 1523384595692,
                                    "finished": 1,
                                    "job_id": "5acd00ebe4b09663c3f59ded",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "30530/93/2",
                                            "report_name": "kb_upload_mothods_report_64c20eaa-f410-43fb-8d5b-26cf6352952a",
                                            "report_ref": "30530/108/1"
                                        }
                                    ],
                                    "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597",
                                    "status": [
                                        "2018-04-10T18:23:15+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523384596188,
                                "launchState": {
                                    "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:22:35.403224Z",
                                    "job_id": "5acd00ebe4b09663c3f59ded",
                                    "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:22:34.248Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:22:35.428Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "e42fda48-5968-466d-a7db-3b4d9d3c7800",
                                                "awe_job_state": "queued",
                                                "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                                "creation_time": 1523384555393,
                                                "finished": 0,
                                                "job_id": "5acd00ebe4b09663c3f59ded",
                                                "job_state": "queued",
                                                "position": 4,
                                                "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597",
                                                "status": [
                                                    "2018-04-10T18:22:35+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "8ec998f3-8684-440f-8807-eeb19769944b",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:22:35.692Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "e42fda48-5968-466d-a7db-3b4d9d3c7800",
                                                "awe_job_state": "queued",
                                                "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                                "creation_time": 1523384555393,
                                                "finished": 0,
                                                "job_id": "5acd00ebe4b09663c3f59ded",
                                                "job_state": "queued",
                                                "position": 4,
                                                "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597",
                                                "status": [
                                                    "2018-04-10T18:22:35+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:22:35.764Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "e42fda48-5968-466d-a7db-3b4d9d3c7800",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                                "creation_time": 1523384555393,
                                                "exec_start_time": 1523384559423,
                                                "finished": 0,
                                                "job_id": "5acd00ebe4b09663c3f59ded",
                                                "job_state": "in-progress",
                                                "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597",
                                                "status": [
                                                    "2018-04-10T18:22:39+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:22:46.556Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "e42fda48-5968-466d-a7db-3b4d9d3c7800",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                                                "creation_time": 1523384555393,
                                                "exec_start_time": 1523384559423,
                                                "finish_time": 1523384595692,
                                                "finished": 1,
                                                "job_id": "5acd00ebe4b09663c3f59ded",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "30530/93/2",
                                                        "report_name": "kb_upload_mothods_report_64c20eaa-f410-43fb-8d5b-26cf6352952a",
                                                        "report_ref": "30530/108/1"
                                                    }
                                                ],
                                                "run_id": "a3546cc7-d0a2-43a5-8816-cc853e736597",
                                                "status": [
                                                    "2018-04-10T18:23:15+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:23:16.188Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "obj_ref": "30530/93/2",
                                        "report_name": "kb_upload_mothods_report_64c20eaa-f410-43fb-8d5b-26cf6352952a",
                                        "report_ref": "30530/108/1",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acc8c4ee4b09663c3f59d78": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "download_type": "DropBox",
                                            "sequencing_tech": "Illumina",
                                            "urls_to_add": [
                                                {
                                                    "fwd_file_url": "https://www.dropbox.com/s/pgtja4btj62ctkx/small.forward.fq?dl=0",
                                                    "insert_size_mean": null,
                                                    "insert_size_std_dev": null,
                                                    "name": "LoadFromWebReadsObject",
                                                    "read_orientation_outward": 0,
                                                    "rev_file_url": "https://www.dropbox.com/s/hh55x00qluhfhr8/small.reverse.fq?dl=0",
                                                    "single_genome": 1
                                                }
                                            ]
                                        }
                                    },
                                    "5acd00ebe4b09663c3f59ded": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:23:16 GMT",
                                        "params": {
                                            "download_type": "DropBox",
                                            "sequencing_tech": "Illumina",
                                            "urls_to_add": [
                                                {
                                                    "fwd_file_url": "https://www.dropbox.com/s/pgtja4btj62ctkx/small.forward.fq?dl=0",
                                                    "insert_size_mean": null,
                                                    "insert_size_std_dev": null,
                                                    "name": "LoadFromWebReadsObject",
                                                    "read_orientation_outward": 0,
                                                    "rev_file_url": "https://www.dropbox.com/s/hh55x00qluhfhr8/small.reverse.fq?dl=0",
                                                    "single_genome": 1
                                                }
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "download_type": "DropBox",
                                "sequencing_tech": "Illumina",
                                "urls_to_add": [
                                    {
                                        "fwd_file_url": "https://www.dropbox.com/s/pgtja4btj62ctkx/small.forward.fq?dl=0",
                                        "insert_size_mean": null,
                                        "insert_size_std_dev": null,
                                        "name": "LoadFromWebReadsObject",
                                        "read_orientation_outward": 0,
                                        "rev_file_url": "https://www.dropbox.com/s/hh55x00qluhfhr8/small.reverse.fq?dl=0",
                                        "single_genome": 1
                                    }
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 09:58:31 GMT",
                            "id": "157829ec-8b96-495e-8492-d718ddcb1fae",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/load_paired_end_reads_from_URL/beta"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Upload a Paired End Library from a URL into your Narrative",
                            "title": "Load Paired-End Reads From Web - v1.0.12"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/load_paired_end_reads_from_URL\",\n    {\n        \"urls_to_add\": [{\n            \"insert_size_std_dev\": None,\n            \"fwd_file_url\": \"https://www.dropbox.com/s/pgtja4btj62ctkx/small.forward.fq?dl=0\",\n            \"name\": \"LoadFromWebReadsObject\",\n            \"insert_size_mean\": None,\n            \"read_orientation_outward\": 0,\n            \"rev_file_url\": \"https://www.dropbox.com/s/hh55x00qluhfhr8/small.reverse.fq?dl=0\",\n            \"single_genome\": 1\n        }],\n        \"download_type\": \"DropBox\",\n        \"sequencing_tech\": \"Illumina\"\n    },\n    tag=\"beta\",\n    version=\"8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433\",\n    cell_id=\"157829ec-8b96-495e-8492-d718ddcb1fae\",\n    run_id=\"a3546cc7-d0a2-43a5-8816-cc853e736597\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                "id": "kb_uploadmethods/import_sra_as_reads_from_web",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "download_type",
                                                "target_property": "download_type"
                                            },
                                            {
                                                "input_parameter": "sra_urls_to_add",
                                                "target_property": "sra_urls_to_add"
                                            }
                                        ],
                                        "kb_service_method": "import_sra_from_web",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_refs"
                                                ],
                                                "target_property": "obj_refs"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_sra_as_reads_from_web&image_name=data-pink.png&tag=release"
                                        },
                                        "id": "kb_uploadmethods/import_sra_as_reads_from_web",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import SRA File as Reads From Web - v1.0.7",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import an SRA file from a web URL into your Narrative as a Reads data object",
                                        "tooltip": "Import an SRA file from a web URL into your Narrative as a Reads data object",
                                        "ver": "1.0.13"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "SRA file URL and output Reads file name",
                                            "id": "sra_urls_to_add",
                                            "optional": 0,
                                            "parameter_ids": [
                                                "file_url",
                                                "name",
                                                "sequencing_tech",
                                                "single_genome",
                                                "insert_size_mean",
                                                "insert_size_std_dev",
                                                "read_orientation_outward"
                                            ],
                                            "short_hint": "SRA file URL and output Reads file name",
                                            "ui_name": "SRA URL(s)",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Direct Download"
                                            ],
                                            "description": "URL type ('Regular URL (Direct Download Link)', 'FTP Link', 'Dropbox/Box Public Shared Link',  'Google Drive Public Shared Link')",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Direct Download Link",
                                                        "index": 0,
                                                        "value": "Direct Download"
                                                    },
                                                    {
                                                        "display": "FTP Link",
                                                        "index": 1,
                                                        "value": "FTP"
                                                    },
                                                    {
                                                        "display": "DropBox Public Shared Link",
                                                        "index": 2,
                                                        "value": "DropBox"
                                                    },
                                                    {
                                                        "display": "Google Drive Public Shared Link",
                                                        "index": 3,
                                                        "value": "Google Drive"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "download_type",
                                            "optional": 0,
                                            "short_hint": "URL type ('Regular URL (Direct Download Link)', 'FTP Link', 'Dropbox/Box Public Shared Link',  'Google Drive Public Shared Link')",
                                            "ui_class": "parameter",
                                            "ui_name": "URL Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "URL for source of SRA reads",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "file_url",
                                            "optional": 0,
                                            "short_hint": "URL for source of SRA reads",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "SRA URL"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Unknown"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.13"
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "editing",
                                    "params": "incomplete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "download_type": "FTP",
                                "sra_urls_to_add": [
                                    {
                                        "file_url": "",
                                        "insert_size_mean": null,
                                        "insert_size_std_dev": null,
                                        "name": "",
                                        "read_orientation_outward": 0,
                                        "sequencing_tech": "Unknown",
                                        "single_genome": 1
                                    }
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": true
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 18:24:44 GMT",
                            "id": "d12ab49c-651d-4aaf-86aa-d6fbe032f78a",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_sra_as_reads_from_web/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:24:44 GMT",
                            "status": "new",
                            "subtitle": "Import an SRA file from a web URL into your Narrative as a Reads data object",
                            "title": "Import SRA File as Reads From Web - v1.0.7"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": ""
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Quality assesment and processing of the reads"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "##  Quality assesment and processing of the reads\n\n### FastQC\n[FastQC](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/) provides a simple way to do some quality control checks on raw sequence data coming from high throughput sequencing pipelines. It provides a set of analyses which you can use to get a quick impression of whether your data has any problems of which you should be aware before doing any further analysis.\n\n\n### Reading the FastQC Report\n\nThe output of the FastQC app (see below) is an HTML report displaying graphical and statistical information about the sequencing reads. By default, this report is generated under the \u201cResult\u201d tab of the app. However, it can also be shown in a separate tab within the browser by clicking the \u201cView report in separate window\u201d button that appears in the top left of the cell under \u201cReport\u201d.\n\nFor a paired-end read library, the first page of the report displays an overview for the forward reads, while the second page displays an overview for the reverse reads. Under the \u201cSummary\u201d section of the output report, there is a list of hyperlinked analysis modules that contain information about various aspects of the reads. Next to each analysis module is a symbol indicating how the module evaluated each aspect of the reads. A green circle with checkmark indicates that the reads matched expected values for acceptable quality for that module, while a red circle with an \u201cX\u201d means that the reads did not pass a quality check by that module and may need to undergo quality control. For instance, a red circle with an \u201cX\u201d next to \u201cPer base sequence content\u201d could mean that GC content of the read has gone above an expected threshold after a certain position, and that trimming is required on the ends of the reads. Additionally, FastQC will display a yellow circle with an exclamation point to indicate that the user should take note of a specific aspect of the reads for performing quality control. For example, this caution symbol make appear next to the \u201cOverrepresented sequences\u201d section to indicate that FastQC identified adapters that need to be removed before proceeding to assembly.\n\n### Summary\n\nAfter running FastQC on this data, it appears that these reads are of high quality based on the summary of the output report. A very small percentage of reads contain adapter sequences. These can be trimmed off or can be used for assembly without further quality control. The reverse reads are generally lower quality towards the end, but still relatively high quality.\n"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                "id": "kb_fastqc/runFastQC",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "input_ws"
                                            },
                                            {
                                                "input_parameter": "input_file_ref",
                                                "target_property": "input_file_ref",
                                                "target_type_transform": "resolved-ref"
                                            }
                                        ],
                                        "kb_service_method": "runFastQC",
                                        "kb_service_name": "kb_fastqc",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "seaver"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads"
                                        ],
                                        "git_commit_hash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                        "icon": {
                                            "url": "img?method_id=kb_fastqc/runFastQC&image_name=fastqc-pink.png&tag=release"
                                        },
                                        "id": "kb_fastqc/runFastQC",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseRNASeq.RNASeqSampleSet"
                                        ],
                                        "module_name": "kb_fastqc",
                                        "name": "FastQC - Assess Read Quality",
                                        "namespace": "kb_fastqc",
                                        "output_types": [],
                                        "subtitle": "A quality control application for high throughput sequence data.",
                                        "tooltip": "A quality control application for high throughput sequence data.",
                                        "ver": "1.0.4"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Select the single-end or paired-end reads object to check for read quality.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_file_ref",
                                            "optional": 0,
                                            "short_hint": "Select the single-end or paired-end reads object to check for read quality.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseRNASeq.RNASeqSampleSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Reads"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.4"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "7c2ad0f0-ebb8-4e3c-9e2d-c5cf6dd0d46e",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                    "creation_time": 1523385006488,
                                    "exec_start_time": 1523385008381,
                                    "finish_time": 1523385090385,
                                    "finished": 1,
                                    "job_id": "5acd02aee4b09663c3f59df9",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_fastqc_report_b20fd925-9630-4811-aa67-792bc5eda0b9",
                                            "report_ref": "30530/109/1"
                                        }
                                    ],
                                    "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8",
                                    "status": [
                                        "2018-04-10T18:31:30+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523385098788,
                                "launchState": {
                                    "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:30:06.497214Z",
                                    "job_id": "5acd02aee4b09663c3f59df9",
                                    "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:30:06.042Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:30:06.544Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "7c2ad0f0-ebb8-4e3c-9e2d-c5cf6dd0d46e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                                "creation_time": 1523385006488,
                                                "finished": 0,
                                                "job_id": "5acd02aee4b09663c3f59df9",
                                                "job_state": "queued",
                                                "position": 20,
                                                "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8",
                                                "status": [
                                                    "2018-04-10T18:30:06+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "0a2efa94-b416-400d-af1c-1d28cc4d8418",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:30:06.724Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "7c2ad0f0-ebb8-4e3c-9e2d-c5cf6dd0d46e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                                "creation_time": 1523385006488,
                                                "finished": 0,
                                                "job_id": "5acd02aee4b09663c3f59df9",
                                                "job_state": "queued",
                                                "position": 20,
                                                "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8",
                                                "status": [
                                                    "2018-04-10T18:30:06+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:30:06.974Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "7c2ad0f0-ebb8-4e3c-9e2d-c5cf6dd0d46e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                                "creation_time": 1523385006488,
                                                "exec_start_time": 1523385008381,
                                                "finished": 0,
                                                "job_id": "5acd02aee4b09663c3f59df9",
                                                "job_state": "in-progress",
                                                "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8",
                                                "status": [
                                                    "2018-04-10T18:30:08+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:30:16.950Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "7c2ad0f0-ebb8-4e3c-9e2d-c5cf6dd0d46e",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                                                "creation_time": 1523385006488,
                                                "exec_start_time": 1523385008381,
                                                "finish_time": 1523385090385,
                                                "finished": 1,
                                                "job_id": "5acd02aee4b09663c3f59df9",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_fastqc_report_b20fd925-9630-4811-aa67-792bc5eda0b9",
                                                        "report_ref": "30530/109/1"
                                                    }
                                                ],
                                                "run_id": "4d6682ac-7d3f-4a50-9e78-7d156aa889e8",
                                                "status": [
                                                    "2018-04-10T18:31:30+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:31:38.788Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_fastqc_report_b20fd925-9630-4811-aa67-792bc5eda0b9",
                                        "report_ref": "30530/109/1",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acd02aee4b09663c3f59df9": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:31:41 GMT",
                                        "params": {
                                            "input_file_ref": "GW456_Reads"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_file_ref": "GW456_Reads"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 18:29:55 GMT",
                            "id": "7a3e85da-57b1-4b1e-b9c4-4795020a62eb",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_fastqc/runFastQC/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:29:55 GMT",
                            "status": "new",
                            "subtitle": "A quality control application for high throughput sequence data.",
                            "title": "FastQC - Assess Read Quality"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_fastqc/runFastQC\",\n    {\n        \"input_file_ref\": \"GW456_Reads\"\n    },\n    tag=\"release\",\n    version=\"1.0.4\",\n    cell_id=\"7a3e85da-57b1-4b1e-b9c4-4795020a62eb\",\n    run_id=\"4d6682ac-7d3f-4a50-9e78-7d156aa889e8\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                "id": "kb_fastqc/runFastQC",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "input_ws"
                                            },
                                            {
                                                "input_parameter": "input_file_ref",
                                                "target_property": "input_file_ref",
                                                "target_type_transform": "resolved-ref"
                                            }
                                        ],
                                        "kb_service_method": "runFastQC",
                                        "kb_service_name": "kb_fastqc",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "seaver"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads"
                                        ],
                                        "git_commit_hash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                        "icon": {
                                            "url": "img?method_id=kb_fastqc/runFastQC&image_name=fastqc-pink.png&tag=release"
                                        },
                                        "id": "kb_fastqc/runFastQC",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseRNASeq.RNASeqSampleSet"
                                        ],
                                        "module_name": "kb_fastqc",
                                        "name": "FastQC - Assess Read Quality",
                                        "namespace": "kb_fastqc",
                                        "output_types": [],
                                        "subtitle": "A quality control application for high throughput sequence data.",
                                        "tooltip": "A quality control application for high throughput sequence data.",
                                        "ver": "1.0.4"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Select the single-end or paired-end reads object to check for read quality.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_file_ref",
                                            "optional": 0,
                                            "short_hint": "Select the single-end or paired-end reads object to check for read quality.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseRNASeq.RNASeqSampleSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Reads"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.4"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acabee4e4b09663c3f59bed": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "input_file_ref": "GW456A_reads"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_file_ref": "GW456A_reads"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:16:16 GMT",
                            "id": "045b6d92-7a09-4a3d-abe1-aefedeeb6cc7",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_fastqc/runFastQC/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "A quality control application for high throughput sequence data.",
                            "title": "FastQC - Assess Read Quality"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_fastqc/runFastQC\",\n    {\n        \"input_file_ref\": \"GW456A_reads\"\n    },\n    tag=\"release\",\n    version=\"1.0.4\",\n    cell_id=\"045b6d92-7a09-4a3d-abe1-aefedeeb6cc7\",\n    run_id=\"54a6d7b6-b6ba-47de-b44c-f66c0a7e8ba5\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "FastQC Summary"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### FastQC Summary\n\n**GW456A** - good quality; 1% of forward reads have adapter sequence; reverse reads generally lower quality at the end.\n\n### Processing reads - reads trimming with Trimmomatic\n\n[Trimmomatic](http://www.usadellab.org/cms/?page=trimmomatic) performs a variety of useful read trimming steps, including adapter removal and quality trimming."
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "09b94c39b2fab79962a8d978aa15a424342defe4",
                                "id": "kb_trimmomatic/run_trimmomatic",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "input_ws"
                                            },
                                            {
                                                "input_parameter": "input_reads_ref",
                                                "target_property": "input_reads_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_reads_name",
                                                "target_property": "output_reads_name"
                                            },
                                            {
                                                "input_parameter": "translate_to_phred33",
                                                "target_property": "translate_to_phred33"
                                            },
                                            {
                                                "input_parameter": "adapter_clip",
                                                "target_property": "adapter_clip"
                                            },
                                            {
                                                "input_parameter": "sliding_window",
                                                "target_property": "sliding_window"
                                            },
                                            {
                                                "input_parameter": "leading_min_quality",
                                                "target_property": "leading_min_quality"
                                            },
                                            {
                                                "input_parameter": "trailing_min_quality",
                                                "target_property": "trailing_min_quality"
                                            },
                                            {
                                                "input_parameter": "crop_length",
                                                "target_property": "crop_length"
                                            },
                                            {
                                                "input_parameter": "head_crop_length",
                                                "target_property": "head_crop_length"
                                            },
                                            {
                                                "input_parameter": "min_length",
                                                "target_property": "min_length"
                                            }
                                        ],
                                        "kb_service_method": "runTrimmomatic",
                                        "kb_service_name": "kb_trimmomatic",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "09b94c39b2fab79962a8d978aa15a424342defe4"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "psdehal",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads"
                                        ],
                                        "git_commit_hash": "09b94c39b2fab79962a8d978aa15a424342defe4",
                                        "icon": {
                                            "url": "img?method_id=kb_trimmomatic/run_trimmomatic&image_name=trimmomatic-pink.png&tag=release"
                                        },
                                        "id": "kb_trimmomatic/run_trimmomatic",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseRNASeq.RNASeqSampleSet",
                                            "KBaseSets.ReadsSet"
                                        ],
                                        "module_name": "kb_trimmomatic",
                                        "name": "Trimmomatic - Read Trimming - v0.36",
                                        "namespace": "kb_trimmomatic",
                                        "output_types": [
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseSets.ReadsSet"
                                        ],
                                        "subtitle": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                                        "tooltip": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                                        "ver": "1.2.9"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "description": "",
                                            "id": "adapter_clip",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "adapterFa",
                                                "seed_mismatches",
                                                "palindrome_clip_threshold",
                                                "simple_clip_threshold"
                                            ],
                                            "short_hint": "Configure if you wish to remove standard adapters",
                                            "ui_name": "Adapter clipping options",
                                            "with_border": 0
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "description": "",
                                            "id": "sliding_window",
                                            "optional": 0,
                                            "parameter_ids": [
                                                "sliding_window_size",
                                                "sliding_window_min_quality"
                                            ],
                                            "short_hint": "Configure quality window options",
                                            "ui_name": "Sliding window options",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The read library or read library set for which you want to trim.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_reads_ref",
                                            "optional": 0,
                                            "short_hint": "The read library or read library set to examine",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseRNASeq.RNASeqSampleSet",
                                                    "KBaseSets.ReadsSet",
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read library (or Set) object <font color=red>*</font>"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Base name for output read library or read library set object",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_reads_name",
                                            "optional": 0,
                                            "short_hint": "Base name for output read library or read library set object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSets.ReadsSet",
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output library (or Set) name <font color=red>*</font>"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).  Does nothing if already phred33.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "no",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "yes",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "translate_to_phred33",
                                            "optional": 1,
                                            "short_hint": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).",
                                            "ui_class": "parameter",
                                            "ui_name": "Translate quality encoding from phred64 to phred33"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The reference adapter sequences.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "TruSeq3-PE",
                                                        "index": 0,
                                                        "value": "TruSeq3-PE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq2-PE",
                                                        "index": 1,
                                                        "value": "TruSeq2-PE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq3-PE-2",
                                                        "index": 2,
                                                        "value": "TruSeq3-PE-2.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq3-SE",
                                                        "index": 3,
                                                        "value": "TruSeq3-SE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq2-SE",
                                                        "index": 4,
                                                        "value": "TruSeq2-SE.fa"
                                                    },
                                                    {
                                                        "display": "NexteraPE-PE",
                                                        "index": 5,
                                                        "value": "NexteraPE-PE.fa"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "adapterFa",
                                            "optional": 1,
                                            "short_hint": "The reference sequences for trimming.",
                                            "ui_class": "parameter",
                                            "ui_name": "Adapters"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2"
                                            ],
                                            "description": "Specifies the maximum mismatch count which will still allow a full match to be performed.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "seed_mismatches",
                                            "optional": 1,
                                            "short_hint": "Maximum mismatch count which will still allow a full match.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Seed mismatches"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "30"
                                            ],
                                            "description": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "palindrome_clip_threshold",
                                            "optional": 1,
                                            "short_hint": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Palindrome clip threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "simple_clip_threshold",
                                            "optional": 1,
                                            "short_hint": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Simple clip threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "4"
                                            ],
                                            "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sliding_window_size",
                                            "optional": 1,
                                            "short_hint": "Specifies the number of bases to average across.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Sliding window size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "15"
                                            ],
                                            "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sliding_window_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the average quality required.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Sliding window minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Removes bases regardless of quality from the end of the read, so that the read has maximally the specified length after this step has been performed. Steps performed after CROP might of course further shorten the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "crop_length",
                                            "optional": 1,
                                            "short_hint": "The number of bases to keep, from the start of the read (e.g. tail crop 10 bases from a 150 base read: enter \"140\").",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Post Tail Crop length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Removes the specified number of bases, regardless of quality, from the beginning of the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "head_crop_length",
                                            "optional": 1,
                                            "short_hint": "The number of bases to remove from the start of the read (e.g. head crop 10 bases: enter \"10\").",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Head crop length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "3"
                                            ],
                                            "description": "Remove low quality bases from the beginning. As long as a base has a value below this threshold the base is removed and the next base will be investigated.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "leading_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum quality required to keep a base at start of read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Leading minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "3"
                                            ],
                                            "description": "Remove low quality bases from the end. As long as a base has a value below this threshold the base is removed and the next base (which as trimmomatic is starting from the 3  prime end would be base preceding the just removed base) will be investigated. This approach can be used removing the special illumina  low quality segment  regions (which are marked with quality score of 2), but we recommend Sliding Window or MaxInfo instead.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "trailing_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum quality required to keep a base at end of read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Trailing minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "36"
                                            ],
                                            "description": "This module removes reads that fall below the specified minimal length. Reads removed by this step will be counted and included in the \"dropped reads\" count presented in the trimmomatic summary.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_length",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum length of reads to be kept.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum read length"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.9"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "a1f6bacf-7911-4a8f-81e3-01a4bb0247c1",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                    "creation_time": 1523385209409,
                                    "exec_start_time": 1523385212315,
                                    "finish_time": 1523385436472,
                                    "finished": 1,
                                    "job_id": "5acd0379e4b09663c3f59e01",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_trimmomatic_report_dfac1d6b-545c-48a1-873d-16cf27bf6746",
                                            "report_ref": "30530/111/1"
                                        }
                                    ],
                                    "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7",
                                    "status": [
                                        "2018-04-10T18:37:16+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523385444154,
                                "launchState": {
                                    "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:33:29.419114Z",
                                    "job_id": "5acd0379e4b09663c3f59e01",
                                    "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:33:29.004Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:33:29.434Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "a1f6bacf-7911-4a8f-81e3-01a4bb0247c1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                                "creation_time": 1523385209409,
                                                "finished": 0,
                                                "job_id": "5acd0379e4b09663c3f59e01",
                                                "job_state": "queued",
                                                "position": 19,
                                                "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7",
                                                "status": [
                                                    "2018-04-10T18:33:29+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "fc66889c-1af8-401f-86c5-96269b3c8d84",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:33:29.642Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "a1f6bacf-7911-4a8f-81e3-01a4bb0247c1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                                "creation_time": 1523385209409,
                                                "finished": 0,
                                                "job_id": "5acd0379e4b09663c3f59e01",
                                                "job_state": "queued",
                                                "position": 19,
                                                "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7",
                                                "status": [
                                                    "2018-04-10T18:33:29+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:33:29.856Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "a1f6bacf-7911-4a8f-81e3-01a4bb0247c1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                                "creation_time": 1523385209409,
                                                "exec_start_time": 1523385212315,
                                                "finished": 0,
                                                "job_id": "5acd0379e4b09663c3f59e01",
                                                "job_state": "in-progress",
                                                "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7",
                                                "status": [
                                                    "2018-04-10T18:33:32+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:33:39.888Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "a1f6bacf-7911-4a8f-81e3-01a4bb0247c1",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                                                "creation_time": 1523385209409,
                                                "exec_start_time": 1523385212315,
                                                "finish_time": 1523385436472,
                                                "finished": 1,
                                                "job_id": "5acd0379e4b09663c3f59e01",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_trimmomatic_report_dfac1d6b-545c-48a1-873d-16cf27bf6746",
                                                        "report_ref": "30530/111/1"
                                                    }
                                                ],
                                                "run_id": "f60d7ddf-e372-4ec4-9f4c-099a392d82b7",
                                                "status": [
                                                    "2018-04-10T18:37:16+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:37:24.154Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_trimmomatic_report_dfac1d6b-545c-48a1-873d-16cf27bf6746",
                                        "report_ref": "30530/111/1",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acabfebe4b09663c3f59bef": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "adapter_clip": {
                                                "adapterFa": "TruSeq3-PE.fa",
                                                "palindrome_clip_threshold": 30,
                                                "seed_mismatches": 2,
                                                "simple_clip_threshold": 10
                                            },
                                            "crop_length": null,
                                            "head_crop_length": 0,
                                            "input_reads_ref": "GW456A_reads",
                                            "leading_min_quality": 3,
                                            "min_length": 36,
                                            "output_reads_name": "GW456A_trim_reads",
                                            "sliding_window": {
                                                "sliding_window_min_quality": 15,
                                                "sliding_window_size": 4
                                            },
                                            "trailing_min_quality": 3,
                                            "translate_to_phred33": "1"
                                        }
                                    },
                                    "5acd0379e4b09663c3f59e01": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:37:27 GMT",
                                        "params": {
                                            "adapter_clip": {
                                                "adapterFa": "TruSeq3-PE.fa",
                                                "palindrome_clip_threshold": 30,
                                                "seed_mismatches": 2,
                                                "simple_clip_threshold": 10
                                            },
                                            "crop_length": null,
                                            "head_crop_length": 0,
                                            "input_reads_ref": "GW456A_reads",
                                            "leading_min_quality": 3,
                                            "min_length": 36,
                                            "output_reads_name": "GW456A_trim_reads",
                                            "sliding_window": {
                                                "sliding_window_min_quality": 15,
                                                "sliding_window_size": 4
                                            },
                                            "trailing_min_quality": 3,
                                            "translate_to_phred33": "1"
                                        }
                                    }
                                }
                            },
                            "paramState": "adapter_clip",
                            "params": {
                                "adapter_clip": {
                                    "adapterFa": "TruSeq3-PE.fa",
                                    "palindrome_clip_threshold": 30,
                                    "seed_mismatches": 2,
                                    "simple_clip_threshold": 10
                                },
                                "crop_length": null,
                                "head_crop_length": 0,
                                "input_reads_ref": "GW456A_reads",
                                "leading_min_quality": 3,
                                "min_length": 36,
                                "output_reads_name": "GW456A_trim_reads",
                                "sliding_window": {
                                    "sliding_window_min_quality": 15,
                                    "sliding_window_size": 4
                                },
                                "trailing_min_quality": 3,
                                "translate_to_phred33": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:19:03 GMT",
                            "id": "dc045ce0-2fd9-43f8-a725-01a497e7ca3a",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_trimmomatic/run_trimmomatic/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                            "title": "Trimmomatic - Read Trimming - v0.36"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_trimmomatic/run_trimmomatic\",\n    {\n        \"input_reads_ref\": \"GW456A_reads\",\n        \"output_reads_name\": \"GW456A_trim_reads\",\n        \"translate_to_phred33\": \"1\",\n        \"adapter_clip\": {\n            \"adapterFa\": \"TruSeq3-PE.fa\",\n            \"seed_mismatches\": 2,\n            \"palindrome_clip_threshold\": 30,\n            \"simple_clip_threshold\": 10\n        },\n        \"sliding_window\": {\n            \"sliding_window_size\": 4,\n            \"sliding_window_min_quality\": 15\n        },\n        \"crop_length\": None,\n        \"head_crop_length\": 0,\n        \"leading_min_quality\": 3,\n        \"trailing_min_quality\": 3,\n        \"min_length\": 36\n    },\n    tag=\"release\",\n    version=\"1.2.9\",\n    cell_id=\"dc045ce0-2fd9-43f8-a725-01a497e7ca3a\",\n    run_id=\"f60d7ddf-e372-4ec4-9f4c-099a392d82b7\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Hello!"
                        },
                        "cellState": {
                            "selected": false
                        }
                    }
                },
                "source": "Hello!"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Trimmomatic Summary"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Trimmomatic Summary\n\nGW456A - removed about ~3.2% of reads, in almost all cases because the reverse read was completely dropped due to low quality."
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                "id": "kb_fastqc/runFastQC",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "input_ws"
                                            },
                                            {
                                                "input_parameter": "input_file_ref",
                                                "target_property": "input_file_ref",
                                                "target_type_transform": "resolved-ref"
                                            }
                                        ],
                                        "kb_service_method": "runFastQC",
                                        "kb_service_name": "kb_fastqc",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "seaver"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads"
                                        ],
                                        "git_commit_hash": "0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac",
                                        "icon": {
                                            "url": "img?method_id=kb_fastqc/runFastQC&image_name=fastqc-pink.png&tag=release"
                                        },
                                        "id": "kb_fastqc/runFastQC",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseRNASeq.RNASeqSampleSet"
                                        ],
                                        "module_name": "kb_fastqc",
                                        "name": "FastQC - Assess Read Quality",
                                        "namespace": "kb_fastqc",
                                        "output_types": [],
                                        "subtitle": "A quality control application for high throughput sequence data.",
                                        "tooltip": "A quality control application for high throughput sequence data.",
                                        "ver": "1.0.4"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Select the single-end or paired-end reads object to check for read quality.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_file_ref",
                                            "optional": 0,
                                            "short_hint": "Select the single-end or paired-end reads object to check for read quality.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseRNASeq.RNASeqSampleSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Reads"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.4"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "26fa2bbd-9ccd-4b6c-bd34-17b388a20fc1",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                                    "creation_time": 1523385317031,
                                    "exec_start_time": 1523385318800,
                                    "finish_time": 1523385406234,
                                    "finished": 1,
                                    "job_id": "5acd03e4e4b09663c3f59e0a",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_fastqc_report_3955a33c-a7fa-4eb5-b66c-51ecf6476c79",
                                            "report_ref": "30530/110/1"
                                        }
                                    ],
                                    "run_id": "f6803762-35ce-45ec-8cf8-c7aa1dcec74c",
                                    "status": [
                                        "2018-04-10T18:36:46+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523385414432,
                                "launchState": {
                                    "cell_id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:35:17.040842Z",
                                    "job_id": "5acd03e4e4b09663c3f59e0a",
                                    "run_id": "f6803762-35ce-45ec-8cf8-c7aa1dcec74c"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:35:15.978Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:35:17.060Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "26fa2bbd-9ccd-4b6c-bd34-17b388a20fc1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                                                "creation_time": 1523385317031,
                                                "finished": 0,
                                                "job_id": "5acd03e4e4b09663c3f59e0a",
                                                "job_state": "queued",
                                                "position": 25,
                                                "run_id": "f6803762-35ce-45ec-8cf8-c7aa1dcec74c",
                                                "status": [
                                                    "2018-04-10T18:35:16+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "c768e19f-4faa-4473-a3aa-dc8fd0c002f0",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:35:17.246Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "26fa2bbd-9ccd-4b6c-bd34-17b388a20fc1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                                                "creation_time": 1523385317031,
                                                "exec_start_time": 1523385318800,
                                                "finished": 0,
                                                "job_id": "5acd03e4e4b09663c3f59e0a",
                                                "job_state": "in-progress",
                                                "run_id": "f6803762-35ce-45ec-8cf8-c7aa1dcec74c",
                                                "status": [
                                                    "2018-04-10T18:35:18+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:35:21.238Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "26fa2bbd-9ccd-4b6c-bd34-17b388a20fc1",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                                                "creation_time": 1523385317031,
                                                "exec_start_time": 1523385318800,
                                                "finish_time": 1523385406234,
                                                "finished": 1,
                                                "job_id": "5acd03e4e4b09663c3f59e0a",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_fastqc_report_3955a33c-a7fa-4eb5-b66c-51ecf6476c79",
                                                        "report_ref": "30530/110/1"
                                                    }
                                                ],
                                                "run_id": "f6803762-35ce-45ec-8cf8-c7aa1dcec74c",
                                                "status": [
                                                    "2018-04-10T18:36:46+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:36:54.432Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_fastqc_report_3955a33c-a7fa-4eb5-b66c-51ecf6476c79",
                                        "report_ref": "30530/110/1",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac096e4b09663c3f59bf0": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "input_file_ref": "GW456A_trim_reads_paired"
                                        }
                                    },
                                    "5acd03e4e4b09663c3f59e0a": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:36:57 GMT",
                                        "params": {
                                            "input_file_ref": "GW456A_trim_reads_paired"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_file_ref": "GW456A_trim_reads_paired"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:21:28 GMT",
                            "id": "f3da5f7d-e13b-45d6-aa58-85503fdb9931",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_fastqc/runFastQC/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "A quality control application for high throughput sequence data.",
                            "title": "FastQC - Assess Read Quality"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_fastqc/runFastQC\",\n    {\n        \"input_file_ref\": \"GW456A_trim_reads_paired\"\n    },\n    tag=\"release\",\n    version=\"1.0.4\",\n    cell_id=\"f3da5f7d-e13b-45d6-aa58-85503fdb9931\",\n    run_id=\"f6803762-35ce-45ec-8cf8-c7aa1dcec74c\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "FastQC Summary"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### FastQC Summary\n\nTrimming dropped adapter count 10x and improved overall read quality of the reverse reads to about the same level as the forward reads."
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Assembly and annotation"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "## Assembly and annotation\n\n### De novo assembly in KBase\nKBase has integrated many different open source de novo assemblers by wrapping existing assembly algorithms into KBase apps. These assembly apps include [SPAdes](http://cab.spbu.ru/software/spades/), MEGAHIT, and Velvet. In KBase, running these assembly apps on a set of reads generates an Assembly object, which contains the assembled contigs and can be used in downstream analyses or downloaded as a FASTA file.\n\nSPAdes is a good assembler for prokaryotic reads, although it has been optimized for single cell data. It uses multisized de Bruijn graphs to generate a final assembly from multiple k-mers combined with error and mismatch correction tools (Bankevich et al., 2012). MEGAHIT (Li, et al., 2015) is a single node assembler for large and complex metagenomics NGS reads, such as soil. It makes use of succinct de Bruijn graph (SdBG) to achieve low memory assembly. Velvet (Zerbino, D. R., Birney, E. (2008) is a de novo genomic assembler specially designed for short read sequencing technologies. It is important to note that Velvet is not deterministic (See https://www.biostars.org/p/86907/ and https://www.researchgate.net/post/Does_velvet_generate_different_assemblies_from_the_same_input_data_and_same_velvet_parameters )\n\nAfter performing multiple assemblies on a set of sequencing reads, it can be useful to compare the performance of each assembler by analyzing the quality of each assembly. QUAST is an open source assembly quality assessment tool that allow users to compare summary statistics of multiple assemblies (Gurevich, Saveliev, Vyahhi, & Tesler, 2013). These statistics can be used to determine which assembly is optimal for feeding into downstream annotation pipelines.\n\nTo test what worked best, I performed 6 assemblies per isolate: (Trimmed, Untrimmed) x (MEGAHIT, Velvet, SPAdes)."
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                "id": "MEGAHIT/run_megahit",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_library_ref",
                                                "target_property": "read_library_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "megahit_parameter_preset",
                                                "target_property": "megahit_parameter_preset"
                                            },
                                            {
                                                "input_parameter": "min_count",
                                                "target_property": "min_count"
                                            },
                                            {
                                                "input_parameter": "k_min",
                                                "target_property": "k_min"
                                            },
                                            {
                                                "input_parameter": "k_max",
                                                "target_property": "k_max"
                                            },
                                            {
                                                "input_parameter": "k_step",
                                                "target_property": "k_step"
                                            },
                                            {
                                                "input_parameter": "k_list",
                                                "target_property": "k_list"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_megahit",
                                        "kb_service_name": "MEGAHIT",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "833c6d8cceedbb67c4001133e347f71cab488572"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "msneddon",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                        "icon": {
                                            "url": "img?method_id=MEGAHIT/run_megahit&image_name=megahit-blue.png&tag=release"
                                        },
                                        "id": "MEGAHIT/run_megahit",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseFile.PairedEndLibrary"
                                        ],
                                        "module_name": "MEGAHIT",
                                        "name": "Assemble Reads with MEGAHIT v1.1.1",
                                        "namespace": "MEGAHIT",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "tooltip": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "ver": "2.2.8"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_library_ref",
                                            "optional": 0,
                                            "short_hint": "Read library (only PairedEnd Libs supported now)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "MEGAHIT.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "Enter a name for the assembled contigs data object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Assembly name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "This option overrides a group of parameters.\nmeta-sensitive  '--min-count 1 --k-list 21,29,39,49,...,129,141'\nmeta-large      '--k-min 27 --k-max 127 --k-step 10'",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "meta-sensitive - More sensitive assembly, but slower",
                                                        "index": 0,
                                                        "value": "meta-sensitive"
                                                    },
                                                    {
                                                        "display": "meta-large - Large and complex assembly, e.g. soil",
                                                        "index": 1,
                                                        "value": "meta-large"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "megahit_parameter_preset",
                                            "optional": 1,
                                            "short_hint": "Select a MEGAHIT parameter preset",
                                            "ui_class": "parameter",
                                            "ui_name": "Parameter preset"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_count",
                                            "optional": 1,
                                            "short_hint": "minimum multiplicity for filtering (k_min+1)-mers, default 2",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-count"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_min",
                                            "optional": 1,
                                            "short_hint": "minimum kmer size (<= 127), must be odd number, default 21",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 127,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-min"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_max",
                                            "optional": 1,
                                            "short_hint": "maximum kmer size (<= 255), must be odd number, default 141",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-max"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_step",
                                            "optional": 1,
                                            "short_hint": "increment of kmer size of each iteration (<= 28), must be even number, default 12",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 28,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-step"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_list",
                                            "optional": 1,
                                            "short_hint": "list of kmer size (all must be odd, in the range 15-255, increment <= 28)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 15,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-list"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2000"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "minimum length of contigs to output",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 300,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-contig-len"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "2.2.8"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "774f1416-a7a6-4b69-b4e7-5014af9ba44d",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                    "creation_time": 1523386042258,
                                    "exec_start_time": 1523386043978,
                                    "finish_time": 1523386268217,
                                    "finished": 1,
                                    "job_id": "5acd06bae4b09663c3f59e1d",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_megahit_report_bc1778ac-c640-46d7-a547-7ad79ee137d5",
                                            "report_ref": "30530/112/1"
                                        }
                                    ],
                                    "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5",
                                    "status": [
                                        "2018-04-10T18:51:08+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523386278722,
                                "launchState": {
                                    "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:47:22.267556Z",
                                    "job_id": "5acd06bae4b09663c3f59e1d",
                                    "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:47:21.840Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:47:22.294Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "774f1416-a7a6-4b69-b4e7-5014af9ba44d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                                "creation_time": 1523386042258,
                                                "finished": 0,
                                                "job_id": "5acd06bae4b09663c3f59e1d",
                                                "job_state": "queued",
                                                "position": 20,
                                                "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5",
                                                "status": [
                                                    "2018-04-10T18:47:22+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "e091fecd-1c2b-4f27-94ec-7f2a70b634d3",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:47:22.452Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "774f1416-a7a6-4b69-b4e7-5014af9ba44d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                                "creation_time": 1523386042258,
                                                "finished": 0,
                                                "job_id": "5acd06bae4b09663c3f59e1d",
                                                "job_state": "queued",
                                                "position": 20,
                                                "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5",
                                                "status": [
                                                    "2018-04-10T18:47:22+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:47:22.708Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "774f1416-a7a6-4b69-b4e7-5014af9ba44d",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                                "creation_time": 1523386042258,
                                                "exec_start_time": 1523386043978,
                                                "finished": 0,
                                                "job_id": "5acd06bae4b09663c3f59e1d",
                                                "job_state": "in-progress",
                                                "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5",
                                                "status": [
                                                    "2018-04-10T18:47:23+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:47:32.816Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "774f1416-a7a6-4b69-b4e7-5014af9ba44d",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                                                "creation_time": 1523386042258,
                                                "exec_start_time": 1523386043978,
                                                "finish_time": 1523386268217,
                                                "finished": 1,
                                                "job_id": "5acd06bae4b09663c3f59e1d",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_megahit_report_bc1778ac-c640-46d7-a547-7ad79ee137d5",
                                                        "report_ref": "30530/112/1"
                                                    }
                                                ],
                                                "run_id": "7ebd52da-0e4a-447b-aeea-7f44cc6e02f5",
                                                "status": [
                                                    "2018-04-10T18:51:08+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:51:18.722Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_megahit_report_bc1778ac-c640-46d7-a547-7ad79ee137d5",
                                        "report_ref": "30530/112/1",
                                        "report_window_line_height": "16",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac167e4b09663c3f59bf2": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "k_list": [],
                                            "k_max": null,
                                            "k_min": null,
                                            "k_step": null,
                                            "megahit_parameter_preset": "",
                                            "min_contig_length": 2000,
                                            "min_count": null,
                                            "output_contigset_name": "GW456A_MEGAHIT.contigs",
                                            "read_library_ref": "GW456A_reads"
                                        }
                                    },
                                    "5acd06bae4b09663c3f59e1d": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:51:20 GMT",
                                        "params": {
                                            "k_list": [],
                                            "k_max": null,
                                            "k_min": null,
                                            "k_step": null,
                                            "megahit_parameter_preset": "",
                                            "min_contig_length": 2000,
                                            "min_count": null,
                                            "output_contigset_name": "GW456A_MEGAHIT.contigs",
                                            "read_library_ref": "GW456A_reads"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "k_list": [],
                                "k_max": null,
                                "k_min": null,
                                "k_step": null,
                                "megahit_parameter_preset": "",
                                "min_contig_length": 2000,
                                "min_count": null,
                                "output_contigset_name": "GW456A_MEGAHIT.contigs",
                                "read_library_ref": "GW456A_reads"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:24:15 GMT",
                            "id": "1bb28c8d-914b-4dce-9559-9bf4d4ce291c",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/MEGAHIT/run_megahit/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                            "title": "Assemble Reads with MEGAHIT v1.1.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"MEGAHIT/run_megahit\",\n    {\n        \"read_library_ref\": \"GW456A_reads\",\n        \"output_contigset_name\": \"GW456A_MEGAHIT.contigs\",\n        \"megahit_parameter_preset\": \"\",\n        \"min_count\": None,\n        \"k_min\": None,\n        \"k_max\": None,\n        \"k_step\": None,\n        \"k_list\": [],\n        \"min_contig_length\": 2000\n    },\n    tag=\"release\",\n    version=\"2.2.8\",\n    cell_id=\"1bb28c8d-914b-4dce-9559-9bf4d4ce291c\",\n    run_id=\"7ebd52da-0e4a-447b-aeea-7f44cc6e02f5\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 6,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "647a2c3367aba00ddbaaf51d064c949d097a260d",
                                "id": "kb_SPAdes/run_SPAdes",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "dna_source",
                                                "target_property": "dna_source"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_SPAdes",
                                        "kb_service_name": "kb_SPAdes",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "SPAdes_result"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "dna_source",
                                                "target_property": "input_dna_source"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "647a2c3367aba00ddbaaf51d064c949d097a260d"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "gaprice"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "647a2c3367aba00ddbaaf51d064c949d097a260d",
                                        "icon": {
                                            "url": "img?method_id=kb_SPAdes/run_SPAdes&image_name=spades.png&tag=release"
                                        },
                                        "id": "kb_SPAdes/run_SPAdes",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary"
                                        ],
                                        "module_name": "kb_SPAdes",
                                        "name": "Assemble with SPAdes - v3.11.1",
                                        "namespace": "kb_SPAdes",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble reads using the SPAdes assembler.",
                                        "tooltip": "Assemble reads using the SPAdes assembler.",
                                        "ver": "1.1.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "The libraries of reads to be assembled",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "standard"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "standard",
                                                        "index": 0,
                                                        "value": "standard"
                                                    },
                                                    {
                                                        "display": "single cell",
                                                        "index": 1,
                                                        "value": "single_cell"
                                                    },
                                                    {
                                                        "display": "plasmid",
                                                        "index": 2,
                                                        "value": "plasmid"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "dna_source",
                                            "optional": 0,
                                            "short_hint": "The source of the sequenced DNA - either standard, single cell / \nMDA, or plasmid.",
                                            "ui_class": "parameter",
                                            "ui_name": "DNA source"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "SPAdes.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting ContigSet will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "500"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 200,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.1.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "47bd97ee-7983-407f-89ad-fd67c27b7a5b",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "e675a521-6542-46de-8172-b275a6238765",
                                    "creation_time": 1523386050041,
                                    "exec_start_time": 1523386051355,
                                    "finish_time": 1523386621581,
                                    "finished": 1,
                                    "job_id": "5acd06c1e4b09663c3f59e1e",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_megahit_report_61dc23f8-2091-4628-8cd7-980e8b9f94b0",
                                            "report_ref": "30530/114/1"
                                        }
                                    ],
                                    "run_id": "43fa1b46-b1b0-4d4d-aba6-abfabc1b8188",
                                    "status": [
                                        "2018-04-10T18:57:01+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523386623822,
                                "launchState": {
                                    "cell_id": "e675a521-6542-46de-8172-b275a6238765",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:47:30.050569Z",
                                    "job_id": "5acd06c1e4b09663c3f59e1e",
                                    "run_id": "43fa1b46-b1b0-4d4d-aba6-abfabc1b8188"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:47:29.596Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:47:30.632Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47bd97ee-7983-407f-89ad-fd67c27b7a5b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "e675a521-6542-46de-8172-b275a6238765",
                                                "creation_time": 1523386050041,
                                                "finished": 0,
                                                "job_id": "5acd06c1e4b09663c3f59e1e",
                                                "job_state": "queued",
                                                "position": 9,
                                                "run_id": "43fa1b46-b1b0-4d4d-aba6-abfabc1b8188",
                                                "status": [
                                                    "2018-04-10T18:47:29+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "57656789-8f42-47bc-b403-aaaf0e9c4b3c",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:47:30.676Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47bd97ee-7983-407f-89ad-fd67c27b7a5b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "e675a521-6542-46de-8172-b275a6238765",
                                                "creation_time": 1523386050041,
                                                "exec_start_time": 1523386051355,
                                                "finished": 0,
                                                "job_id": "5acd06c1e4b09663c3f59e1e",
                                                "job_state": "in-progress",
                                                "run_id": "43fa1b46-b1b0-4d4d-aba6-abfabc1b8188",
                                                "status": [
                                                    "2018-04-10T18:47:31+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:47:32.814Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "47bd97ee-7983-407f-89ad-fd67c27b7a5b",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "e675a521-6542-46de-8172-b275a6238765",
                                                "creation_time": 1523386050041,
                                                "exec_start_time": 1523386051355,
                                                "finish_time": 1523386621581,
                                                "finished": 1,
                                                "job_id": "5acd06c1e4b09663c3f59e1e",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_megahit_report_61dc23f8-2091-4628-8cd7-980e8b9f94b0",
                                                        "report_ref": "30530/114/1"
                                                    }
                                                ],
                                                "run_id": "43fa1b46-b1b0-4d4d-aba6-abfabc1b8188",
                                                "status": [
                                                    "2018-04-10T18:57:01+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:57:03.822Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "SPAdes_result": {
                                            "report_name": "kb_megahit_report_61dc23f8-2091-4628-8cd7-980e8b9f94b0",
                                            "report_ref": "30530/114/1"
                                        },
                                        "input_dna_source": "standard",
                                        "input_output_contigset_name": "GW456A_SPAdes.contigs",
                                        "input_read_libraries": [
                                            "30530/2/1"
                                        ],
                                        "report_name": "kb_megahit_report_61dc23f8-2091-4628-8cd7-980e8b9f94b0",
                                        "report_ref": "30530/114/1",
                                        "report_window_line_height": "5",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac176e4b09663c3f59bf3": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "dna_source": "standard",
                                            "min_contig_length": 500,
                                            "output_contigset_name": "GW456A_SPAdes.contigs",
                                            "read_libraries": [
                                                "30462/2/1"
                                            ]
                                        }
                                    },
                                    "5acd06c1e4b09663c3f59e1e": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:57:06 GMT",
                                        "params": {
                                            "dna_source": "standard",
                                            "min_contig_length": 500,
                                            "output_contigset_name": "GW456A_SPAdes.contigs",
                                            "read_libraries": [
                                                "30530/2/1"
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "dna_source": "standard",
                                "min_contig_length": 500,
                                "output_contigset_name": "GW456A_SPAdes.contigs",
                                "read_libraries": [
                                    "30530/2/1"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:24:27 GMT",
                            "id": "e675a521-6542-46de-8172-b275a6238765",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_SPAdes/run_SPAdes/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Assemble reads using the SPAdes assembler.",
                            "title": "Assemble with SPAdes - v3.11.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_SPAdes/run_SPAdes\",\n    {\n        \"output_contigset_name\": \"GW456A_SPAdes.contigs\",\n        \"dna_source\": \"standard\",\n        \"read_libraries\": [\"30530/2/1\"],\n        \"min_contig_length\": 500\n    },\n    tag=\"release\",\n    version=\"1.1.1\",\n    cell_id=\"e675a521-6542-46de-8172-b275a6238765\",\n    run_id=\"43fa1b46-b1b0-4d4d-aba6-abfabc1b8188\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3",
                                "id": "Velvet/run_velvet",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "hash_length",
                                                "target_property": "hash_length"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "cov_cutoff",
                                                "target_property": "cov_cutoff"
                                            },
                                            {
                                                "input_parameter": "ins_length",
                                                "target_property": "ins_length"
                                            },
                                            {
                                                "input_parameter": "read_trkg",
                                                "target_property": "read_trkg"
                                            },
                                            {
                                                "input_parameter": "amos_file",
                                                "target_property": "amos_file"
                                            },
                                            {
                                                "input_parameter": "exp_cov",
                                                "target_property": "exp_cov"
                                            },
                                            {
                                                "input_parameter": "long_cov_cutoff",
                                                "target_property": "long_cov_cutoff"
                                            }
                                        ],
                                        "kb_service_method": "run_velvet",
                                        "kb_service_name": "Velvet",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "Velvet_result"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "qzhang"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3",
                                        "icon": {
                                            "url": "img?method_id=Velvet/run_velvet&image_name=velvet-blue.png&tag=release"
                                        },
                                        "id": "Velvet/run_velvet",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary"
                                        ],
                                        "module_name": "Velvet",
                                        "name": "Velvet Assembler - v1.2.10",
                                        "namespace": "Velvet",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Velvet consists of two main parts - Velveth and Velvetg",
                                        "tooltip": "Velvet consists of two main parts - Velveth and Velvetg",
                                        "ver": "1.0.0"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "21"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "hash_length",
                                            "optional": 0,
                                            "short_hint": "An integer for length of hash",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 127,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "hash_length"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "Read libraries (only KBase PairedEnd Libs are input through this parameter)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseAssembly.SingleEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Libraries"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Velvet.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name for the resulting ContigSet will be saved in KBase",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "500"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 1,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimal contig length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "auto"
                                            ],
                                            "description": "removal of low coverage nodes AFTER tour bus, it can also be set automatically to half the length weighted median contig coverage depth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "cov_cutoff",
                                            "optional": 1,
                                            "short_hint": "removal of low coverage nodes AFTER tour bus or allow the system to infer it when set it to 'auto'",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "cov_cutoff"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "ins_length",
                                            "optional": 1,
                                            "short_hint": "expected distance between two paired end reads (default: no read pairing)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "ins_length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_trkg",
                                            "optional": 1,
                                            "short_hint": "tracking of short read positions in assembly (default: no tracking)",
                                            "ui_class": "parameter",
                                            "ui_name": "track short read positions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "amos_file",
                                            "optional": 1,
                                            "short_hint": "export assembly to AMOS file (default: no export)",
                                            "ui_class": "parameter",
                                            "ui_name": "export AMOS file"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "auto"
                                            ],
                                            "description": "<p>A value of 'auto' will set exp cov to the length weighted median contig coverage, and cov cutoff to half that value (unless you override it with a manual setting), it can also be set automatically to half the length weighted median contig coverage depth.</p>",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "exp_cov",
                                            "optional": 1,
                                            "short_hint": "expected short-read k-mer coverage of unique regions or allow the system to infer it when set it to 'auto'",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "expected coverage"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "long_cov_cutoff",
                                            "optional": 1,
                                            "short_hint": "removal of nodes with low long-read coverage AFTER tour bus (default: no removal)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "long_cov_cutoff"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.0"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac18be4b09663c3f59bf4": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "amos_file": 0,
                                            "cov_cutoff": "auto",
                                            "exp_cov": "auto",
                                            "hash_length": 21,
                                            "ins_length": null,
                                            "long_cov_cutoff": null,
                                            "min_contig_length": 500,
                                            "output_contigset_name": "GW456A_Velvet.contigs",
                                            "read_libraries": [
                                                "30462/2/1"
                                            ],
                                            "read_trkg": 0
                                        }
                                    }
                                }
                            },
                            "params": {
                                "amos_file": 0,
                                "cov_cutoff": "auto",
                                "exp_cov": "auto",
                                "hash_length": 21,
                                "ins_length": null,
                                "long_cov_cutoff": null,
                                "min_contig_length": 500,
                                "output_contigset_name": "GW456A_Velvet.contigs",
                                "read_libraries": [
                                    "30530/2/1"
                                ],
                                "read_trkg": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:24:35 GMT",
                            "id": "4611365b-f370-4cc2-a53e-e4ad0304106f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/Velvet/run_velvet/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Velvet consists of two main parts - Velveth and Velvetg",
                            "title": "Velvet Assembler - v1.2.10"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"Velvet/run_velvet\",\n    {\n        \"output_contigset_name\": \"GW456A_Velvet.contigs\",\n        \"long_cov_cutoff\": None,\n        \"exp_cov\": \"auto\",\n        \"amos_file\": 0,\n        \"ins_length\": None,\n        \"hash_length\": 21,\n        \"read_libraries\": [\"30530/2/1\"],\n        \"read_trkg\": 0,\n        \"cov_cutoff\": \"auto\",\n        \"min_contig_length\": 500\n    },\n    tag=\"release\",\n    version=\"1.0.0\",\n    cell_id=\"4611365b-f370-4cc2-a53e-e4ad0304106f\",\n    run_id=\"095ed585-d251-4eee-9e5a-7d28af121856\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Assembly of trimmed reads"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Assembly of trimmed reads\n\nWe'll try assembling the trimmed reads to see if that works better."
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                "id": "MEGAHIT/run_megahit",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_library_ref",
                                                "target_property": "read_library_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "megahit_parameter_preset",
                                                "target_property": "megahit_parameter_preset"
                                            },
                                            {
                                                "input_parameter": "min_count",
                                                "target_property": "min_count"
                                            },
                                            {
                                                "input_parameter": "k_min",
                                                "target_property": "k_min"
                                            },
                                            {
                                                "input_parameter": "k_max",
                                                "target_property": "k_max"
                                            },
                                            {
                                                "input_parameter": "k_step",
                                                "target_property": "k_step"
                                            },
                                            {
                                                "input_parameter": "k_list",
                                                "target_property": "k_list"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_megahit",
                                        "kb_service_name": "MEGAHIT",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "833c6d8cceedbb67c4001133e347f71cab488572"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "msneddon",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "833c6d8cceedbb67c4001133e347f71cab488572",
                                        "icon": {
                                            "url": "img?method_id=MEGAHIT/run_megahit&image_name=megahit-blue.png&tag=release"
                                        },
                                        "id": "MEGAHIT/run_megahit",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseFile.PairedEndLibrary"
                                        ],
                                        "module_name": "MEGAHIT",
                                        "name": "Assemble Reads with MEGAHIT v1.1.1",
                                        "namespace": "MEGAHIT",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "tooltip": "Assemble metagenomic reads using the MEGAHIT assembler.",
                                        "ver": "2.2.8"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_library_ref",
                                            "optional": 0,
                                            "short_hint": "Read library (only PairedEnd Libs supported now)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "MEGAHIT.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "Enter a name for the assembled contigs data object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Assembly name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "This option overrides a group of parameters.\nmeta-sensitive  '--min-count 1 --k-list 21,29,39,49,...,129,141'\nmeta-large      '--k-min 27 --k-max 127 --k-step 10'",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "meta-sensitive - More sensitive assembly, but slower",
                                                        "index": 0,
                                                        "value": "meta-sensitive"
                                                    },
                                                    {
                                                        "display": "meta-large - Large and complex assembly, e.g. soil",
                                                        "index": 1,
                                                        "value": "meta-large"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "megahit_parameter_preset",
                                            "optional": 1,
                                            "short_hint": "Select a MEGAHIT parameter preset",
                                            "ui_class": "parameter",
                                            "ui_name": "Parameter preset"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_count",
                                            "optional": 1,
                                            "short_hint": "minimum multiplicity for filtering (k_min+1)-mers, default 2",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-count"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_min",
                                            "optional": 1,
                                            "short_hint": "minimum kmer size (<= 127), must be odd number, default 21",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 127,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-min"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_max",
                                            "optional": 1,
                                            "short_hint": "maximum kmer size (<= 255), must be odd number, default 141",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-max"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_step",
                                            "optional": 1,
                                            "short_hint": "increment of kmer size of each iteration (<= 28), must be even number, default 12",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 28,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-step"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "k_list",
                                            "optional": 1,
                                            "short_hint": "list of kmer size (all must be odd, in the range 15-255, increment <= 28)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 255,
                                                "min_int": 15,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--k-list"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2000"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "minimum length of contigs to output",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 300,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "--min-contig-len"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "2.2.8"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac1efe4b09663c3f59bf5": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "k_list": [],
                                            "k_max": null,
                                            "k_min": null,
                                            "k_step": null,
                                            "megahit_parameter_preset": "",
                                            "min_contig_length": 2000,
                                            "min_count": null,
                                            "output_contigset_name": "GW456_trim_MEGAHIT.contigs",
                                            "read_library_ref": "GW456A_trim_reads_paired"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "k_list": [],
                                "k_max": null,
                                "k_min": null,
                                "k_step": null,
                                "megahit_parameter_preset": "",
                                "min_contig_length": 2000,
                                "min_count": null,
                                "output_contigset_name": "GW456_trim_MEGAHIT.contigs",
                                "read_library_ref": "GW456A_trim_reads_paired"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:25:52 GMT",
                            "id": "74126605-fa88-49ed-ba46-f55c1c9b483e",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/MEGAHIT/run_megahit/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Assemble metagenomic reads using the MEGAHIT assembler.",
                            "title": "Assemble Reads with MEGAHIT v1.1.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"MEGAHIT/run_megahit\",\n    {\n        \"output_contigset_name\": \"GW456_trim_MEGAHIT.contigs\",\n        \"k_list\": [],\n        \"megahit_parameter_preset\": \"\",\n        \"k_step\": None,\n        \"k_min\": None,\n        \"k_max\": None,\n        \"min_count\": None,\n        \"read_library_ref\": \"GW456A_trim_reads_paired\",\n        \"min_contig_length\": 2000\n    },\n    tag=\"release\",\n    version=\"2.2.8\",\n    cell_id=\"74126605-fa88-49ed-ba46-f55c1c9b483e\",\n    run_id=\"128469c6-c8b3-4310-9ab2-e1ee4cc40874\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 9,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "647a2c3367aba00ddbaaf51d064c949d097a260d",
                                "id": "kb_SPAdes/run_SPAdes",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "dna_source",
                                                "target_property": "dna_source"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            }
                                        ],
                                        "kb_service_method": "run_SPAdes",
                                        "kb_service_name": "kb_SPAdes",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "SPAdes_result"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "dna_source",
                                                "target_property": "input_dna_source"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "647a2c3367aba00ddbaaf51d064c949d097a260d"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "gaprice"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "647a2c3367aba00ddbaaf51d064c949d097a260d",
                                        "icon": {
                                            "url": "img?method_id=kb_SPAdes/run_SPAdes&image_name=spades.png&tag=release"
                                        },
                                        "id": "kb_SPAdes/run_SPAdes",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary"
                                        ],
                                        "module_name": "kb_SPAdes",
                                        "name": "Assemble with SPAdes - v3.11.1",
                                        "namespace": "kb_SPAdes",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble reads using the SPAdes assembler.",
                                        "tooltip": "Assemble reads using the SPAdes assembler.",
                                        "ver": "1.1.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "The libraries of reads to be assembled",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "standard"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "standard",
                                                        "index": 0,
                                                        "value": "standard"
                                                    },
                                                    {
                                                        "display": "single cell",
                                                        "index": 1,
                                                        "value": "single_cell"
                                                    },
                                                    {
                                                        "display": "plasmid",
                                                        "index": 2,
                                                        "value": "plasmid"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "dna_source",
                                            "optional": 0,
                                            "short_hint": "The source of the sequenced DNA - either standard, single cell / \nMDA, or plasmid.",
                                            "ui_class": "parameter",
                                            "ui_name": "DNA source"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "SPAdes.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting ContigSet will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "500"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 200,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.1.1"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac201e4b09663c3f59bf6": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "dna_source": "standard",
                                            "min_contig_length": 500,
                                            "output_contigset_name": "GW456_trim_SPAdes.contigs",
                                            "read_libraries": [
                                                "30462/4/1"
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "dna_source": "standard",
                                "min_contig_length": 500,
                                "output_contigset_name": "GW456_trim_SPAdes.contigs",
                                "read_libraries": [
                                    "30462/4/1"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:25:25 GMT",
                            "id": "ae78531b-e0d5-43ae-917e-43d86823b4c4",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_SPAdes/run_SPAdes/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Assemble reads using the SPAdes assembler.",
                            "title": "Assemble with SPAdes - v3.11.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_SPAdes/run_SPAdes\",\n    {\n        \"output_contigset_name\": \"GW456_trim_SPAdes.contigs\",\n        \"dna_source\": \"standard\",\n        \"read_libraries\": [\"30462/4/1\"],\n        \"min_contig_length\": 500\n    },\n    tag=\"release\",\n    version=\"1.1.1\",\n    cell_id=\"ae78531b-e0d5-43ae-917e-43d86823b4c4\",\n    run_id=\"9846cd25-24ec-40b1-b839-7df8ef1ce082\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 10,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3",
                                "id": "Velvet/run_velvet",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "hash_length",
                                                "target_property": "hash_length"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "cov_cutoff",
                                                "target_property": "cov_cutoff"
                                            },
                                            {
                                                "input_parameter": "ins_length",
                                                "target_property": "ins_length"
                                            },
                                            {
                                                "input_parameter": "read_trkg",
                                                "target_property": "read_trkg"
                                            },
                                            {
                                                "input_parameter": "amos_file",
                                                "target_property": "amos_file"
                                            },
                                            {
                                                "input_parameter": "exp_cov",
                                                "target_property": "exp_cov"
                                            },
                                            {
                                                "input_parameter": "long_cov_cutoff",
                                                "target_property": "long_cov_cutoff"
                                            }
                                        ],
                                        "kb_service_method": "run_velvet",
                                        "kb_service_name": "Velvet",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "Velvet_result"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "qzhang"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "9b74f5ec3e4978d0ad5f28800429dbe28649e6c3",
                                        "icon": {
                                            "url": "img?method_id=Velvet/run_velvet&image_name=velvet-blue.png&tag=release"
                                        },
                                        "id": "Velvet/run_velvet",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary"
                                        ],
                                        "module_name": "Velvet",
                                        "name": "Velvet Assembler - v1.2.10",
                                        "namespace": "Velvet",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Velvet consists of two main parts - Velveth and Velvetg",
                                        "tooltip": "Velvet consists of two main parts - Velveth and Velvetg",
                                        "ver": "1.0.0"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "21"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "hash_length",
                                            "optional": 0,
                                            "short_hint": "An integer for length of hash",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 127,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "hash_length"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "Read libraries (only KBase PairedEnd Libs are input through this parameter)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseAssembly.SingleEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseFile.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read Libraries"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Velvet.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name for the resulting ContigSet will be saved in KBase",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "500"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 1,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimal contig length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "auto"
                                            ],
                                            "description": "removal of low coverage nodes AFTER tour bus, it can also be set automatically to half the length weighted median contig coverage depth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "cov_cutoff",
                                            "optional": 1,
                                            "short_hint": "removal of low coverage nodes AFTER tour bus or allow the system to infer it when set it to 'auto'",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "cov_cutoff"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "ins_length",
                                            "optional": 1,
                                            "short_hint": "expected distance between two paired end reads (default: no read pairing)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "ins_length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_trkg",
                                            "optional": 1,
                                            "short_hint": "tracking of short read positions in assembly (default: no tracking)",
                                            "ui_class": "parameter",
                                            "ui_name": "track short read positions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "amos_file",
                                            "optional": 1,
                                            "short_hint": "export assembly to AMOS file (default: no export)",
                                            "ui_class": "parameter",
                                            "ui_name": "export AMOS file"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "auto"
                                            ],
                                            "description": "<p>A value of 'auto' will set exp cov to the length weighted median contig coverage, and cov cutoff to half that value (unless you override it with a manual setting), it can also be set automatically to half the length weighted median contig coverage depth.</p>",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "exp_cov",
                                            "optional": 1,
                                            "short_hint": "expected short-read k-mer coverage of unique regions or allow the system to infer it when set it to 'auto'",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "expected coverage"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "long_cov_cutoff",
                                            "optional": 1,
                                            "short_hint": "removal of nodes with low long-read coverage AFTER tour bus (default: no removal)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "long_cov_cutoff"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.0"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "b1332b39-6f73-45b9-88a2-41710d1983c3",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                                    "creation_time": 1523237389652,
                                    "exec_start_time": 1523237393931,
                                    "finish_time": 1523237582004,
                                    "finished": 1,
                                    "job_id": "5acac20de4b09663c3f59bf7",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_velvet_report_9be6cebd-237d-40d0-b43c-09c2d03fa465",
                                            "report_ref": "30462/16/1"
                                        }
                                    ],
                                    "run_id": "f83f545e-262c-44ed-8b92-e533b0c0f6c4",
                                    "status": [
                                        "2018-04-09T01:33:02+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523237587352,
                                "launchState": {
                                    "cell_id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                                    "event": "launched_job",
                                    "event_at": "2018-04-09T01:29:49.654429Z",
                                    "job_id": "5acac20de4b09663c3f59bf7",
                                    "run_id": "f83f545e-262c-44ed-8b92-e533b0c0f6c4"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-09T01:29:49.214Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-09T01:29:49.790Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b1332b39-6f73-45b9-88a2-41710d1983c3",
                                                "awe_job_state": "queued",
                                                "cell_id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                                                "creation_time": 1523237389652,
                                                "finished": 0,
                                                "job_id": "5acac20de4b09663c3f59bf7",
                                                "job_state": "queued",
                                                "position": 19,
                                                "run_id": "f83f545e-262c-44ed-8b92-e533b0c0f6c4",
                                                "status": [
                                                    "2018-04-09T01:29:49+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "06c9c3c0-10c0-4a7a-88bf-b4f72c01101f",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T01:29:49.878Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b1332b39-6f73-45b9-88a2-41710d1983c3",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                                                "creation_time": 1523237389652,
                                                "exec_start_time": 1523237393931,
                                                "finished": 0,
                                                "job_id": "5acac20de4b09663c3f59bf7",
                                                "job_state": "in-progress",
                                                "run_id": "f83f545e-262c-44ed-8b92-e533b0c0f6c4",
                                                "status": [
                                                    "2018-04-09T01:29:53+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T01:30:00.812Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b1332b39-6f73-45b9-88a2-41710d1983c3",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                                                "creation_time": 1523237389652,
                                                "exec_start_time": 1523237393931,
                                                "finish_time": 1523237582004,
                                                "finished": 1,
                                                "job_id": "5acac20de4b09663c3f59bf7",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_velvet_report_9be6cebd-237d-40d0-b43c-09c2d03fa465",
                                                        "report_ref": "30462/16/1"
                                                    }
                                                ],
                                                "run_id": "f83f545e-262c-44ed-8b92-e533b0c0f6c4",
                                                "status": [
                                                    "2018-04-09T01:33:02+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T01:33:07.352Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "Velvet_result": {
                                            "report_name": "kb_velvet_report_9be6cebd-237d-40d0-b43c-09c2d03fa465",
                                            "report_ref": "30462/16/1"
                                        },
                                        "input_output_contigset_name": "GW456_trim_Velvet.contigs",
                                        "input_read_libraries": [
                                            "30462/4/1"
                                        ],
                                        "min_contig_length": 500,
                                        "report_name": "kb_velvet_report_9be6cebd-237d-40d0-b43c-09c2d03fa465",
                                        "report_ref": "30462/16/1",
                                        "report_window_line_height": "16",
                                        "workspace_name": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac20de4b09663c3f59bf7": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:11:38 GMT",
                                        "params": {
                                            "amos_file": 0,
                                            "cov_cutoff": "auto",
                                            "exp_cov": "auto",
                                            "hash_length": 21,
                                            "ins_length": null,
                                            "long_cov_cutoff": null,
                                            "min_contig_length": 500,
                                            "output_contigset_name": "GW456_trim_Velvet.contigs",
                                            "read_libraries": [
                                                "30462/4/1"
                                            ],
                                            "read_trkg": 0
                                        }
                                    }
                                }
                            },
                            "params": {
                                "amos_file": 0,
                                "cov_cutoff": "auto",
                                "exp_cov": "auto",
                                "hash_length": 21,
                                "ins_length": null,
                                "long_cov_cutoff": null,
                                "min_contig_length": 500,
                                "output_contigset_name": "GW456_trim_Velvet.contigs",
                                "read_libraries": [
                                    "30462/4/1"
                                ],
                                "read_trkg": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:25:13 GMT",
                            "id": "d5e859c1-efb0-4b95-b5e5-9ba9197f4a21",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/Velvet/run_velvet/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Velvet consists of two main parts - Velveth and Velvetg",
                            "title": "Velvet Assembler - v1.2.10"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"Velvet/run_velvet\",\n    {\n        \"output_contigset_name\": \"GW456_trim_Velvet.contigs\",\n        \"long_cov_cutoff\": None,\n        \"exp_cov\": \"auto\",\n        \"amos_file\": 0,\n        \"ins_length\": None,\n        \"hash_length\": 21,\n        \"read_libraries\": [\"30462/4/1\"],\n        \"read_trkg\": 0,\n        \"cov_cutoff\": \"auto\",\n        \"min_contig_length\": 500\n    },\n    tag=\"release\",\n    version=\"1.0.0\",\n    cell_id=\"d5e859c1-efb0-4b95-b5e5-9ba9197f4a21\",\n    run_id=\"f83f545e-262c-44ed-8b92-e533b0c0f6c4\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Quality assement of assemblies and comparison of m..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Quality assement of assemblies and comparison of multiple assemblies -- results\n\nI performed 6 assemblies per isolate: (Trimmed, Untrimmed) x (MEGAHIT, Velvet, SPAdes). For all isolates, MEGAHIT found the most genes, but SPAdes had the largest contigs. Velvet had smaller contigs and inserted a lot of \"N\"s. \n\nFor the SPAdes assemblies, the untrimmed reads were very slightly better than the trimmed reads. \n\nI will use the SPAdes untrimmed assemblies for all isolates.\n"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cdb54192310bd25fd775e51ad7a6d1835ac96a32",
                                "id": "kb_quast/run_QUAST_app",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "assemblies",
                                                "target_property": "assemblies",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "force_glimmer",
                                                "target_property": "force_glimmer"
                                            }
                                        ],
                                        "kb_service_method": "run_QUAST_app",
                                        "kb_service_name": "kb_quast",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "QUAST_result"
                                            },
                                            {
                                                "input_parameter": "assemblies",
                                                "target_property": "input_assemblies"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cdb54192310bd25fd775e51ad7a6d1835ac96a32"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "gaprice"
                                        ],
                                        "categories": [
                                            "assembly"
                                        ],
                                        "git_commit_hash": "cdb54192310bd25fd775e51ad7a6d1835ac96a32",
                                        "icon": {
                                            "url": "img?method_id=kb_quast/run_QUAST_app&image_name=quast-blue_360.png&tag=release"
                                        },
                                        "id": "kb_quast/run_QUAST_app",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "kb_quast",
                                        "name": "QUAST - Quality Assessment Tool for Genome Assemblies",
                                        "namespace": "kb_quast",
                                        "output_types": [],
                                        "subtitle": "Run QUAST on a set of assemblies to assess quality.",
                                        "tooltip": "Run QUAST on a set of assemblies to assess quality.",
                                        "ver": "0.0.4"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assemblies",
                                            "optional": 0,
                                            "short_hint": "Assembly objects to be analyzed by QUAST.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assemblies"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "force_glimmer",
                                            "optional": 1,
                                            "short_hint": "Force using '--glimmer' option. If this is not selected, app will not use '--glimmer' option for all files if total contig length exceeds 20 million.",
                                            "ui_class": "parameter",
                                            "ui_name": "Force Gene Calls For Large Assemblies"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseNarrativeMethodInput",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.4"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "520c6e09-1fea-4f89-8020-8f0fd1d31cd1",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                                    "creation_time": 1523386338890,
                                    "exec_start_time": 1523386341116,
                                    "finish_time": 1523386490385,
                                    "finished": 1,
                                    "job_id": "5acd07e2e4b09663c3f59e38",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_quast_report_1906a28f-7e56-45cb-9b2c-38d184830b6a",
                                            "report_ref": "30530/113/1"
                                        }
                                    ],
                                    "run_id": "dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6",
                                    "status": [
                                        "2018-04-10T18:54:50+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523386490500,
                                "launchState": {
                                    "cell_id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T18:52:18.899197Z",
                                    "job_id": "5acd07e2e4b09663c3f59e38",
                                    "run_id": "dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T18:52:18.348Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T18:52:18.922Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "520c6e09-1fea-4f89-8020-8f0fd1d31cd1",
                                                "awe_job_state": "queued",
                                                "cell_id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                                                "creation_time": 1523386338890,
                                                "finished": 0,
                                                "job_id": "5acd07e2e4b09663c3f59e38",
                                                "job_state": "queued",
                                                "position": 23,
                                                "run_id": "dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6",
                                                "status": [
                                                    "2018-04-10T18:52:18+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "0f431df8-e957-4b76-a8d5-d99628ad912e",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:52:19.114Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "520c6e09-1fea-4f89-8020-8f0fd1d31cd1",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                                                "creation_time": 1523386338890,
                                                "exec_start_time": 1523386341116,
                                                "finished": 0,
                                                "job_id": "5acd07e2e4b09663c3f59e38",
                                                "job_state": "in-progress",
                                                "run_id": "dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6",
                                                "status": [
                                                    "2018-04-10T18:52:21+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:52:28.162Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "520c6e09-1fea-4f89-8020-8f0fd1d31cd1",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                                                "creation_time": 1523386338890,
                                                "exec_start_time": 1523386341116,
                                                "finish_time": 1523386490385,
                                                "finished": 1,
                                                "job_id": "5acd07e2e4b09663c3f59e38",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_quast_report_1906a28f-7e56-45cb-9b2c-38d184830b6a",
                                                        "report_ref": "30530/113/1"
                                                    }
                                                ],
                                                "run_id": "dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6",
                                                "status": [
                                                    "2018-04-10T18:54:50+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T18:54:50.500Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "QUAST_result": {
                                            "report_name": "kb_quast_report_1906a28f-7e56-45cb-9b2c-38d184830b6a",
                                            "report_ref": "30530/113/1"
                                        },
                                        "input_assemblies": [
                                            "9/1",
                                            "14/1",
                                            "17/1",
                                            "19/1",
                                            "10/2",
                                            "13/1"
                                        ],
                                        "report_name": "kb_quast_report_1906a28f-7e56-45cb-9b2c-38d184830b6a",
                                        "report_ref": "30530/113/1",
                                        "report_window_line_height": "5",
                                        "workspace_name": "jplfaria:narrative_1523380297505"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac418e4b09663c3f59bf9": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "assemblies": [
                                                "30462/10/1",
                                                "30462/13/1",
                                                "30462/17/1",
                                                "30462/19/1",
                                                "30462/9/1",
                                                "30462/14/1"
                                            ],
                                            "force_glimmer": 0
                                        }
                                    },
                                    "5acd07e2e4b09663c3f59e38": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:54:52 GMT",
                                        "params": {
                                            "assemblies": [
                                                "30530/9/1",
                                                "30530/14/1",
                                                "30530/17/1",
                                                "30530/19/1",
                                                "30530/10/2",
                                                "30530/13/1"
                                            ],
                                            "force_glimmer": 0
                                        }
                                    }
                                }
                            },
                            "params": {
                                "assemblies": [
                                    "30530/9/1",
                                    "30530/14/1",
                                    "30530/17/1",
                                    "30530/19/1",
                                    "30530/10/2",
                                    "30530/13/1"
                                ],
                                "force_glimmer": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:30:30 GMT",
                            "id": "17af2f92-41ef-4c63-b93a-117bad794d08",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_quast/run_QUAST_app/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Run QUAST on a set of assemblies to assess quality.",
                            "title": "QUAST - Quality Assessment Tool for Genome Assemblies"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_quast/run_QUAST_app\",\n    {\n        \"force_glimmer\": 0,\n        \"assemblies\": [\"30530/9/1\", \"30530/14/1\", \"30530/17/1\", \"30530/19/1\", \"30530/10/2\", \"30530/13/1\"]\n    },\n    tag=\"release\",\n    version=\"0.0.4\",\n    cell_id=\"17af2f92-41ef-4c63-b93a-117bad794d08\",\n    run_id=\"dfbf4dc6-501b-4a48-aac9-55c0ba11ccb6\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 12,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "39ac58cc7cf47afa017eb8d1318b0757658de2d8",
                                "id": "kb_assembly_compare/run_contig_distribution_compare",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_assembly_refs",
                                                "target_property": "input_assembly_refs",
                                                "target_type_transform": "list<resolved-ref>"
                                            }
                                        ],
                                        "kb_service_method": "run_contig_distribution_compare",
                                        "kb_service_name": "kb_assembly_compare",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "39ac58cc7cf47afa017eb8d1318b0757658de2d8"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "util",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "39ac58cc7cf47afa017eb8d1318b0757658de2d8",
                                        "icon": {
                                            "url": "img?method_id=kb_assembly_compare/run_contig_distribution_compare&image_name=kb-blue.png&tag=release"
                                        },
                                        "id": "kb_assembly_compare/run_contig_distribution_compare",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_assembly_compare",
                                        "name": "Compare Assembled Contig Distributions - v1.1.2",
                                        "namespace": "kb_assembly_compare",
                                        "output_types": [],
                                        "subtitle": "View distributions of contig characteristics for different assemblies",
                                        "tooltip": "View distributions of contig characteristics for different assemblies",
                                        "ver": "1.1.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_assembly_refs",
                                            "optional": 0,
                                            "short_hint": "Assemblies for comparing contig length distributions",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseSets.AssemblySet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly(s) or AssemblySet(s) <font color=red>*</font>"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.1.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acac5c3e4b09663c3f59bfa": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "input_assembly_refs": [
                                                "30462/10/1",
                                                "30462/13/1",
                                                "30462/17/1",
                                                "30462/19/1",
                                                "30462/9/1",
                                                "30462/14/1"
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_assembly_refs": [
                                    "30462/10/1",
                                    "30462/13/1",
                                    "30462/17/1",
                                    "30462/19/1",
                                    "30462/9/1",
                                    "30462/14/1"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:44:56 GMT",
                            "id": "34e5c86b-1c2b-461e-9312-9fb6f95b15bb",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_assembly_compare/run_contig_distribution_compare/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "View distributions of contig characteristics for different assemblies",
                            "title": "Compare Assembled Contig Distributions - v1.1.2"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_assembly_compare/run_contig_distribution_compare\",\n    {\n        \"input_assembly_refs\": [\"30462/10/1\", \"30462/13/1\", \"30462/17/1\", \"30462/19/1\", \"30462/9/1\", \"30462/14/1\"]\n    },\n    tag=\"release\",\n    version=\"1.1.2\",\n    cell_id=\"34e5c86b-1c2b-461e-9312-9fb6f95b15bb\",\n    run_id=\"0c78fa10-80f7-4c40-83fe-deb79cbf6f51\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotate SPAdes contigs using RAST annotation pipe..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Annotate SPAdes contigs using RAST annotation pipeline\n\nThe <a href=\"https://narrative.kbase.us/#catalog/apps/RAST_SDK/annotate_contigset/release\">Annotate Microbial Assembly</a> app uses components from the RAST (Rapid Annotations using Subsystems Technology) toolkit to annotate an assembled bacterial or archaeal genome. The required input - an Assembly or ContigSet object - can be generated using an assembly app (as in this Narrative), uploaded from a GenBank file, or imported directly from NCBI via FTP."
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                "id": "RAST_SDK/annotate_contigset",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_contigset",
                                                "target_property": "input_contigset",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "scientific_name",
                                                "target_property": "scientific_name"
                                            },
                                            {
                                                "input_parameter": "domain",
                                                "target_property": "domain"
                                            },
                                            {
                                                "input_parameter": "genetic_code",
                                                "target_property": "genetic_code"
                                            },
                                            {
                                                "input_parameter": "call_features_rRNA_SEED",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_tRNA_trnascan",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "input_parameter": "call_selenoproteins",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "input_parameter": "call_pyrrolysoproteins",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "input_parameter": "call_features_repeat_region_SEED",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_insertion_sequences",
                                                "target_property": "call_features_insertion_sequences"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_suis_repeat",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_pneumo_repeat",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_crispr",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_glimmer3",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_prodigal",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_kmer_v2",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "input_parameter": "kmer_v1_parameters",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_similarity",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "input_parameter": "resolve_overlapping_features",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "input_parameter": "find_close_neighbors",
                                                "target_property": "find_close_neighbors"
                                            },
                                            {
                                                "input_parameter": "call_features_prophage_phispy",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genome_"
                                                },
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "44dd19a28a24ec2fdd178f5bf9f80303050412af"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry",
                                            "olson"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "44dd19a28a24ec2fdd178f5bf9f80303050412af",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/annotate_contigset&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/annotate_contigset",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Microbial Assembly",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "tooltip": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                                        "ver": "0.0.11"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "An Assembly or ContigSet object to annotate",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_contigset",
                                            "optional": 0,
                                            "short_hint": "An Assembly or ContigSet object to annotate",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The scientific name to assign to the genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "scientific_name",
                                            "optional": 0,
                                            "short_hint": "The scientific name to assign to the genome",
                                            "ui_class": "parameter",
                                            "ui_name": "Scientific Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "B"
                                            ],
                                            "description": "The domain of life of the organism being annotated",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "B (Bacteria)",
                                                        "index": 0,
                                                        "value": "B"
                                                    },
                                                    {
                                                        "display": "A (Archaea)",
                                                        "index": 1,
                                                        "value": "A"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "domain",
                                            "optional": 0,
                                            "short_hint": "The domain of life of the organism being annotated",
                                            "ui_class": "parameter",
                                            "ui_name": "Domain"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "11"
                                            ],
                                            "description": "The genetic code used in translating to protein sequences",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "11 (Archaea, most Bacteria, most Virii, and some Mitochondria)",
                                                        "index": 0,
                                                        "value": "11"
                                                    },
                                                    {
                                                        "display": "4 (Mycoplasmaea, Spiroplasmaea, Ureoplasmaea, and Fungal Mitochondria)",
                                                        "index": 1,
                                                        "value": "4"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "genetic_code",
                                            "optional": 0,
                                            "short_hint": "The genetic code used in translating to protein sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic Code"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 0,
                                            "short_hint": "Name to assign the output genome",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call rRNAs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_rRNA_SEED",
                                            "optional": 0,
                                            "short_hint": "Call rRNAs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call rRNAs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call tRNAs with tRNAscan",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_tRNA_trnascan",
                                            "optional": 0,
                                            "short_hint": "Call tRNAs with tRNAscan",
                                            "ui_class": "parameter",
                                            "ui_name": "Call tRNAs with tRNAscan"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call selenoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_selenoproteins",
                                            "optional": 0,
                                            "short_hint": "Call selenoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call selenoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_pyrrolysoproteins",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call pyrrolysoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call pyrrolysoproteins",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_repeat_region_SEED",
                                            "optional": 0,
                                            "short_hint": "Call pyrrolysoproteins",
                                            "ui_class": "parameter",
                                            "ui_name": "Call large repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call insertion sequences",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_insertion_sequences",
                                            "optional": 0,
                                            "short_hint": "Call insertion sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "Call insertion sequences"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find Streptococcus repeat regions",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_suis_repeat",
                                            "optional": 0,
                                            "short_hint": "Find Streptococcus repeat regions",
                                            "ui_class": "parameter",
                                            "ui_name": "Find Streptococcus repeat regions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call features strep pneumo repeat",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_pneumo_repeat",
                                            "optional": 0,
                                            "short_hint": "Call features strep pneumo repeat",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features strep pneumo repeat"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call CRISPRs",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_crispr",
                                            "optional": 0,
                                            "short_hint": "Call CRISPRs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call CRISPRs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Glimmer3",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_glimmer3",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Glimmer3",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Glimmer3"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Call protein-encoding genes with Prodigal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_prodigal",
                                            "optional": 0,
                                            "short_hint": "Call protein-encoding genes with Prodigal",
                                            "ui_class": "parameter",
                                            "ui_name": "Call protein-encoding genes with Prodigal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate protein-encoding genes with k-mers v2",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_kmer_v2",
                                            "optional": 0,
                                            "short_hint": "Annotate protein-encoding genes with k-mers v2",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate protein-encoding genes with k-mers v2"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins with k-mers",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "kmer_v1_parameters",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins with k-mers",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins with k-mers"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_similarity",
                                            "optional": 0,
                                            "short_hint": "Annotate remaining hypothetical proteins by searching against close relatives",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate remaining hypothetical proteins by searching against close relatives"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Perform basic gene overlap removal",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "resolve_overlapping_features",
                                            "optional": 0,
                                            "short_hint": "Perform basic gene overlap removal",
                                            "ui_class": "parameter",
                                            "ui_name": "Perform basic gene overlap removal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Find close neighbors",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "find_close_neighbors",
                                            "optional": 0,
                                            "short_hint": "Find close neighbors",
                                            "ui_class": "parameter",
                                            "ui_name": "Find close neighbors"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Find prophage elements with phispy",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_prophage_phispy",
                                            "optional": 0,
                                            "short_hint": "Find prophage elements with phispy",
                                            "ui_class": "parameter",
                                            "ui_name": "Find prophage elements with phispy"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.11"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                    "awe_job_state": "in-progress",
                                    "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                    "creation_time": 1523387687642,
                                    "exec_start_time": 1523387689136,
                                    "finished": 0,
                                    "job_id": "5acd0d27e4b09663c3f59e52",
                                    "job_state": "in-progress",
                                    "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                    "status": [
                                        "2018-04-10T19:14:49+0000",
                                        "started",
                                        "running",
                                        null,
                                        null,
                                        0,
                                        0
                                    ],
                                    "token_id": "21f1c6b1-f79c-4588-9888-789d9c7fcfdb",
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523387741334,
                                "launchState": {
                                    "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T19:14:47.650120Z",
                                    "job_id": "5acd0d27e4b09663c3f59e52",
                                    "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T19:14:47.040Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T19:14:47.670Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "queued",
                                                "position": 26,
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:47+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "21f1c6b1-f79c-4588-9888-789d9c7fcfdb",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:14:47.876Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "queued",
                                                "position": 26,
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:47+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:14:48.122Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "exec_start_time": 1523387689136,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "in-progress",
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:49+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:14:58.168Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "exec_start_time": 1523387689136,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "in-progress",
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:49+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "21f1c6b1-f79c-4588-9888-789d9c7fcfdb",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:15:17.956Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "exec_start_time": 1523387689136,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "in-progress",
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:49+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:15:18.392Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "0f8a37cf-6eaf-4015-b6f6-90a39c4edb2b",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                                                "creation_time": 1523387687642,
                                                "exec_start_time": 1523387689136,
                                                "finished": 0,
                                                "job_id": "5acd0d27e4b09663c3f59e52",
                                                "job_state": "in-progress",
                                                "run_id": "05b471da-6279-4a58-ad36-78c6b0ff0255",
                                                "status": [
                                                    "2018-04-10T19:14:49+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "21f1c6b1-f79c-4588-9888-789d9c7fcfdb",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:15:38.874Z"
                                    }
                                ]
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "processing",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "annotate_proteins_kmer_v2": 1,
                                "annotate_proteins_similarity": 1,
                                "call_features_CDS_glimmer3": 1,
                                "call_features_CDS_prodigal": 1,
                                "call_features_crispr": 1,
                                "call_features_insertion_sequences": 0,
                                "call_features_prophage_phispy": 0,
                                "call_features_rRNA_SEED": 1,
                                "call_features_repeat_region_SEED": 1,
                                "call_features_strep_pneumo_repeat": 1,
                                "call_features_strep_suis_repeat": 1,
                                "call_features_tRNA_trnascan": 1,
                                "call_pyrrolysoproteins": 1,
                                "call_selenoproteins": 1,
                                "domain": "B",
                                "find_close_neighbors": 1,
                                "genetic_code": "11",
                                "input_contigset": "GW456_trim_SPAdes.contigs",
                                "kmer_v1_parameters": 1,
                                "output_genome": "GW456A_RAST_genome",
                                "resolve_overlapping_features": 1,
                                "scientific_name": "Janthinobacterium sp. GW456A"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:35:27 GMT",
                            "id": "3695d0f0-9f18-4336-9970-0f252f3213b2",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/annotate_contigset/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Annotate a bacterial or archaeal assembly using components from the RAST (Rapid Annotations using Subsystems Technology) toolkit (RASTtk).",
                            "title": "Annotate Microbial Assembly"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/annotate_contigset\",\n    {\n        \"call_pyrrolysoproteins\": 1,\n        \"call_features_strep_suis_repeat\": 1,\n        \"domain\": \"B\",\n        \"kmer_v1_parameters\": 1,\n        \"call_features_crispr\": 1,\n        \"genetic_code\": \"11\",\n        \"call_features_CDS_prodigal\": 1,\n        \"call_features_rRNA_SEED\": 1,\n        \"call_features_insertion_sequences\": 0,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"call_features_prophage_phispy\": 0,\n        \"call_features_strep_pneumo_repeat\": 1,\n        \"call_selenoproteins\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"scientific_name\": \"Janthinobacterium sp. GW456A\",\n        \"call_features_tRNA_trnascan\": 1,\n        \"find_close_neighbors\": 1,\n        \"input_contigset\": \"GW456_trim_SPAdes.contigs\",\n        \"call_features_CDS_glimmer3\": 1,\n        \"output_genome\": \"GW456A_RAST_genome\",\n        \"call_features_repeat_region_SEED\": 1,\n        \"resolve_overlapping_features\": 1\n    },\n    tag=\"release\",\n    version=\"0.0.11\",\n    cell_id=\"3695d0f0-9f18-4336-9970-0f252f3213b2\",\n    run_id=\"05b471da-6279-4a58-ad36-78c6b0ff0255\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotate SPAdes contigs using Prokka annotation pi..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Annotate SPAdes contigs using Prokka annotation pipeline \n\nThe Prokka annotation app is another way to annotate an assembly (set of contigs) in KBase."
            },
            {
                "cell_type": "code",
                "execution_count": 9,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332",
                                "id": "ProkkaAnnotation/annotate_contigs",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "output_workspace"
                                            },
                                            {
                                                "input_parameter": "assembly_ref",
                                                "target_property": "assembly_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "output_genome_name",
                                                "target_property": "output_genome_name"
                                            },
                                            {
                                                "input_parameter": "scientific_name",
                                                "target_property": "scientific_name"
                                            },
                                            {
                                                "input_parameter": "kingdom",
                                                "target_property": "kingdom"
                                            },
                                            {
                                                "input_parameter": "genus",
                                                "target_property": "genus"
                                            },
                                            {
                                                "input_parameter": "gcode",
                                                "target_property": "gcode"
                                            },
                                            {
                                                "input_parameter": "metagenome",
                                                "target_property": "metagenome"
                                            },
                                            {
                                                "input_parameter": "rawproduct",
                                                "target_property": "rawproduct"
                                            },
                                            {
                                                "input_parameter": "fast",
                                                "target_property": "fast"
                                            },
                                            {
                                                "input_parameter": "mincontiglen",
                                                "target_property": "mincontiglen"
                                            },
                                            {
                                                "input_parameter": "evalue",
                                                "target_property": "evalue"
                                            },
                                            {
                                                "input_parameter": "rfam",
                                                "target_property": "rfam"
                                            },
                                            {
                                                "input_parameter": "norrna",
                                                "target_property": "norrna"
                                            },
                                            {
                                                "input_parameter": "notrna",
                                                "target_property": "notrna"
                                            }
                                        ],
                                        "kb_service_method": "annotate_contigs",
                                        "kb_service_name": "ProkkaAnnotation",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "input_parameter": "output_genome_name",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "30eb4fb9e26c82dcf02d55c58beabf7fb5796332",
                                        "icon": {
                                            "url": "img?method_id=ProkkaAnnotation/annotate_contigs&image_name=prokka.png&tag=release"
                                        },
                                        "id": "ProkkaAnnotation/annotate_contigs",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "module_name": "ProkkaAnnotation",
                                        "name": "Annotate Assembly with Prokka v1.12",
                                        "namespace": "ProkkaAnnotation",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate Assembly with Prokka annotation pipeline.",
                                        "tooltip": "Annotate Assembly with Prokka annotation pipeline.",
                                        "ver": "1.0.5"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_ref",
                                            "optional": 0,
                                            "short_hint": "Assembly object (set of contigs)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "scientific_name",
                                            "optional": 1,
                                            "short_hint": "Optional scientific name of organism (default 'Unknown')",
                                            "ui_class": "parameter",
                                            "ui_name": "Scientific name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting Genome will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output genome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Bacteria"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Bacteria",
                                                        "index": 0,
                                                        "value": "Bacteria"
                                                    },
                                                    {
                                                        "display": "Archaea",
                                                        "index": 1,
                                                        "value": "Archaea"
                                                    },
                                                    {
                                                        "display": "Mitochondria",
                                                        "index": 2,
                                                        "value": "Mitochondria"
                                                    },
                                                    {
                                                        "display": "Viruses",
                                                        "index": 3,
                                                        "value": "Viruses"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "kingdom",
                                            "optional": 0,
                                            "short_hint": "Annotation mode: Archaea | Bacteria | Mitochondria | Viruses (default 'Bacteria').",
                                            "ui_class": "parameter",
                                            "ui_name": "Kingdom"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Do not use genus-specific database",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "Enterococcus",
                                                        "index": 1,
                                                        "value": "Enterococcus"
                                                    },
                                                    {
                                                        "display": "Escherichia",
                                                        "index": 2,
                                                        "value": "Escherichia"
                                                    },
                                                    {
                                                        "display": "Staphylococcus",
                                                        "index": 3,
                                                        "value": "Staphylococcus"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "genus",
                                            "optional": 1,
                                            "short_hint": "Optional genus name: Enterococcus | Escherichia | Staphylococcus (uses genus-specific BLAST database) (default 'do not use genus-specific database')",
                                            "ui_class": "parameter",
                                            "ui_name": "Genus"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gcode",
                                            "optional": 1,
                                            "short_hint": "Genetic code / Translation table (set if --kingdom is set) (default '0')",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic code"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "metagenome",
                                            "optional": 1,
                                            "short_hint": "Improve gene predictions for highly fragmented genomes (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Metagenome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "rawproduct",
                                            "optional": 1,
                                            "short_hint": "Do not clean up /product annotation (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Raw product"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "fast",
                                            "optional": 1,
                                            "short_hint": "Fast mode - skip CDS /product searching (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Fast"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mincontiglen",
                                            "optional": 1,
                                            "short_hint": "Minimum contig size [NCBI needs 200] (default '1')",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min.contig size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "evalue",
                                            "optional": 1,
                                            "short_hint": "Similarity e-value cutoff (default '1e-06').",
                                            "ui_class": "parameter",
                                            "ui_name": "E-value"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "rfam",
                                            "optional": 1,
                                            "short_hint": "Enable searching for ncRNAs with Infernal+Rfam (SLOW!, default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "Rfam"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "norrna",
                                            "optional": 1,
                                            "short_hint": "Don't run rRNA search (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "No rRNA"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "notrna",
                                            "optional": 1,
                                            "short_hint": "Don't run tRNA search (default OFF).",
                                            "ui_class": "parameter",
                                            "ui_name": "No tRNA"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.5"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "f40036db-d5df-486f-a647-0f0c18311b75",
                                    "awe_job_state": "in-progress",
                                    "cell_id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                                    "creation_time": 1523387755100,
                                    "exec_start_time": 1523387756816,
                                    "finished": 0,
                                    "job_id": "5acd0d6be4b09663c3f59e5a",
                                    "job_state": "in-progress",
                                    "run_id": "2d8dab99-f4cd-4ef6-876c-d992f089edff",
                                    "status": [
                                        "2018-04-10T19:15:56+0000",
                                        "started",
                                        "running",
                                        null,
                                        null,
                                        0,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523388163384,
                                "launchState": {
                                    "cell_id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T19:15:55.108964Z",
                                    "job_id": "5acd0d6be4b09663c3f59e5a",
                                    "run_id": "2d8dab99-f4cd-4ef6-876c-d992f089edff"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T19:15:54.754Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T19:15:55.168Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "f40036db-d5df-486f-a647-0f0c18311b75",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                                                "creation_time": 1523387755100,
                                                "finished": 0,
                                                "job_id": "5acd0d6be4b09663c3f59e5a",
                                                "job_state": "queued",
                                                "position": 30,
                                                "run_id": "2d8dab99-f4cd-4ef6-876c-d992f089edff",
                                                "status": [
                                                    "2018-04-10T19:15:55+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "97a7b3b9-54e4-46c7-894e-4a8b966dc1b2",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:15:55.396Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "f40036db-d5df-486f-a647-0f0c18311b75",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                                                "creation_time": 1523387755100,
                                                "finished": 0,
                                                "job_id": "5acd0d6be4b09663c3f59e5a",
                                                "job_state": "queued",
                                                "position": 30,
                                                "run_id": "2d8dab99-f4cd-4ef6-876c-d992f089edff",
                                                "status": [
                                                    "2018-04-10T19:15:55+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:15:55.574Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "f40036db-d5df-486f-a647-0f0c18311b75",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                                                "creation_time": 1523387755100,
                                                "exec_start_time": 1523387756816,
                                                "finished": 0,
                                                "job_id": "5acd0d6be4b09663c3f59e5a",
                                                "job_state": "in-progress",
                                                "run_id": "2d8dab99-f4cd-4ef6-876c-d992f089edff",
                                                "status": [
                                                    "2018-04-10T19:15:56+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:16:07.636Z"
                                    }
                                ]
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "processing",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "assembly_ref": "GW456_trim_SPAdes.contigs",
                                "evalue": "",
                                "fast": 0,
                                "gcode": null,
                                "genus": "",
                                "kingdom": "Bacteria",
                                "metagenome": 0,
                                "mincontiglen": 1,
                                "norrna": 0,
                                "notrna": 0,
                                "output_genome_name": "GW456A_Prokka_genome",
                                "rawproduct": 0,
                                "rfam": 0,
                                "scientific_name": "Janthinobacterium sp. GW456A"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:36:12 GMT",
                            "id": "263d8cc5-4aea-40e8-9465-912f8d9f2a68",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/ProkkaAnnotation/annotate_contigs/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Annotate Assembly with Prokka annotation pipeline.",
                            "title": "Annotate Assembly with Prokka v1.12"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"ProkkaAnnotation/annotate_contigs\",\n    {\n        \"kingdom\": \"Bacteria\",\n        \"mincontiglen\": 1,\n        \"norrna\": 0,\n        \"rawproduct\": 0,\n        \"metagenome\": 0,\n        \"output_genome_name\": \"GW456A_Prokka_genome\",\n        \"scientific_name\": \"Janthinobacterium sp. GW456A\",\n        \"gcode\": None,\n        \"evalue\": \"\",\n        \"fast\": 0,\n        \"notrna\": 0,\n        \"assembly_ref\": \"GW456_trim_SPAdes.contigs\",\n        \"rfam\": 0,\n        \"genus\": \"\"\n    },\n    tag=\"release\",\n    version=\"1.0.5\",\n    cell_id=\"263d8cc5-4aea-40e8-9465-912f8d9f2a68\",\n    run_id=\"2d8dab99-f4cd-4ef6-876c-d992f089edff\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Annotation analysis"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Annotation analysis \n\n#### GW456A\nRAST annotated more features: 5897 vs 5520 by Prokka. However, Prokka annotated more genes with functions: 3431 vs 2816 for RAST.  Inspecting the two annotation sets for the violacein operon, both annotation pipelines annotated VioA, VioB and VioD, but RAST did not functionally annotate VioC and Prokka did not functionally annotate VioE. \n\nBecause Prokka has more functionally annotated genes, I will use the Prokka annotations for GW456A for my downstream comparative genomics analysis.\n\nAs the Prokka genome did not annotate the VioE gene, we used the \"Annotate Domains in a Genome\" App to identify protein domains from widely used domain libraries. This analysis (below) revealed (with a search for VioE) that the genome feature \"COKOADII_05068\" annotated with function \"hypothetical protein\" has TIGRFAM domain TIGR03650 with the description \"violacein_E: violacein biosynthesis enzyme VioE\".\n\n\n### Domain annotation\n"
            },
            {
                "cell_type": "code",
                "execution_count": 17,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4875183ff3284901e2a2c591830237b086e398d6",
                                "id": "DomainAnnotation/annotate_domains_in_a_genome",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "genome_ref",
                                                "target_property": "genome_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "dms_ref",
                                                "target_property": "dms_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "domains_"
                                                },
                                                "input_parameter": "output_result_id",
                                                "target_property": "output_result_id"
                                            }
                                        ],
                                        "kb_service_method": "search_domains",
                                        "kb_service_name": "DomainAnnotation",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "output_result_id"
                                                ],
                                                "target_property": "output_result_id"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspaceID"
                                            },
                                            {
                                                "input_parameter": "output_result_id",
                                                "target_property": "domainAnnotationID"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4875183ff3284901e2a2c591830237b086e398d6"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "jmc",
                                            "psnovichkov",
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "4875183ff3284901e2a2c591830237b086e398d6",
                                        "icon": {
                                            "url": "img?method_id=DomainAnnotation/annotate_domains_in_a_genome&image_name=domains-red.png&tag=release"
                                        },
                                        "id": "DomainAnnotation/annotate_domains_in_a_genome",
                                        "input_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "DomainAnnotation",
                                        "name": "Annotate Domains in a Genome",
                                        "namespace": "DomainAnnotation",
                                        "output_types": [
                                            "KBaseGeneFamilies.DomainAnnotation"
                                        ],
                                        "subtitle": "Annotate a genome with protein domains from widely used domain libraries.",
                                        "tooltip": "Annotate a genome with protein domains from widely used domain libraries.",
                                        "ver": "1.0.3"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Select a Genome from your data store to annotate with domains.  It must already have annotated genes",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genome_ref",
                                            "optional": 0,
                                            "short_hint": "Genome to annotate",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "KBasePublicGeneDomains/All"
                                            ],
                                            "description": "Set of domain models or libraries to use",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "All domain libraries",
                                                        "index": 0,
                                                        "value": "KBasePublicGeneDomains/All-1.0.3"
                                                    },
                                                    {
                                                        "display": "COGs 1.0 (from CDD 3.16) domains only",
                                                        "index": 1,
                                                        "value": "KBasePublicGeneDomains/COGs-1.0-3.16-only"
                                                    },
                                                    {
                                                        "display": "NCBI-curated CDD 3.16 domains only",
                                                        "index": 2,
                                                        "value": "KBasePublicGeneDomains/NCBI-CDD-3.16-only"
                                                    },
                                                    {
                                                        "display": "SMART 6.0 (from CDD 3.16) domains only",
                                                        "index": 3,
                                                        "value": "KBasePublicGeneDomains/SMART-6.0-3.16-only"
                                                    },
                                                    {
                                                        "display": "Pfam 31.0 domains only",
                                                        "index": 4,
                                                        "value": "KBasePublicGeneDomains/Pfam-31.0-only"
                                                    },
                                                    {
                                                        "display": "TIGRFAM 15.0 domains only",
                                                        "index": 5,
                                                        "value": "KBasePublicGeneDomains/TIGRFAMs-15.0-only"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "dms_ref",
                                            "optional": 0,
                                            "short_hint": "Set of domain models or libraries to use",
                                            "ui_class": "parameter",
                                            "ui_name": "Domain Model Set"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "This object with annotated domains will be stored in your data store",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_result_id",
                                            "optional": 0,
                                            "short_hint": "This object with annotated domains will be stored in your data store",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGeneFamilies.DomainAnnotation"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output DomainAnnotation Name"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseDomainAnnotation"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.3"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "dms_ref": "KBasePublicGeneDomains/All-1.0.3",
                                "genome_ref": "GW456A_Prokka_genome",
                                "output_result_id": "GW456A_Prokka_genome_domains"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 01:50:27 GMT",
                            "id": "049a8f4c-bef6-4237-8b15-a5a7d48fbbc2",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/DomainAnnotation/annotate_domains_in_a_genome/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Annotate a genome with protein domains from widely used domain libraries.",
                            "title": "Annotate Domains in a Genome"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"DomainAnnotation/annotate_domains_in_a_genome\",\n    {\n        \"genome_ref\": \"GW456A_Prokka_genome\",\n        \"dms_ref\": \"KBasePublicGeneDomains/All-1.0.3\",\n        \"output_result_id\": \"GW456A_Prokka_genome_domains\"\n    },\n    tag=\"release\",\n    version=\"1.0.3\",\n    cell_id=\"049a8f4c-bef6-4237-8b15-a5a7d48fbbc2\",\n    run_id=\"2c809aff-e7fa-4f27-8997-57d65c2b6463\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Build a species tree based on the genome of intere..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Build a species tree based on the genome of interest, determine close neighbors, build a closely related genome-set\n\nNow that we have an annotated genome we use can use the \"Insert Genome Into Species Tree\" App to determine which genomes in KBase's genome reference database are closest to our genomes of interest.\n\nRelatedness is determined by alignment similarity to a select subset of COG (Clusters of Orthologous Groups) domains. Next, a phylogenetic tree is reconstructed using FastTree (a method to quickly estimate maximum likelihood phylogeny).\n\nThis step enables us to continue our study of violacein production related genes via a pangenome analysis. We will look at the 10 closest neighbors to our genome of interest."
            },
            {
                "cell_type": "code",
                "execution_count": 10,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "param0",
                                                "target_property": "new_genomes",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "param1",
                                                "target_property": "nearest_genome_count",
                                                "target_type_transform": "int"
                                            },
                                            {
                                                "input_parameter": "copy_genomes",
                                                "target_property": "copy_genomes"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "sptree_"
                                                },
                                                "input_parameter": "treeID",
                                                "target_property": "out_tree_id"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genomeset_"
                                                },
                                                "input_parameter": "genomeSetName",
                                                "target_property": "out_genomeset_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "out_workspace"
                                            },
                                            {
                                                "constant_value": 0,
                                                "target_property": "use_ribosomal_s9_only"
                                            }
                                        ],
                                        "kb_service_method": "construct_species_tree",
                                        "kb_service_name": "SpeciesTreeBuilder",
                                        "kb_service_output_mapping": [
                                            {
                                                "input_parameter": "treeID",
                                                "target_property": "treeID"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspaceID"
                                            },
                                            {
                                                "constant_value": "500px",
                                                "target_property": "height"
                                            },
                                            {
                                                "service_method_output_path": [],
                                                "target_property": "jobID"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e",
                                        "icon": {
                                            "url": "img?method_id=SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree&image_name=speciestree-purple.png&tag=release"
                                        },
                                        "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "SpeciesTreeBuilder",
                                        "name": "Insert Genome Into Species Tree",
                                        "namespace": "SpeciesTreeBuilder",
                                        "output_types": [
                                            "KBaseSearch.GenomeSet",
                                            "KBaseTrees.Tree"
                                        ],
                                        "subtitle": "Add one or more genomes to a KBase species tree.",
                                        "tooltip": "Add one or more genomes to a KBase species tree.",
                                        "ver": "0.0.7"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Genome to be inserted into a phylogenetic species tree composed of closely related publicly available genomes",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param0",
                                            "optional": 0,
                                            "short_hint": "Genome to be inserted into a phylogenetic species tree",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "20"
                                            ],
                                            "description": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param1",
                                            "optional": 1,
                                            "short_hint": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 200,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Neighbor public genome count"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them.  If you don't want to do anything else with the species tree, you may not need copies",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "copy_genomes",
                                            "optional": 0,
                                            "short_hint": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them",
                                            "ui_class": "parameter",
                                            "ui_name": "Copy public genomes to your workspace"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The name of the output phylogenetic tree relating genomes available in KBase to your genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "treeID",
                                            "optional": 0,
                                            "short_hint": "Output species tree name",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A collection of Genome objects",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genomeSetName",
                                            "optional": 0,
                                            "short_hint": "A collection of Genome objects",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name the set of genomes generated",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Set"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTree"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.7"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "2ba591f2-2814-42b4-9a11-518d9b6b7349",
                                    "awe_job_state": "in-progress",
                                    "cell_id": "e7a562fc-784a-4255-8142-1432891ecda9",
                                    "creation_time": 1523388158571,
                                    "exec_start_time": 1523388160253,
                                    "finished": 0,
                                    "job_id": "5acd0efee4b09663c3f59e66",
                                    "job_state": "in-progress",
                                    "run_id": "35b9bb6c-cbc2-4653-aef6-ccf41e90fc9c",
                                    "status": [
                                        "2018-04-10T19:22:40+0000",
                                        "started",
                                        "running",
                                        null,
                                        null,
                                        0,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523388163386,
                                "launchState": {
                                    "cell_id": "e7a562fc-784a-4255-8142-1432891ecda9",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T19:22:38.581141Z",
                                    "job_id": "5acd0efee4b09663c3f59e66",
                                    "run_id": "35b9bb6c-cbc2-4653-aef6-ccf41e90fc9c"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T19:22:38.158Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T19:22:38.606Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "2ba591f2-2814-42b4-9a11-518d9b6b7349",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "e7a562fc-784a-4255-8142-1432891ecda9",
                                                "creation_time": 1523388158571,
                                                "finished": 0,
                                                "job_id": "5acd0efee4b09663c3f59e66",
                                                "job_state": "queued",
                                                "position": 32,
                                                "run_id": "35b9bb6c-cbc2-4653-aef6-ccf41e90fc9c",
                                                "status": [
                                                    "2018-04-10T19:22:38+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "14e04970-b147-4fcd-8d41-ceb98b58dda9",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:22:38.780Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "2ba591f2-2814-42b4-9a11-518d9b6b7349",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "e7a562fc-784a-4255-8142-1432891ecda9",
                                                "creation_time": 1523388158571,
                                                "exec_start_time": 1523388160253,
                                                "finished": 0,
                                                "job_id": "5acd0efee4b09663c3f59e66",
                                                "job_state": "in-progress",
                                                "run_id": "35b9bb6c-cbc2-4653-aef6-ccf41e90fc9c",
                                                "status": [
                                                    "2018-04-10T19:22:40+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T19:22:43.386Z"
                                    }
                                ]
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "processing",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "copy_genomes": 1,
                                "genomeSetName": "janthinobacterium_10_closest",
                                "param0": [
                                    "30530/25/1"
                                ],
                                "param1": 10,
                                "treeID": "janthinobacterium_10_closest_tree"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 13:29:40 GMT",
                            "id": "e7a562fc-784a-4255-8142-1432891ecda9",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Add one or more genomes to a KBase species tree.",
                            "title": "Insert Genome Into Species Tree"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree\",\n    {\n        \"genomeSetName\": \"janthinobacterium_10_closest\",\n        \"param0\": [\"30530/25/1\"],\n        \"copy_genomes\": 1,\n        \"param1\": 10,\n        \"treeID\": \"janthinobacterium_10_closest_tree\"\n    },\n    tag=\"release\",\n    version=\"0.0.7\",\n    cell_id=\"e7a562fc-784a-4255-8142-1432891ecda9\",\n    run_id=\"35b9bb6c-cbc2-4653-aef6-ccf41e90fc9c\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "133b7b7c4179b5fb1b51bade70069a545bca91fc",
                                "id": "kb_phylogenomics/view_tree",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_tree_ref",
                                                "target_property": "input_tree_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "desc",
                                                "target_property": "desc"
                                            }
                                        ],
                                        "kb_service_method": "view_tree",
                                        "kb_service_name": "kb_phylogenomics",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "133b7b7c4179b5fb1b51bade70069a545bca91fc"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "133b7b7c4179b5fb1b51bade70069a545bca91fc",
                                        "icon": {
                                            "url": "img?method_id=kb_phylogenomics/view_tree&image_name=tree-purple.png&tag=beta"
                                        },
                                        "id": "kb_phylogenomics/view_tree",
                                        "input_types": [
                                            "KBaseTrees.Tree"
                                        ],
                                        "module_name": "kb_phylogenomics",
                                        "name": "View Tree - v1.1.2",
                                        "namespace": "kb_phylogenomics",
                                        "output_types": [],
                                        "subtitle": "View a Species Tree or Gene Tree",
                                        "tooltip": "View a Species Tree or Gene Tree",
                                        "ver": "1.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_tree_ref",
                                            "optional": 0,
                                            "short_hint": "The Tree to view",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "desc",
                                            "optional": 1,
                                            "short_hint": "A Description of the Tree",
                                            "ui_class": "parameter",
                                            "ui_name": "Description"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "1.0.1"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acc8a1ee4b09663c3f59d75": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 17:11:55 GMT",
                                        "params": {
                                            "desc": "Janthinobacterium 10 closest genomes tree",
                                            "input_tree_ref": "janthinobacterium_10_closest_tree"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "desc": "Janthinobacterium 10 closest genomes tree",
                                "input_tree_ref": "janthinobacterium_10_closest_tree"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 09:55:01 GMT",
                            "id": "29ebcaee-a772-4aff-b591-cd15bacc8618",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_phylogenomics/view_tree/beta"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "View a Species Tree or Gene Tree",
                            "title": "View Tree - v1.1.2"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_phylogenomics/view_tree\",\n    {\n        \"input_tree_ref\": \"janthinobacterium_10_closest_tree\",\n        \"desc\": \"Janthinobacterium 10 closest genomes tree\"\n    },\n    tag=\"beta\",\n    version=\"133b7b7c4179b5fb1b51bade70069a545bca91fc\",\n    cell_id=\"29ebcaee-a772-4aff-b591-cd15bacc8618\",\n    run_id=\"d1358d40-4690-4540-820c-648a4de99b35\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Pangenome analysis"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Pangenome analysis\n\nCompute pangenome with OrthoMCL"
            },
            {
                "cell_type": "code",
                "execution_count": 31,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "fd6b156cb12dd66341002f18325d6869c2b19136",
                                "id": "PangenomeOrthomcl/build_pangenome_with_orthomcl",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_genomeset",
                                                "target_property": "input_genomeset_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "input_genomes",
                                                "target_property": "input_genome_refs",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "output_workspace"
                                            },
                                            {
                                                "input_parameter": "output_pangenome",
                                                "target_property": "output_pangenome_id"
                                            },
                                            {
                                                "input_parameter": "num_descriptions",
                                                "target_property": "num_descriptions"
                                            },
                                            {
                                                "input_parameter": "num_alignments",
                                                "target_property": "num_alignments"
                                            },
                                            {
                                                "input_parameter": "evalue",
                                                "target_property": "evalue"
                                            },
                                            {
                                                "input_parameter": "word_size",
                                                "target_property": "word_size"
                                            },
                                            {
                                                "input_parameter": "gapopen",
                                                "target_property": "gapopen"
                                            },
                                            {
                                                "input_parameter": "gapextend",
                                                "target_property": "gapextend"
                                            },
                                            {
                                                "input_parameter": "matrix",
                                                "target_property": "matrix"
                                            },
                                            {
                                                "input_parameter": "threshold",
                                                "target_property": "threshold"
                                            },
                                            {
                                                "input_parameter": "comp_based_stats",
                                                "target_property": "comp_based_stats"
                                            },
                                            {
                                                "input_parameter": "seg",
                                                "target_property": "seg"
                                            },
                                            {
                                                "input_parameter": "lcase_masking",
                                                "target_property": "lcase_masking"
                                            },
                                            {
                                                "input_parameter": "xdrop_gap_final",
                                                "target_property": "xdrop_gap_final"
                                            },
                                            {
                                                "input_parameter": "window_size",
                                                "target_property": "window_size"
                                            },
                                            {
                                                "input_parameter": "use_sw_tback",
                                                "target_property": "use_sw_tback"
                                            },
                                            {
                                                "input_parameter": "mcl_p",
                                                "target_property": "mcl_p"
                                            },
                                            {
                                                "input_parameter": "mcl_s",
                                                "target_property": "mcl_s"
                                            },
                                            {
                                                "input_parameter": "mcl_r",
                                                "target_property": "mcl_r"
                                            },
                                            {
                                                "input_parameter": "mcl_pct",
                                                "target_property": "mcl_pct"
                                            },
                                            {
                                                "input_parameter": "mcl_warn_p",
                                                "target_property": "mcl_warn_p"
                                            },
                                            {
                                                "input_parameter": "mcl_warn_factor",
                                                "target_property": "mcl_warn_factor"
                                            },
                                            {
                                                "input_parameter": "mcl_init_l",
                                                "target_property": "mcl_init_l"
                                            },
                                            {
                                                "input_parameter": "mcl_main_l",
                                                "target_property": "mcl_main_l"
                                            },
                                            {
                                                "input_parameter": "mcl_init_i",
                                                "target_property": "mcl_init_i"
                                            },
                                            {
                                                "input_parameter": "mcl_main_i",
                                                "target_property": "mcl_main_i"
                                            }
                                        ],
                                        "kb_service_method": "build_pangenome_with_orthomcl",
                                        "kb_service_name": "PangenomeOrthomcl",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "pangenome_ref"
                                                ],
                                                "target_property": "pangenome_ref"
                                            },
                                            {
                                                "input_parameter": "output_pangenome",
                                                "target_property": "name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "fd6b156cb12dd66341002f18325d6869c2b19136"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "fd6b156cb12dd66341002f18325d6869c2b19136",
                                        "icon": {
                                            "url": "img?method_id=PangenomeOrthomcl/build_pangenome_with_orthomcl&image_name=orthomcl-purple.png&tag=release"
                                        },
                                        "id": "PangenomeOrthomcl/build_pangenome_with_orthomcl",
                                        "input_types": [
                                            "KBaseGenomes.Genome",
                                            "KBaseSearch.GenomeSet"
                                        ],
                                        "module_name": "PangenomeOrthomcl",
                                        "name": "Build Pangenome with OrthoMCL",
                                        "namespace": "PangenomeOrthomcl",
                                        "output_types": [
                                            "KBaseGenomes.Pangenome"
                                        ],
                                        "subtitle": "Perform OrthoMCL orthologous groups construction",
                                        "tooltip": "Perform OrthoMCL orthologous groups construction",
                                        "ver": "0.0.7"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A set of references to genomes stored in KBase",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genomeset",
                                            "optional": 1,
                                            "short_hint": "A set of references to genomes stored in KBase",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome Set"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of references to genomes stored in KBase",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genomes",
                                            "optional": 1,
                                            "short_hint": "A list of references to genomes stored in KBase",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genomes"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of all distinct protein families identified by OrthoMCL in a set of input genome sequences, as well as the IDs of the proteins present in each family",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_pangenome",
                                            "optional": 0,
                                            "short_hint": "A list of all distinct protein families identified in input genome set",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Pangenome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Pangenome ID"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -v] Store one-line descriptions for this number of database sequences. Default value is 100000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "num_descriptions",
                                            "optional": 1,
                                            "short_hint": "Store one-line descriptions for this number of database sequences",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "num_descriptions"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -b] Store alignments for this number of database sequences. Default value is 100000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "num_alignments",
                                            "optional": 1,
                                            "short_hint": "Store alignments for this number of database sequences",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "num_alignments"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -e] Expect value (E) for saving hits. Default value is 1e-5.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "evalue",
                                            "optional": 1,
                                            "short_hint": "Expect value (E) for saving hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "evalue"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -W] Word size of initial match. Valid word sizes are 2-7. Default value is 3.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "word_size",
                                            "optional": 1,
                                            "short_hint": "Word size of initial match",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 7,
                                                "min_int": 2,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "word_size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -G] Cost to open a gap. Default value is 11.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gapopen",
                                            "optional": 1,
                                            "short_hint": "Cost to open a gap",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "gapopen"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -E] Cost to extend a gap. Default value is 1.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "gapextend",
                                            "optional": 1,
                                            "short_hint": "Cost to extend a gap",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "gapextend"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -M] Scoring matrix name. Default value is BLOSUM62.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "matrix",
                                            "optional": 1,
                                            "short_hint": "Scoring matrix name",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "matrix"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -f] Minimum score to add a word to the BLAST lookup table. Default value is 11.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "threshold",
                                            "optional": 1,
                                            "short_hint": "Minimum score to add a word to the BLAST lookup table",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -C] Use composition-based statistics (0: no composition-based statistics; 1: composition-based statistics as in NAR 29:2994-3005, 2001; 2: Composition-based score adjustments as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties; 3 - Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally). Default value is 2.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "default",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "0: no composition-based statistics",
                                                        "index": 1,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "1: Composition-based statistics as in NAR 29:2994-3005, 2001",
                                                        "index": 2,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "2: Composition-based score adjustments as in Bioinformatics 21:902-911, 2005, conditioned on sequence properties",
                                                        "index": 3,
                                                        "value": "2"
                                                    },
                                                    {
                                                        "display": "3 - Composition-based score adjustment as in Bioinformatics 21:902-911, 2005, unconditionally",
                                                        "index": 4,
                                                        "value": "3"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "comp_based_stats",
                                            "optional": 1,
                                            "short_hint": "Use composition-based statistics",
                                            "ui_class": "parameter",
                                            "ui_name": "comp_based_stats"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -F] Filter query sequence with SEG (yes/no). Default value is yes.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "default",
                                                        "index": 0,
                                                        "value": ""
                                                    },
                                                    {
                                                        "display": "yes",
                                                        "index": 1,
                                                        "value": "yes"
                                                    },
                                                    {
                                                        "display": "no",
                                                        "index": 2,
                                                        "value": "no"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "seg",
                                            "optional": 1,
                                            "short_hint": "Filter query sequence with SEG",
                                            "ui_class": "parameter",
                                            "ui_name": "seg"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -U] Use lower case filtering in query and subject sequence(s). Default value is false(0).",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "lcase_masking",
                                            "optional": 1,
                                            "short_hint": "Use lower case filtering in query and subject sequences",
                                            "ui_class": "parameter",
                                            "ui_name": "lcase_masking"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -Z] Heuristic value (in bits) for final gapped alignment. Default value is 25.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "xdrop_gap_final",
                                            "optional": 1,
                                            "short_hint": "Heuristic value (in bits) for final gapped alignment",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "xdrop_gap_final"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -A] Multiple hits window size, use 0 to specify 1-hit algorithm. Default value is 40.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "window_size",
                                            "optional": 1,
                                            "short_hint": "Multiple hits window size",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "window_size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[blastp, -s] Compute locally optimal Smith-Waterman alignments. Default value is false(0).",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "use_sw_tback",
                                            "optional": 1,
                                            "short_hint": "Compute locally optimal Smith-Waterman alignments",
                                            "ui_class": "parameter",
                                            "ui_name": "use_sw_tback"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -P] Prune number. Default value is 10000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_p",
                                            "optional": 1,
                                            "short_hint": "Prune number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_p"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -S] Selection number. Default value is 1100.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_s",
                                            "optional": 1,
                                            "short_hint": "Selection number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_s"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -R] Recovery number. Default value is 1400.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_r",
                                            "optional": 1,
                                            "short_hint": "Recovery number",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_r"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -pct] Recovery percentage. Default value is 90.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_pct",
                                            "optional": 1,
                                            "short_hint": "Recovery percentage",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_pct"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -warn-p] Warn if pruning reduces mass to this weight. Default value is 10.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_warn_p",
                                            "optional": 1,
                                            "short_hint": "Warn if pruning reduces mass to this weight",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_warn_p"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -warn-factor] Warn if pruning reduces entry count by this value. Default value is 1000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_warn_factor",
                                            "optional": 1,
                                            "short_hint": "Warn if pruning reduces entry count by this value",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_warn_factor"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -l] Initial loop length. Default value is 0.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_init_l",
                                            "optional": 1,
                                            "short_hint": "Initial loop length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_init_l"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -L] Main loop length. Default value is 10000.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_main_l",
                                            "optional": 1,
                                            "short_hint": "Main loop length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_main_l"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -i] Initial inflation. Default value is 2.0.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_init_i",
                                            "optional": 1,
                                            "short_hint": "Initial inflation",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_init_i"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "[mcl, -I] Main inflation. Default value is 1.5.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "mcl_main_i",
                                            "optional": 1,
                                            "short_hint": "Main inflation",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "mcl_main_i"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbasePanGenome"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.7"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                    "creation_time": 1523280838186,
                                    "exec_start_time": 1523280840107,
                                    "finish_time": 1523297845473,
                                    "finished": 1,
                                    "job_id": "5acb6bc6e4b09663c3f59c39",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "pangenome_ref": "30462/72/1",
                                            "report_name": "orthomcl_report_0x242ac110005L",
                                            "report_ref": "30462/73/1"
                                        }
                                    ],
                                    "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                    "status": [
                                        "2018-04-09T18:17:25+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523297856562,
                                "launchState": {
                                    "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                    "event": "launched_job",
                                    "event_at": "2018-04-09T13:33:58.209596Z",
                                    "job_id": "5acb6bc6e4b09663c3f59c39",
                                    "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-09T13:33:57.710Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-09T13:33:58.764Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                                "creation_time": 1523280838186,
                                                "finished": 0,
                                                "job_id": "5acb6bc6e4b09663c3f59c39",
                                                "job_state": "queued",
                                                "position": 19,
                                                "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                                "status": [
                                                    "2018-04-09T13:33:58+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "1ac8e005-45ae-437f-814f-69001e5df4ca",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T13:33:58.764Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                                "creation_time": 1523280838186,
                                                "exec_start_time": 1523280840107,
                                                "finished": 0,
                                                "job_id": "5acb6bc6e4b09663c3f59c39",
                                                "job_state": "in-progress",
                                                "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                                "status": [
                                                    "2018-04-09T13:34:00+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T13:34:08.496Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                                "creation_time": 1523280838186,
                                                "exec_start_time": 1523280840107,
                                                "finished": 0,
                                                "job_id": "5acb6bc6e4b09663c3f59c39",
                                                "job_state": "in-progress",
                                                "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                                "status": [
                                                    "2018-04-09T13:34:00+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "1ac8e005-45ae-437f-814f-69001e5df4ca",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T15:18:23.910Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                                "creation_time": 1523280838186,
                                                "exec_start_time": 1523280840107,
                                                "finished": 0,
                                                "job_id": "5acb6bc6e4b09663c3f59c39",
                                                "job_state": "in-progress",
                                                "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                                "status": [
                                                    "2018-04-09T13:34:00+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T15:18:30.604Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b72ed412-91fb-4a17-ac6a-69215613197f",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "3ca0560f-9819-4473-81f0-454df434e43c",
                                                "creation_time": 1523280838186,
                                                "exec_start_time": 1523280840107,
                                                "finish_time": 1523297845473,
                                                "finished": 1,
                                                "job_id": "5acb6bc6e4b09663c3f59c39",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "pangenome_ref": "30462/72/1",
                                                        "report_name": "orthomcl_report_0x242ac110005L",
                                                        "report_ref": "30462/73/1"
                                                    }
                                                ],
                                                "run_id": "c366cce8-03eb-4b7f-a2c0-7da8c6b52985",
                                                "status": [
                                                    "2018-04-09T18:17:25+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T18:17:36.562Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbasePanGenome",
                                    "params": {
                                        "name": "janthinobacterium_10_closest_pangenome",
                                        "pangenome_ref": "30462/72/1",
                                        "report_name": "orthomcl_report_0x242ac110005L",
                                        "report_ref": "30462/73/1",
                                        "workspace_name": "jplfaria:narrative_1523236349247",
                                        "ws": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acb6bc6e4b09663c3f59c39": {
                                        "cell": {
                                            "created": true,
                                            "id": "d87dfafd-cabd-436b-b10a-2652f6cb1ffd"
                                        },
                                        "createdAt": "Mon, 09 Apr 2018 18:17:38 GMT",
                                        "params": {
                                            "comp_based_stats": "",
                                            "evalue": "",
                                            "gapextend": null,
                                            "gapopen": null,
                                            "input_genomes": [],
                                            "input_genomeset": "janthinobacterium_10_closest",
                                            "lcase_masking": 0,
                                            "matrix": "",
                                            "mcl_init_i": null,
                                            "mcl_init_l": null,
                                            "mcl_main_i": null,
                                            "mcl_main_l": null,
                                            "mcl_p": null,
                                            "mcl_pct": null,
                                            "mcl_r": null,
                                            "mcl_s": null,
                                            "mcl_warn_factor": null,
                                            "mcl_warn_p": null,
                                            "num_alignments": null,
                                            "num_descriptions": null,
                                            "output_pangenome": "janthinobacterium_10_closest_pangenome",
                                            "seg": "",
                                            "threshold": null,
                                            "use_sw_tback": 0,
                                            "window_size": null,
                                            "word_size": null,
                                            "xdrop_gap_final": null
                                        }
                                    }
                                }
                            },
                            "params": {
                                "comp_based_stats": "",
                                "evalue": "",
                                "gapextend": null,
                                "gapopen": null,
                                "input_genomes": [],
                                "input_genomeset": "janthinobacterium_10_closest",
                                "lcase_masking": 0,
                                "matrix": "",
                                "mcl_init_i": null,
                                "mcl_init_l": null,
                                "mcl_main_i": null,
                                "mcl_main_l": null,
                                "mcl_p": null,
                                "mcl_pct": null,
                                "mcl_r": null,
                                "mcl_s": null,
                                "mcl_warn_factor": null,
                                "mcl_warn_p": null,
                                "num_alignments": null,
                                "num_descriptions": null,
                                "output_pangenome": "janthinobacterium_10_closest_pangenome",
                                "seg": "",
                                "threshold": null,
                                "use_sw_tback": 0,
                                "window_size": null,
                                "word_size": null,
                                "xdrop_gap_final": null
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 13:29:15 GMT",
                            "id": "3ca0560f-9819-4473-81f0-454df434e43c",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/PangenomeOrthomcl/build_pangenome_with_orthomcl/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Perform OrthoMCL orthologous groups construction",
                            "title": "Build Pangenome with OrthoMCL"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"PangenomeOrthomcl/build_pangenome_with_orthomcl\",\n    {\n        \"input_genomeset\": \"janthinobacterium_10_closest\",\n        \"input_genomes\": [],\n        \"output_pangenome\": \"janthinobacterium_10_closest_pangenome\",\n        \"num_descriptions\": None,\n        \"num_alignments\": None,\n        \"evalue\": \"\",\n        \"word_size\": None,\n        \"gapopen\": None,\n        \"gapextend\": None,\n        \"matrix\": \"\",\n        \"threshold\": None,\n        \"comp_based_stats\": \"\",\n        \"seg\": \"\",\n        \"lcase_masking\": 0,\n        \"xdrop_gap_final\": None,\n        \"window_size\": None,\n        \"use_sw_tback\": 0,\n        \"mcl_p\": None,\n        \"mcl_s\": None,\n        \"mcl_r\": None,\n        \"mcl_pct\": None,\n        \"mcl_warn_p\": None,\n        \"mcl_warn_factor\": None,\n        \"mcl_init_l\": None,\n        \"mcl_main_l\": None,\n        \"mcl_init_i\": None,\n        \"mcl_main_i\": None\n    },\n    tag=\"release\",\n    version=\"0.0.7\",\n    cell_id=\"3ca0560f-9819-4473-81f0-454df434e43c\",\n    run_id=\"ecb9a1d2-1286-4573-88a6-e11cb47908a6\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 34,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 18:17:38 GMT",
                            "icon": "arrow-right",
                            "id": "d87dfafd-cabd-436b-b10a-2652f6cb1ffd",
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:36 GMT",
                            "status": "new",
                            "title": "Output from Build Pangenome with OrthoMCL"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "outputCell": {
                            "jobId": "5acb6bc6e4b09663c3f59c39",
                            "parentCellId": "3ca0560f-9819-4473-81f0-454df434e43c",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbasePanGenome",
                                "params": {
                                    "name": "janthinobacterium_10_closest_pangenome",
                                    "pangenome_ref": "30462/72/1",
                                    "report_name": "orthomcl_report_0x242ac110005L",
                                    "report_ref": "30462/73/1",
                                    "workspace_name": "jplfaria:narrative_1523236349247",
                                    "ws": "jplfaria:narrative_1523236349247"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-a301ec76-d93f-4aed-84ce-0f95892fbde5' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-a301ec76-d93f-4aed-84ce-0f95892fbde5'), {\n                \"data\": {\"ws\": \"jplfaria:narrative_1523236349247\", \"name\": \"janthinobacterium_10_closest_pangenome\", \"workspace_name\": \"jplfaria:narrative_1523236349247\", \"report_ref\": \"30462/73/1\", \"pangenome_ref\": \"30462/72/1\", \"report_name\": \"orthomcl_report_0x242ac110005L\"},\n                \"type\":\"method\",\n                \"widget\":\"kbasePanGenome\",\n                \"cellId\":\"d87dfafd-cabd-436b-b10a-2652f6cb1ffd\",\n                \"title\":\"\",\n                \"time\":1523297858712\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 34,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbasePanGenome\",\n    {\n        \"name\": \"janthinobacterium_10_closest_pangenome\",\n        \"pangenome_ref\": \"30462/72/1\",\n        \"report_name\": \"orthomcl_report_0x242ac110005L\",\n        \"ws\": \"jplfaria:narrative_1523236349247\",\n        \"workspace_name\": \"jplfaria:narrative_1523236349247\",\n        \"report_ref\": \"30462/73/1\"\n    },\n    tag=\"release\",\n    cell_id=\"d87dfafd-cabd-436b-b10a-2652f6cb1ffd\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Pangenome Circle Plot"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "Pangenome Circle Plot"
            },
            {
                "cell_type": "code",
                "execution_count": 36,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                "id": "kb_phylogenomics/view_pan_circle_plot",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_genome_ref",
                                                "target_property": "input_genome_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "input_pangenome_ref",
                                                "target_property": "input_pangenome_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "input_compare_genome_refs",
                                                "target_property": "input_compare_genome_refs",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "input_outgroup_genome_refs",
                                                "target_property": "input_outgroup_genome_refs",
                                                "target_type_transform": "resolved-ref"
                                            }
                                        ],
                                        "kb_service_method": "view_pan_circle_plot",
                                        "kb_service_name": "kb_phylogenomics",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                        "icon": {
                                            "url": "img?method_id=kb_phylogenomics/view_pan_circle_plot&image_name=pan_circle-purple.png&tag=release"
                                        },
                                        "id": "kb_phylogenomics/view_pan_circle_plot",
                                        "input_types": [
                                            "KBaseGenomes.Genome",
                                            "KBaseGenomes.Pangenome"
                                        ],
                                        "module_name": "kb_phylogenomics",
                                        "name": "Pangenome Circle Plot - v1.0.1",
                                        "namespace": "kb_phylogenomics",
                                        "output_types": [],
                                        "subtitle": "View a Microbial Pangenome as a Circle Plot",
                                        "tooltip": "View a Microbial Pangenome as a Circle Plot",
                                        "ver": "1.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Genome to use as the base of the circle plot",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genome_ref",
                                            "optional": 0,
                                            "short_hint": "The Genome to use as the base of the circle plot",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Base Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Pangenome to view against the Base Genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_pangenome_ref",
                                            "optional": 0,
                                            "short_hint": "The Pangenome to view against the Base Genome",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Pangenome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Pangenome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Genome(s) to compare against the base",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_compare_genome_refs",
                                            "optional": 1,
                                            "short_hint": "The Genome(s) to compare against the base",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Custom Compare Genome(s)"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Genome(s) to use as outgroup to distinguish clade-specific core",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_outgroup_genome_refs",
                                            "optional": 1,
                                            "short_hint": "The Genome(s) to use as outgroup to distinguish clade-specific core",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Outgroup Genome(s)"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "464011e2-2644-447c-b4c9-f56be045aafd",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                                    "creation_time": 1523322990955,
                                    "exec_start_time": 1523322992857,
                                    "finish_time": 1523323149553,
                                    "finished": 1,
                                    "job_id": "5acc106ee4b09663c3f59d39",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_phylogenomics_report_a36e9149-0784-4da8-8609-5101638e81e5",
                                            "report_ref": "30462/80/1"
                                        }
                                    ],
                                    "run_id": "fb7b90ac-bfb8-424d-89a6-fa84ee227710",
                                    "status": [
                                        "2018-04-10T01:19:09+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523323155758,
                                "launchState": {
                                    "cell_id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T01:16:30.947245Z",
                                    "job_id": "5acc106ee4b09663c3f59d39",
                                    "run_id": "fb7b90ac-bfb8-424d-89a6-fa84ee227710"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T01:16:30.268Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T01:16:31.010Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "464011e2-2644-447c-b4c9-f56be045aafd",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                                                "creation_time": 1523322990955,
                                                "finished": 0,
                                                "job_id": "5acc106ee4b09663c3f59d39",
                                                "job_state": "queued",
                                                "position": 22,
                                                "run_id": "fb7b90ac-bfb8-424d-89a6-fa84ee227710",
                                                "status": [
                                                    "2018-04-10T01:16:30+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "061f7985-65d1-4185-99cb-34321080df7c",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:16:31.196Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "464011e2-2644-447c-b4c9-f56be045aafd",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                                                "creation_time": 1523322990955,
                                                "exec_start_time": 1523322992857,
                                                "finished": 0,
                                                "job_id": "5acc106ee4b09663c3f59d39",
                                                "job_state": "in-progress",
                                                "run_id": "fb7b90ac-bfb8-424d-89a6-fa84ee227710",
                                                "status": [
                                                    "2018-04-10T01:16:32+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:16:41.806Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "464011e2-2644-447c-b4c9-f56be045aafd",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                                                "creation_time": 1523322990955,
                                                "exec_start_time": 1523322992857,
                                                "finish_time": 1523323149553,
                                                "finished": 1,
                                                "job_id": "5acc106ee4b09663c3f59d39",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_phylogenomics_report_a36e9149-0784-4da8-8609-5101638e81e5",
                                                        "report_ref": "30462/80/1"
                                                    }
                                                ],
                                                "run_id": "fb7b90ac-bfb8-424d-89a6-fa84ee227710",
                                                "status": [
                                                    "2018-04-10T01:19:09+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:19:15.758Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_phylogenomics_report_a36e9149-0784-4da8-8609-5101638e81e5",
                                        "report_ref": "30462/80/1",
                                        "workspace_name": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acc106ee4b09663c3f59d39": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:11:38 GMT",
                                        "params": {
                                            "input_compare_genome_refs": [],
                                            "input_genome_ref": "GW456A_Prokka_genome",
                                            "input_outgroup_genome_refs": [],
                                            "input_pangenome_ref": "janthinobacterium_10_closest_pangenome"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_compare_genome_refs": [],
                                "input_genome_ref": "GW456A_Prokka_genome",
                                "input_outgroup_genome_refs": [],
                                "input_pangenome_ref": "janthinobacterium_10_closest_pangenome"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 01:16:17 GMT",
                            "id": "783e5c8f-a992-4a04-bfe0-36c09730b17d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_phylogenomics/view_pan_circle_plot/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "View a Microbial Pangenome as a Circle Plot",
                            "title": "Pangenome Circle Plot - v1.0.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_phylogenomics/view_pan_circle_plot\",\n    {\n        \"input_genome_ref\": \"GW456A_Prokka_genome\",\n        \"input_pangenome_ref\": \"janthinobacterium_10_closest_pangenome\",\n        \"input_compare_genome_refs\": [],\n        \"input_outgroup_genome_refs\": []\n    },\n    tag=\"release\",\n    version=\"1.0.1\",\n    cell_id=\"783e5c8f-a992-4a04-bfe0-36c09730b17d\",\n    run_id=\"fb7b90ac-bfb8-424d-89a6-fa84ee227710\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Pangenome core clusters"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "#### Pangenome core clusters"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 10:18:46 GMT",
                            "icon": "database",
                            "id": "4705ae89-f445-4e32-a42d-4b61b21698fc",
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:36 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseCollections.FeatureSet-1.0",
                            "title": "janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "66692104c6968c7227cd027dc5df5d60",
                                "id": 79,
                                "metadata": {},
                                "name": "janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet",
                                "obj_id": "ws.30462.obj.79",
                                "ref": "30462/79/1",
                                "ref_path": null,
                                "saveDate": "2018-04-10T01:17:12.000Z",
                                "save_date": "2018-04-10T01:17:12+0000",
                                "saved_by": "jplfaria",
                                "size": 849197,
                                "type": "KBaseCollections.FeatureSet-1.0",
                                "typeMajorVersion": "1",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseCollections",
                                "typeName": "FeatureSet",
                                "version": 1,
                                "ws": "jplfaria:narrative_1523236349247",
                                "ws_id": 30462,
                                "wsid": 30462
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-c6a0990c-13e5-4dc9-bef1-08579591ad5e' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-c6a0990c-13e5-4dc9-bef1-08579591ad5e'), {\n                \"data\": {\"output\": {\"workspaceName\": \"jplfaria:narrative_1523236349247\", \"featureset_name\": \"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet\"}, \"type_spec\": {\"import_method_ids\": [], \"subtitle\": \"FeatureSet object\", \"name\": \"FeatureSet\", \"export_functions\": {}, \"view_method_ids\": [\"NarrativeViewers/view_featureset\"], \"description\": \"<p>a featureset.</p>\\n\", \"type_name\": \"KBaseCollections.FeatureSet\", \"tooltip\": \"FeatureSet object\", \"icon\": {\"url\": \"img?type_name=KBaseCollections.FeatureSet&image_name=none\"}}, \"info_tuple\": [79, \"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet\", \"KBaseCollections.FeatureSet-1.0\", \"2018-04-10T01:17:12+0000\", 1, \"jplfaria\", 30462, \"jplfaria:narrative_1523236349247\", \"66692104c6968c7227cd027dc5df5d60\", 849197, {}], \"app_spec\": {\"info\": {\"ver\": \"1.0.2\", \"name\": \"View FeatureSet\", \"subtitle\": \"View a FeatureSet\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"View a FeatureSet\", \"git_commit_hash\": \"787d02cc8b257fe732844c3ebe6342879122d94c\", \"input_types\": [\"KBaseCollections.FeatureSet\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_featureset\", \"categories\": [\"viewers\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseFeatureSet\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseCollections.FeatureSet\"]}, \"disabled\": 0, \"short_hint\": \"the FeatureSet to view\", \"default_values\": [\"\"], \"ui_name\": \"FeatureSet\", \"optional\": 0, \"id\": \"featureset_name\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"featureset_name\", \"input_parameter\": \"featureset_name\"}, {\"target_property\": \"workspaceName\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"4705ae89-f445-4e32-a42d-4b61b21698fc\",\n                \"title\":\"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet\",\n                \"time\":1523355526796\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 8,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"30462/79/1\",\n    cell_id=\"4705ae89-f445-4e32-a42d-4b61b21698fc\",\n    title=\"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.core_pangenome.FeatureSet\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Pangenome non-core clusters"
                        },
                        "cellState": {
                            "message": "",
                            "selected": true,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "#### Pangenome non-core clusters"
            },
            {
                "cell_type": "code",
                "execution_count": 10,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 10:20:23 GMT",
                            "icon": "database",
                            "id": "0d6eabe5-e57a-49b0-a9af-d6f9254992e9",
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:36 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseCollections.FeatureSet-1.0",
                            "title": "janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "1cae4b1db5abbb83ea3297c293b03b86",
                                "id": 78,
                                "metadata": {},
                                "name": "janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet",
                                "obj_id": "ws.30462.obj.78",
                                "ref": "30462/78/1",
                                "ref_path": null,
                                "saveDate": "2018-04-10T01:17:12.000Z",
                                "save_date": "2018-04-10T01:17:12+0000",
                                "saved_by": "jplfaria",
                                "size": 1025027,
                                "type": "KBaseCollections.FeatureSet-1.0",
                                "typeMajorVersion": "1",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseCollections",
                                "typeName": "FeatureSet",
                                "version": 1,
                                "ws": "jplfaria:narrative_1523236349247",
                                "ws_id": 30462,
                                "wsid": 30462
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-573bf17a-8a76-4099-b40f-07d1b66a41f3' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-573bf17a-8a76-4099-b40f-07d1b66a41f3'), {\n                \"data\": {\"output\": {\"workspaceName\": \"jplfaria:narrative_1523236349247\", \"featureset_name\": \"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet\"}, \"type_spec\": {\"import_method_ids\": [], \"subtitle\": \"FeatureSet object\", \"name\": \"FeatureSet\", \"export_functions\": {}, \"view_method_ids\": [\"NarrativeViewers/view_featureset\"], \"description\": \"<p>a featureset.</p>\\n\", \"type_name\": \"KBaseCollections.FeatureSet\", \"tooltip\": \"FeatureSet object\", \"icon\": {\"url\": \"img?type_name=KBaseCollections.FeatureSet&image_name=none\"}}, \"info_tuple\": [78, \"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet\", \"KBaseCollections.FeatureSet-1.0\", \"2018-04-10T01:17:12+0000\", 1, \"jplfaria\", 30462, \"jplfaria:narrative_1523236349247\", \"1cae4b1db5abbb83ea3297c293b03b86\", 1025027, {}], \"app_spec\": {\"info\": {\"ver\": \"1.0.2\", \"name\": \"View FeatureSet\", \"subtitle\": \"View a FeatureSet\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"View a FeatureSet\", \"git_commit_hash\": \"787d02cc8b257fe732844c3ebe6342879122d94c\", \"input_types\": [\"KBaseCollections.FeatureSet\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_featureset\", \"categories\": [\"viewers\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseFeatureSet\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseCollections.FeatureSet\"]}, \"disabled\": 0, \"short_hint\": \"the FeatureSet to view\", \"default_values\": [\"\"], \"ui_name\": \"FeatureSet\", \"optional\": 0, \"id\": \"featureset_name\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"featureset_name\", \"input_parameter\": \"featureset_name\"}, {\"target_property\": \"workspaceName\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"0d6eabe5-e57a-49b0-a9af-d6f9254992e9\",\n                \"title\":\"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet\",\n                \"time\":1523355623886\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 10,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"30462/78/1\",\n    cell_id=\"0d6eabe5-e57a-49b0-a9af-d6f9254992e9\",\n    title=\"janthinobacterium_10_closest_pangenome.base_genome-GW456A_Prokka_genome.non-core_pangenome.FeatureSet\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Pangenome domain annotation"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Pangenome domain annotation"
            },
            {
                "cell_type": "code",
                "execution_count": 35,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                "id": "kb_phylogenomics/run_DomainAnnotation_Sets",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_genomeSet_ref",
                                                "target_property": "input_genomeSet_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "override_annot",
                                                "target_property": "override_annot"
                                            }
                                        ],
                                        "kb_service_method": "run_DomainAnnotation_Sets",
                                        "kb_service_name": "kb_phylogenomics",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "jmc",
                                            "psnovichkov",
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                        "icon": {
                                            "url": "img?method_id=kb_phylogenomics/run_DomainAnnotation_Sets&image_name=domains-red.png&tag=release"
                                        },
                                        "id": "kb_phylogenomics/run_DomainAnnotation_Sets",
                                        "input_types": [
                                            "KBaseSearch.GenomeSet"
                                        ],
                                        "module_name": "kb_phylogenomics",
                                        "name": "Annotate Domains in a GenomeSet",
                                        "namespace": "kb_phylogenomics",
                                        "output_types": [],
                                        "subtitle": "Run DomainAnnotation on a Genome Set",
                                        "tooltip": "Run DomainAnnotation on a Genome Set",
                                        "ver": "1.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Set of Genomes upon which to run DomainAnnotation",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genomeSet_ref",
                                            "optional": 0,
                                            "short_hint": "The Set of Genomes upon which to run DomainAnnotation",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome Set"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Whether to redo or skip DomainAnnotations that have already been done",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "overwrite domain annotations",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "skip repeat annotations",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "override_annot",
                                            "optional": 1,
                                            "short_hint": "Whether to redo or skip DomainAnnotations that have already been done",
                                            "ui_class": "parameter",
                                            "ui_name": "Override Existing Domain Annotations"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                    "creation_time": 1523314711121,
                                    "exec_start_time": 1523314713014,
                                    "finish_time": 1523373503209,
                                    "finished": 1,
                                    "job_id": "5acbf016e4b09663c3f59d0a",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "report_e5c94b9e-2b45-be8b-b387-93eb516192be",
                                            "report_ref": "30462/105/1"
                                        }
                                    ],
                                    "run_id": null,
                                    "status": [
                                        "2018-04-10T15:18:23+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523378590978,
                                "launchState": {
                                    "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                    "event": "launched_job",
                                    "event_at": "2018-04-09T22:58:31.124462Z",
                                    "job_id": "5acbf016e4b09663c3f59d0a",
                                    "run_id": "1f6aaf67-a86a-4526-b396-920c322b072f"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-09T22:58:30.636Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-09T22:58:31.220Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "queued",
                                                "position": 19,
                                                "run_id": "1f6aaf67-a86a-4526-b396-920c322b072f",
                                                "status": [
                                                    "2018-04-09T22:58:30+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "361d801c-bb9f-4550-a018-b84bea9c1c26",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-09T22:58:31.320Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "in-progress",
                                                "run_id": "1f6aaf67-a86a-4526-b396-920c322b072f",
                                                "status": [
                                                    "2018-04-09T22:58:33+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "361d801c-bb9f-4550-a018-b84bea9c1c26",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T00:42:46.010Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "in-progress",
                                                "run_id": "1f6aaf67-a86a-4526-b396-920c322b072f",
                                                "status": [
                                                    "2018-04-09T22:58:33+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T00:42:54.630Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "in-progress",
                                                "run_id": null,
                                                "status": [
                                                    "2018-04-09T22:58:33+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T09:42:37.498Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "in-progress",
                                                "run_id": null,
                                                "status": [
                                                    "2018-04-09T22:58:33+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "361d801c-bb9f-4550-a018-b84bea9c1c26",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T09:42:37.742Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finished": 0,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "in-progress",
                                                "run_id": null,
                                                "status": [
                                                    "2018-04-09T22:58:33+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T09:42:49.430Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "43b6461a-45ed-498e-b5ea-3a2d7bbf8cd6",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                                                "creation_time": 1523314711121,
                                                "exec_start_time": 1523314713014,
                                                "finish_time": 1523373503209,
                                                "finished": 1,
                                                "job_id": "5acbf016e4b09663c3f59d0a",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "report_e5c94b9e-2b45-be8b-b387-93eb516192be",
                                                        "report_ref": "30462/105/1"
                                                    }
                                                ],
                                                "run_id": null,
                                                "status": [
                                                    "2018-04-10T15:18:23+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T16:43:10.978Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "report_e5c94b9e-2b45-be8b-b387-93eb516192be",
                                        "report_ref": "30462/105/1",
                                        "workspace_name": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acbf016e4b09663c3f59d0a": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:11:38 GMT",
                                        "params": {
                                            "input_genomeSet_ref": "janthinobacterium_10_closest",
                                            "override_annot": "0"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_genomeSet_ref": "janthinobacterium_10_closest",
                                "override_annot": "0"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 09 Apr 2018 13:34:07 GMT",
                            "id": "0ace4740-0df4-4413-bb99-f770ef110c4c",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_phylogenomics/run_DomainAnnotation_Sets/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Run DomainAnnotation on a Genome Set",
                            "title": "Annotate Domains in a GenomeSet"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_phylogenomics/run_DomainAnnotation_Sets\",\n    {\n        \"input_genomeSet_ref\": \"janthinobacterium_10_closest\",\n        \"override_annot\": \"0\"\n    },\n    tag=\"release\",\n    version=\"1.0.1\",\n    cell_id=\"0ace4740-0df4-4413-bb99-f770ef110c4c\",\n    run_id=\"1f6aaf67-a86a-4526-b396-920c322b072f\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                "id": "kb_phylogenomics/view_fxn_profile_phylo",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_speciesTree_ref",
                                                "target_property": "input_speciesTree_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "namespace",
                                                "target_property": "namespace"
                                            },
                                            {
                                                "input_parameter": "custom_target_fams",
                                                "target_property": "custom_target_fams"
                                            },
                                            {
                                                "input_parameter": "count_category",
                                                "target_property": "count_category"
                                            },
                                            {
                                                "input_parameter": "heatmap",
                                                "target_property": "heatmap"
                                            },
                                            {
                                                "input_parameter": "vertical",
                                                "target_property": "vertical"
                                            },
                                            {
                                                "input_parameter": "top_hit",
                                                "target_property": "top_hit"
                                            },
                                            {
                                                "input_parameter": "e_value",
                                                "target_property": "e_value"
                                            },
                                            {
                                                "input_parameter": "log_base",
                                                "target_property": "log_base"
                                            },
                                            {
                                                "input_parameter": "show_blanks",
                                                "target_property": "show_blanks"
                                            }
                                        ],
                                        "kb_service_method": "view_fxn_profile_phylo",
                                        "kb_service_name": "kb_phylogenomics",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae",
                                        "icon": {
                                            "url": "img?method_id=kb_phylogenomics/view_fxn_profile_phylo&image_name=domains_phylo-purple.png&tag=release"
                                        },
                                        "id": "kb_phylogenomics/view_fxn_profile_phylo",
                                        "input_types": [
                                            "KBaseTrees.Tree"
                                        ],
                                        "module_name": "kb_phylogenomics",
                                        "name": "View Function Profile Phylo - v1.0.0",
                                        "namespace": "kb_phylogenomics",
                                        "output_types": [],
                                        "subtitle": "Examine the general functional distribution or specific functional gene families for the Genomes in a Species Tree",
                                        "tooltip": "Examine the general functional distribution or specific functional gene families for the Genomes in a Species Tree",
                                        "ver": "1.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "description": "Define custom domains to use",
                                            "id": "custom_target_fams",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "target_fams",
                                                "extra_target_fam_groups_COG",
                                                "extra_target_fam_groups_PFAM",
                                                "extra_target_fam_groups_TIGR",
                                                "extra_target_fam_groups_SEED"
                                            ],
                                            "short_hint": "Define custom domains to use",
                                            "ui_name": "Custom Domains (including namespace groups)",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Species Tree of Genomes to examine",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_speciesTree_ref",
                                            "optional": 0,
                                            "short_hint": "The Species Tree of Genomes to examine",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Species Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "custom"
                                            ],
                                            "description": "Do top-level analysis or Custom Domain Families?",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Use Custom Domains",
                                                        "index": 0,
                                                        "value": "custom"
                                                    },
                                                    {
                                                        "display": "COG Functional Categories",
                                                        "index": 1,
                                                        "value": "COG"
                                                    },
                                                    {
                                                        "display": "Pfam A Clans",
                                                        "index": 2,
                                                        "value": "PF"
                                                    },
                                                    {
                                                        "display": "TIGRFAM Roles",
                                                        "index": 3,
                                                        "value": "TIGR"
                                                    },
                                                    {
                                                        "display": "SEED Roles",
                                                        "index": 4,
                                                        "value": "SEED"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "namespace",
                                            "optional": 0,
                                            "short_hint": "Do top-level analysis or Custom Domain Families?",
                                            "ui_class": "parameter",
                                            "ui_name": "Domain Namespace"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Domain Families to target in the analysis, e.g. PF00007, COG0007 (default: top-level functional category report)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "target_fams",
                                            "optional": 1,
                                            "short_hint": "Domain Families to target in the analysis, e.g. PF00007, COG0007 (default: top-level functional category report)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Custom Domains"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Domain Families from particular namespace groups to target in the analysis",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "COG: D: Cell cycle control, cell division, chromosome partitioning",
                                                        "value": "COG: D: Cell cycle control, cell division, chromosome partitioning"
                                                    },
                                                    {
                                                        "display": "COG: M: Cell wall/membrane/envelope biogenesis",
                                                        "value": "COG: M: Cell wall/membrane/envelope biogenesis"
                                                    },
                                                    {
                                                        "display": "COG: N: Cell motility",
                                                        "value": "COG: N: Cell motility"
                                                    },
                                                    {
                                                        "display": "COG: O: Post-translational modification, protein turnover, and chaperones",
                                                        "value": "COG: O: Post-translational modification, protein turnover, and chaperones"
                                                    },
                                                    {
                                                        "display": "COG: T: Signal transduction mechanisms",
                                                        "value": "COG: T: Signal transduction mechanisms"
                                                    },
                                                    {
                                                        "display": "COG: U: Intracellular trafficking, secretion, and vesicular transport",
                                                        "value": "COG: U: Intracellular trafficking, secretion, and vesicular transport"
                                                    },
                                                    {
                                                        "display": "COG: V: Defense mechanisms",
                                                        "value": "COG: V: Defense mechanisms"
                                                    },
                                                    {
                                                        "display": "COG: W: Extracellular structures",
                                                        "value": "COG: W: Extracellular structures"
                                                    },
                                                    {
                                                        "display": "COG: Y: Nuclear structure",
                                                        "value": "COG: Y: Nuclear structure"
                                                    },
                                                    {
                                                        "display": "COG: Z: Cytoskeleton",
                                                        "value": "COG: Z: Cytoskeleton"
                                                    },
                                                    {
                                                        "display": "COG: A: RNA processing and modification",
                                                        "value": "COG: A: RNA processing and modification"
                                                    },
                                                    {
                                                        "display": "COG: B: Chromatin structure and dynamics",
                                                        "value": "COG: B: Chromatin structure and dynamics"
                                                    },
                                                    {
                                                        "display": "COG: J: Translation, ribosomal structure and biogenesis",
                                                        "value": "COG: J: Translation, ribosomal structure and biogenesis"
                                                    },
                                                    {
                                                        "display": "COG: K: Transcription",
                                                        "value": "COG: K: Transcription"
                                                    },
                                                    {
                                                        "display": "COG: L: Replication, recombination and repair",
                                                        "value": "COG: L: Replication, recombination and repair"
                                                    },
                                                    {
                                                        "display": "COG: C: Energy production and conversion",
                                                        "value": "COG: C: Energy production and conversion"
                                                    },
                                                    {
                                                        "display": "COG: E: Amino acid transport and metabolism",
                                                        "value": "COG: E: Amino acid transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: F: Nucleotide transport and metabolism",
                                                        "value": "COG: F: Nucleotide transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: G: Carbohydrate transport and metabolism",
                                                        "value": "COG: G: Carbohydrate transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: H: Coenzyme transport and metabolism",
                                                        "value": "COG: H: Coenzyme transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: I: Lipid transport and metabolism",
                                                        "value": "COG: I: Lipid transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: P: Inorganic ion transport and metabolism",
                                                        "value": "COG: P: Inorganic ion transport and metabolism"
                                                    },
                                                    {
                                                        "display": "COG: Q: Secondary metabolites biosynthesis, transport, and catabolism",
                                                        "value": "COG: Q: Secondary metabolites biosynthesis, transport, and catabolism"
                                                    },
                                                    {
                                                        "display": "COG: R:   General function prediction only",
                                                        "value": "COG: R:   General function prediction only"
                                                    },
                                                    {
                                                        "display": "COG: S:   Function unknown",
                                                        "value": "COG: S:   Function unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "extra_target_fam_groups_COG",
                                            "optional": 1,
                                            "short_hint": "Domain Families from particular namespace groups to target in the analysis",
                                            "ui_class": "parameter",
                                            "ui_name": "Custom Domain Groups (COG)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Domain Families from particular namespace groups to target in the analysis",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "PFAM: Clan CL0001: EGF",
                                                        "value": "PF: Clan CL0001: EGF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0003: SAM",
                                                        "value": "PF: Clan CL0003: SAM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0004: Concanavalin",
                                                        "value": "PF: Clan CL0004: Concanavalin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0005: Kazal",
                                                        "value": "PF: Clan CL0005: Kazal"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0006: C1",
                                                        "value": "PF: Clan CL0006: C1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0007: KH",
                                                        "value": "PF: Clan CL0007: KH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0009: ENTH_VHS",
                                                        "value": "PF: Clan CL0009: ENTH_VHS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0010: SH3",
                                                        "value": "PF: Clan CL0010: SH3"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0011: Ig",
                                                        "value": "PF: Clan CL0011: Ig"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0012: Histone",
                                                        "value": "PF: Clan CL0012: Histone"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0013: Beta-lactamase",
                                                        "value": "PF: Clan CL0013: Beta-lactamase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0014: Glutaminase_I",
                                                        "value": "PF: Clan CL0014: Glutaminase_I"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0015: MFS",
                                                        "value": "PF: Clan CL0015: MFS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0016: PKinase",
                                                        "value": "PF: Clan CL0016: PKinase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0018: bZIP",
                                                        "value": "PF: Clan CL0018: bZIP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0020: TPR",
                                                        "value": "PF: Clan CL0020: TPR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0021: OB",
                                                        "value": "PF: Clan CL0021: OB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0022: LRR",
                                                        "value": "PF: Clan CL0022: LRR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0023: P-loop_NTPase",
                                                        "value": "PF: Clan CL0023: P-loop_NTPase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0025: His_Kinase_A",
                                                        "value": "PF: Clan CL0025: His_Kinase_A"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0026: CU_oxidase",
                                                        "value": "PF: Clan CL0026: CU_oxidase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0027: RdRP",
                                                        "value": "PF: Clan CL0027: RdRP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0028: AB_hydrolase",
                                                        "value": "PF: Clan CL0028: AB_hydrolase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0029: Cupin",
                                                        "value": "PF: Clan CL0029: Cupin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0030: Ion_channel",
                                                        "value": "PF: Clan CL0030: Ion_channel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0031: Phosphatase",
                                                        "value": "PF: Clan CL0031: Phosphatase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0032: Dim_A_B_barrel",
                                                        "value": "PF: Clan CL0032: Dim_A_B_barrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0033: POZ",
                                                        "value": "PF: Clan CL0033: POZ"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0034: Amidohydrolase",
                                                        "value": "PF: Clan CL0034: Amidohydrolase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0035: Peptidase_MH",
                                                        "value": "PF: Clan CL0035: Peptidase_MH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0036: TIM_barrel",
                                                        "value": "PF: Clan CL0036: TIM_barrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0037: Lysozyme",
                                                        "value": "PF: Clan CL0037: Lysozyme"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0039: HUP",
                                                        "value": "PF: Clan CL0039: HUP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0040: tRNA_synt_II",
                                                        "value": "PF: Clan CL0040: tRNA_synt_II"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0041: Death",
                                                        "value": "PF: Clan CL0041: Death"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0042: Flavoprotein",
                                                        "value": "PF: Clan CL0042: Flavoprotein"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0043: Chelatase",
                                                        "value": "PF: Clan CL0043: Chelatase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0044: Ferritin",
                                                        "value": "PF: Clan CL0044: Ferritin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0045: Rubredoxin",
                                                        "value": "PF: Clan CL0045: Rubredoxin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0046: Thiolase",
                                                        "value": "PF: Clan CL0046: Thiolase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0047: CuAO_N2_N3",
                                                        "value": "PF: Clan CL0047: CuAO_N2_N3"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0048: LolA_LolB",
                                                        "value": "PF: Clan CL0048: LolA_LolB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0049: Tudor",
                                                        "value": "PF: Clan CL0049: Tudor"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0050: HotDog",
                                                        "value": "PF: Clan CL0050: HotDog"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0051: NTF2",
                                                        "value": "PF: Clan CL0051: NTF2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0052: NTN",
                                                        "value": "PF: Clan CL0052: NTN"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0053: 4H_Cytokine",
                                                        "value": "PF: Clan CL0053: 4H_Cytokine"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0054: Knottin_1",
                                                        "value": "PF: Clan CL0054: Knottin_1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0055: Viral_ssRNA_CP",
                                                        "value": "PF: Clan CL0055: Viral_ssRNA_CP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0056: C_Lectin",
                                                        "value": "PF: Clan CL0056: C_Lectin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0057: Met_repress",
                                                        "value": "PF: Clan CL0057: Met_repress"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0058: Glyco_hydro_tim",
                                                        "value": "PF: Clan CL0058: Glyco_hydro_tim"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0059: 6_Hairpin",
                                                        "value": "PF: Clan CL0059: 6_Hairpin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0060: DNA_clamp",
                                                        "value": "PF: Clan CL0060: DNA_clamp"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0061: PLP_aminotran",
                                                        "value": "PF: Clan CL0061: PLP_aminotran"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0062: APC",
                                                        "value": "PF: Clan CL0062: APC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0063: NADP_Rossmann",
                                                        "value": "PF: Clan CL0063: NADP_Rossmann"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0064: CPA_AT",
                                                        "value": "PF: Clan CL0064: CPA_AT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0065: Cyclin",
                                                        "value": "PF: Clan CL0065: Cyclin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0066: Trefoil",
                                                        "value": "PF: Clan CL0066: Trefoil"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0067: SIS",
                                                        "value": "PF: Clan CL0067: SIS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0068: RIIa",
                                                        "value": "PF: Clan CL0068: RIIa"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0069: GFP",
                                                        "value": "PF: Clan CL0069: GFP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0070: ACT",
                                                        "value": "PF: Clan CL0070: ACT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0071: His_phosphatase",
                                                        "value": "PF: Clan CL0071: His_phosphatase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0072: Ubiquitin",
                                                        "value": "PF: Clan CL0072: Ubiquitin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0073: P53-like",
                                                        "value": "PF: Clan CL0073: P53-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0074: Matrix",
                                                        "value": "PF: Clan CL0074: Matrix"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0075: Defensin",
                                                        "value": "PF: Clan CL0075: Defensin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0076: FAD_Lum_binding",
                                                        "value": "PF: Clan CL0076: FAD_Lum_binding"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0077: FAD_PCMH",
                                                        "value": "PF: Clan CL0077: FAD_PCMH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0078: DNA_ligase",
                                                        "value": "PF: Clan CL0078: DNA_ligase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0079: Cystine-knot",
                                                        "value": "PF: Clan CL0079: Cystine-knot"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0080: Mss4-like",
                                                        "value": "PF: Clan CL0080: Mss4-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0081: MBD-like",
                                                        "value": "PF: Clan CL0081: MBD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0082: MIF",
                                                        "value": "PF: Clan CL0082: MIF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0083: Omega_toxin",
                                                        "value": "PF: Clan CL0083: Omega_toxin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0084: ADP-ribosyl",
                                                        "value": "PF: Clan CL0084: ADP-ribosyl"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0085: FAD_DHS",
                                                        "value": "PF: Clan CL0085: FAD_DHS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0086: FAD_oxidored",
                                                        "value": "PF: Clan CL0086: FAD_oxidored"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0087: Acyl-CoA_dh",
                                                        "value": "PF: Clan CL0087: Acyl-CoA_dh"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0088: Alk_phosphatase",
                                                        "value": "PF: Clan CL0088: Alk_phosphatase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0089: GlnB-like",
                                                        "value": "PF: Clan CL0089: GlnB-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0090: Globin",
                                                        "value": "PF: Clan CL0090: Globin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0091: NAD_Ferredoxin",
                                                        "value": "PF: Clan CL0091: NAD_Ferredoxin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0092: ADF",
                                                        "value": "PF: Clan CL0092: ADF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0093: Peptidase_CD",
                                                        "value": "PF: Clan CL0093: Peptidase_CD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0094: Peptidase_ME",
                                                        "value": "PF: Clan CL0094: Peptidase_ME"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0095: Peptidase_ML",
                                                        "value": "PF: Clan CL0095: Peptidase_ML"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0096: Pept_Inhib_IE",
                                                        "value": "PF: Clan CL0096: Pept_Inhib_IE"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0097: TypeIII_Chap",
                                                        "value": "PF: Clan CL0097: TypeIII_Chap"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0098: SPOUT",
                                                        "value": "PF: Clan CL0098: SPOUT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0099: ALDH-like",
                                                        "value": "PF: Clan CL0099: ALDH-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0100: C1q_TNF",
                                                        "value": "PF: Clan CL0100: C1q_TNF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0101: PELOTA",
                                                        "value": "PF: Clan CL0101: PELOTA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0103: Gal_mutarotase",
                                                        "value": "PF: Clan CL0103: Gal_mutarotase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0104: Glyoxalase",
                                                        "value": "PF: Clan CL0104: Glyoxalase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0105: Hybrid",
                                                        "value": "PF: Clan CL0105: Hybrid"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0106: 6PGD_C",
                                                        "value": "PF: Clan CL0106: 6PGD_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0107: KOW",
                                                        "value": "PF: Clan CL0107: KOW"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0108: Actin_ATPase",
                                                        "value": "PF: Clan CL0108: Actin_ATPase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0109: CDA",
                                                        "value": "PF: Clan CL0109: CDA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0110: GT-A",
                                                        "value": "PF: Clan CL0110: GT-A"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0111: GT-C",
                                                        "value": "PF: Clan CL0111: GT-C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0112: Yip1",
                                                        "value": "PF: Clan CL0112: Yip1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0113: GT-B",
                                                        "value": "PF: Clan CL0113: GT-B"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0114: HMG-box",
                                                        "value": "PF: Clan CL0114: HMG-box"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0115: Steroid_dh",
                                                        "value": "PF: Clan CL0115: Steroid_dh"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0116: Calycin",
                                                        "value": "PF: Clan CL0116: Calycin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0117: uPAR_Ly6_toxin",
                                                        "value": "PF: Clan CL0117: uPAR_Ly6_toxin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0118: Ribokinase",
                                                        "value": "PF: Clan CL0118: Ribokinase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0121: Cystatin",
                                                        "value": "PF: Clan CL0121: Cystatin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0122: UTRA",
                                                        "value": "PF: Clan CL0122: UTRA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0123: HTH",
                                                        "value": "PF: Clan CL0123: HTH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0124: Peptidase_PA",
                                                        "value": "PF: Clan CL0124: Peptidase_PA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0125: Peptidase_CA",
                                                        "value": "PF: Clan CL0125: Peptidase_CA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0126: Peptidase_MA",
                                                        "value": "PF: Clan CL0126: Peptidase_MA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0127: ClpP_crotonase",
                                                        "value": "PF: Clan CL0127: ClpP_crotonase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0128: vWA-like",
                                                        "value": "PF: Clan CL0128: vWA-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0129: Peptidase_AA",
                                                        "value": "PF: Clan CL0129: Peptidase_AA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0130: Peptidase_AD",
                                                        "value": "PF: Clan CL0130: Peptidase_AD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0131: DoxD-like",
                                                        "value": "PF: Clan CL0131: DoxD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0132: AbrB",
                                                        "value": "PF: Clan CL0132: AbrB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0133: AT14A-like",
                                                        "value": "PF: Clan CL0133: AT14A-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0135: Arrestin_N-like",
                                                        "value": "PF: Clan CL0135: Arrestin_N-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0136: Plasmid-antitox",
                                                        "value": "PF: Clan CL0136: Plasmid-antitox"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0137: HAD",
                                                        "value": "PF: Clan CL0137: HAD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0139: GADPH_aa-bio_dh",
                                                        "value": "PF: Clan CL0139: GADPH_aa-bio_dh"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0140: Viral_NABP",
                                                        "value": "PF: Clan CL0140: Viral_NABP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0141: MtN3-like",
                                                        "value": "PF: Clan CL0141: MtN3-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0142: Membrane_trans",
                                                        "value": "PF: Clan CL0142: Membrane_trans"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0143: B_Fructosidase",
                                                        "value": "PF: Clan CL0143: B_Fructosidase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0144: Periplas_BP",
                                                        "value": "PF: Clan CL0144: Periplas_BP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0145: Golgi-transport",
                                                        "value": "PF: Clan CL0145: Golgi-transport"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0146: Herpes_glyco",
                                                        "value": "PF: Clan CL0146: Herpes_glyco"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0147: Traffic",
                                                        "value": "PF: Clan CL0147: Traffic"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0148: Viral_Gag",
                                                        "value": "PF: Clan CL0148: Viral_Gag"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0149: CoA-acyltrans",
                                                        "value": "PF: Clan CL0149: CoA-acyltrans"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0151: PK_TIM",
                                                        "value": "PF: Clan CL0151: PK_TIM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0153: dUTPase",
                                                        "value": "PF: Clan CL0153: dUTPase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0154: C2",
                                                        "value": "PF: Clan CL0154: C2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0155: CBM_14_19",
                                                        "value": "PF: Clan CL0155: CBM_14_19"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0156: Nucleocapsid",
                                                        "value": "PF: Clan CL0156: Nucleocapsid"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0157: Kleisin",
                                                        "value": "PF: Clan CL0157: Kleisin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0158: GH_CE",
                                                        "value": "PF: Clan CL0158: GH_CE"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0159: E-set",
                                                        "value": "PF: Clan CL0159: E-set"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0160: Methionine_synt",
                                                        "value": "PF: Clan CL0160: Methionine_synt"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0161: GAF",
                                                        "value": "PF: Clan CL0161: GAF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0162: FBA",
                                                        "value": "PF: Clan CL0162: FBA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0163: Calcineurin",
                                                        "value": "PF: Clan CL0163: Calcineurin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0164: CUB",
                                                        "value": "PF: Clan CL0164: CUB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0165: Cache",
                                                        "value": "PF: Clan CL0165: Cache"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0166: PRD",
                                                        "value": "PF: Clan CL0166: PRD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0167: Zn_Beta_Ribbon",
                                                        "value": "PF: Clan CL0167: Zn_Beta_Ribbon"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0168: PAN",
                                                        "value": "PF: Clan CL0168: PAN"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0169: Rep",
                                                        "value": "PF: Clan CL0169: Rep"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0170: Peptidase_MD",
                                                        "value": "PF: Clan CL0170: Peptidase_MD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0171: Phospoesterase",
                                                        "value": "PF: Clan CL0171: Phospoesterase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0172: Thioredoxin",
                                                        "value": "PF: Clan CL0172: Thioredoxin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0173: STIR",
                                                        "value": "PF: Clan CL0173: STIR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0174: TetR_C",
                                                        "value": "PF: Clan CL0174: TetR_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0175: TRASH",
                                                        "value": "PF: Clan CL0175: TRASH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0176: Chemosens_recp",
                                                        "value": "PF: Clan CL0176: Chemosens_recp"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0177: PBP",
                                                        "value": "PF: Clan CL0177: PBP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0178: PUA",
                                                        "value": "PF: Clan CL0178: PUA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0179: ATP-grasp",
                                                        "value": "PF: Clan CL0179: ATP-grasp"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0181: ABC-2",
                                                        "value": "PF: Clan CL0181: ABC-2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0182: IT",
                                                        "value": "PF: Clan CL0182: IT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0183: PAS_Fold",
                                                        "value": "PF: Clan CL0183: PAS_Fold"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0184: DMT",
                                                        "value": "PF: Clan CL0184: DMT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0186: Beta_propeller",
                                                        "value": "PF: Clan CL0186: Beta_propeller"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0187: LysM",
                                                        "value": "PF: Clan CL0187: LysM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0188: CH",
                                                        "value": "PF: Clan CL0188: CH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0189: Endonuclease",
                                                        "value": "PF: Clan CL0189: Endonuclease"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0190: HSP20",
                                                        "value": "PF: Clan CL0190: HSP20"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0191: POTRA",
                                                        "value": "PF: Clan CL0191: POTRA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0192: GPCR_A",
                                                        "value": "PF: Clan CL0192: GPCR_A"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0193: MBB",
                                                        "value": "PF: Clan CL0193: MBB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0194: DNA_pol_B-like",
                                                        "value": "PF: Clan CL0194: DNA_pol_B-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0195: DBL",
                                                        "value": "PF: Clan CL0195: DBL"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0196: DSRM",
                                                        "value": "PF: Clan CL0196: DSRM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0197: GME",
                                                        "value": "PF: Clan CL0197: GME"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0198: HHH",
                                                        "value": "PF: Clan CL0198: HHH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0199: DPBB",
                                                        "value": "PF: Clan CL0199: DPBB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0200: Prefoldin",
                                                        "value": "PF: Clan CL0200: Prefoldin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0201: Peptidase_SH",
                                                        "value": "PF: Clan CL0201: Peptidase_SH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0202: GBD",
                                                        "value": "PF: Clan CL0202: GBD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0203: CBD",
                                                        "value": "PF: Clan CL0203: CBD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0204: Adhesin",
                                                        "value": "PF: Clan CL0204: Adhesin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0205: Di-copper",
                                                        "value": "PF: Clan CL0205: Di-copper"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0206: TRB",
                                                        "value": "PF: Clan CL0206: TRB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0207: Rhomboid-like",
                                                        "value": "PF: Clan CL0207: Rhomboid-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0208: UBC",
                                                        "value": "PF: Clan CL0208: UBC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0209: Bet_V_1_like",
                                                        "value": "PF: Clan CL0209: Bet_V_1_like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0210: HNOX-like",
                                                        "value": "PF: Clan CL0210: HNOX-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0212: SNARE",
                                                        "value": "PF: Clan CL0212: SNARE"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0213: ShK-like",
                                                        "value": "PF: Clan CL0213: ShK-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0214: UBA",
                                                        "value": "PF: Clan CL0214: UBA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0217: Rotavirus_VP7",
                                                        "value": "PF: Clan CL0217: Rotavirus_VP7"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0218: ox_reductase_C",
                                                        "value": "PF: Clan CL0218: ox_reductase_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0219: RNase_H",
                                                        "value": "PF: Clan CL0219: RNase_H"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0220: EF_hand",
                                                        "value": "PF: Clan CL0220: EF_hand"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0221: RRM",
                                                        "value": "PF: Clan CL0221: RRM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0222: MviN_MATE",
                                                        "value": "PF: Clan CL0222: MviN_MATE"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0223: MACRO",
                                                        "value": "PF: Clan CL0223: MACRO"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0224: DHQS",
                                                        "value": "PF: Clan CL0224: DHQS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0225: FtsL",
                                                        "value": "PF: Clan CL0225: FtsL"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0226: M6PR",
                                                        "value": "PF: Clan CL0226: M6PR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0227: Enolase_N",
                                                        "value": "PF: Clan CL0227: Enolase_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0228: Acyltransferase",
                                                        "value": "PF: Clan CL0228: Acyltransferase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0229: RING",
                                                        "value": "PF: Clan CL0229: RING"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0230: HO",
                                                        "value": "PF: Clan CL0230: HO"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0231: MazG",
                                                        "value": "PF: Clan CL0231: MazG"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0232: NifU",
                                                        "value": "PF: Clan CL0232: NifU"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0233: SufE_NifU",
                                                        "value": "PF: Clan CL0233: SufE_NifU"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0234: CTPT",
                                                        "value": "PF: Clan CL0234: CTPT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0235: PspA",
                                                        "value": "PF: Clan CL0235: PspA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0236: PDDEXK",
                                                        "value": "PF: Clan CL0236: PDDEXK"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0237: HD_PDEase",
                                                        "value": "PF: Clan CL0237: HD_PDEase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0238: PP2C",
                                                        "value": "PF: Clan CL0238: PP2C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0239: Insulin",
                                                        "value": "PF: Clan CL0239: Insulin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0240: PFK",
                                                        "value": "PF: Clan CL0240: PFK"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0241: ABC_membrane",
                                                        "value": "PF: Clan CL0241: ABC_membrane"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0242: DNA_primase_lrg",
                                                        "value": "PF: Clan CL0242: DNA_primase_lrg"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0243: AEP",
                                                        "value": "PF: Clan CL0243: AEP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0244: PGBD",
                                                        "value": "PF: Clan CL0244: PGBD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0245: EDD",
                                                        "value": "PF: Clan CL0245: EDD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0246: ISOCOT_Fold",
                                                        "value": "PF: Clan CL0246: ISOCOT_Fold"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0247: 2H",
                                                        "value": "PF: Clan CL0247: 2H"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0248: ParBc",
                                                        "value": "PF: Clan CL0248: ParBc"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0249: Phage_tail_L",
                                                        "value": "PF: Clan CL0249: Phage_tail_L"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0250: GAD",
                                                        "value": "PF: Clan CL0250: GAD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0251: MORN",
                                                        "value": "PF: Clan CL0251: MORN"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0252: NfeD-like",
                                                        "value": "PF: Clan CL0252: NfeD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0254: THDP-binding",
                                                        "value": "PF: Clan CL0254: THDP-binding"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0255: ATP_synthase",
                                                        "value": "PF: Clan CL0255: ATP_synthase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0256: Enolase_TIM",
                                                        "value": "PF: Clan CL0256: Enolase_TIM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0257: Acetyltrans",
                                                        "value": "PF: Clan CL0257: Acetyltrans"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0258: DALR",
                                                        "value": "PF: Clan CL0258: DALR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0259: OstA",
                                                        "value": "PF: Clan CL0259: OstA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0260: NTP_transf",
                                                        "value": "PF: Clan CL0260: NTP_transf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0261: NUDIX",
                                                        "value": "PF: Clan CL0261: NUDIX"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0262: Trigger_C",
                                                        "value": "PF: Clan CL0262: Trigger_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0263: His-Me_finger",
                                                        "value": "PF: Clan CL0263: His-Me_finger"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0264: SGNH_hydrolase",
                                                        "value": "PF: Clan CL0264: SGNH_hydrolase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0265: HIT",
                                                        "value": "PF: Clan CL0265: HIT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0266: PH",
                                                        "value": "PF: Clan CL0266: PH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0267: S11_L18p",
                                                        "value": "PF: Clan CL0267: S11_L18p"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0268: Pec_lyase-like",
                                                        "value": "PF: Clan CL0268: Pec_lyase-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0269: Maf",
                                                        "value": "PF: Clan CL0269: Maf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0270: Iso_DH",
                                                        "value": "PF: Clan CL0270: Iso_DH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0271: F-box",
                                                        "value": "PF: Clan CL0271: F-box"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0272: RGS",
                                                        "value": "PF: Clan CL0272: RGS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0273: CYTH",
                                                        "value": "PF: Clan CL0273: CYTH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0274: WRKY-GCM1",
                                                        "value": "PF: Clan CL0274: WRKY-GCM1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0275: HAS-barrel",
                                                        "value": "PF: Clan CL0275: HAS-barrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0276: Nucleot_cyclase",
                                                        "value": "PF: Clan CL0276: Nucleot_cyclase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0277: FAD-oxidase_C",
                                                        "value": "PF: Clan CL0277: FAD-oxidase_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0278: AIG2",
                                                        "value": "PF: Clan CL0278: AIG2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0279: GatB_YqeY",
                                                        "value": "PF: Clan CL0279: GatB_YqeY"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0280: PIN",
                                                        "value": "PF: Clan CL0280: PIN"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0281: CCT",
                                                        "value": "PF: Clan CL0281: CCT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0282: Serum_albumin",
                                                        "value": "PF: Clan CL0282: Serum_albumin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0283: LigB",
                                                        "value": "PF: Clan CL0283: LigB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0284: Allatostatin",
                                                        "value": "PF: Clan CL0284: Allatostatin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0285: YycI_YycH",
                                                        "value": "PF: Clan CL0285: YycI_YycH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0286: GCS",
                                                        "value": "PF: Clan CL0286: GCS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0287: Transthyretin",
                                                        "value": "PF: Clan CL0287: Transthyretin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0288: DAP_epimerase",
                                                        "value": "PF: Clan CL0288: DAP_epimerase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0289: FBD",
                                                        "value": "PF: Clan CL0289: FBD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0290: EPT_RTPC",
                                                        "value": "PF: Clan CL0290: EPT_RTPC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0291: KNTase_C",
                                                        "value": "PF: Clan CL0291: KNTase_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0292: LysE",
                                                        "value": "PF: Clan CL0292: LysE"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0293: CDC",
                                                        "value": "PF: Clan CL0293: CDC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0294: Sec10",
                                                        "value": "PF: Clan CL0294: Sec10"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0295: Vps51",
                                                        "value": "PF: Clan CL0295: Vps51"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0296: GroES",
                                                        "value": "PF: Clan CL0296: GroES"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0297: PhoU",
                                                        "value": "PF: Clan CL0297: PhoU"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0298: tRNA_bind_arm",
                                                        "value": "PF: Clan CL0298: tRNA_bind_arm"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0299: Peptidase_SF",
                                                        "value": "PF: Clan CL0299: Peptidase_SF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0300: TAT",
                                                        "value": "PF: Clan CL0300: TAT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0301: PA14",
                                                        "value": "PF: Clan CL0301: PA14"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0302: Arginase",
                                                        "value": "PF: Clan CL0302: Arginase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0303: H2TH",
                                                        "value": "PF: Clan CL0303: H2TH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0304: CheY",
                                                        "value": "PF: Clan CL0304: CheY"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0305: PTH2",
                                                        "value": "PF: Clan CL0305: PTH2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0306: HeH",
                                                        "value": "PF: Clan CL0306: HeH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0307: FUSC",
                                                        "value": "PF: Clan CL0307: FUSC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0308: DMSO_reductase",
                                                        "value": "PF: Clan CL0308: DMSO_reductase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0310: DinB",
                                                        "value": "PF: Clan CL0310: DinB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0311: SCP2",
                                                        "value": "PF: Clan CL0311: SCP2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0312: HemS_ChuX",
                                                        "value": "PF: Clan CL0312: HemS_ChuX"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0314: PP-binding",
                                                        "value": "PF: Clan CL0314: PP-binding"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0315: Gx_transp",
                                                        "value": "PF: Clan CL0315: Gx_transp"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0316: Acyl_transf_3",
                                                        "value": "PF: Clan CL0316: Acyl_transf_3"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0317: Multiheme_cytos",
                                                        "value": "PF: Clan CL0317: Multiheme_cytos"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0318: Cytochrome-c",
                                                        "value": "PF: Clan CL0318: Cytochrome-c"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0319: SHS2",
                                                        "value": "PF: Clan CL0319: SHS2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0320: PepSY",
                                                        "value": "PF: Clan CL0320: PepSY"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0321: PLAT",
                                                        "value": "PF: Clan CL0321: PLAT"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0322: RND_permease",
                                                        "value": "PF: Clan CL0322: RND_permease"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0323: Patatin",
                                                        "value": "PF: Clan CL0323: Patatin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0324: Homing_endonuc",
                                                        "value": "PF: Clan CL0324: Homing_endonuc"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0325: Form_Glyc_dh",
                                                        "value": "PF: Clan CL0325: Form_Glyc_dh"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0326: Reo_sigma",
                                                        "value": "PF: Clan CL0326: Reo_sigma"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0327: Pilus",
                                                        "value": "PF: Clan CL0327: Pilus"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0328: 2heme_cytochrom",
                                                        "value": "PF: Clan CL0328: 2heme_cytochrom"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0329: S5",
                                                        "value": "PF: Clan CL0329: S5"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0330: AVL9",
                                                        "value": "PF: Clan CL0330: AVL9"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0331: EpsM",
                                                        "value": "PF: Clan CL0331: EpsM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0332: AcetylDC-like",
                                                        "value": "PF: Clan CL0332: AcetylDC-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0333: gCrystallin",
                                                        "value": "PF: Clan CL0333: gCrystallin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0334: THBO-biosyn",
                                                        "value": "PF: Clan CL0334: THBO-biosyn"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0335: FumRed-TM",
                                                        "value": "PF: Clan CL0335: FumRed-TM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0336: FMN-binding",
                                                        "value": "PF: Clan CL0336: FMN-binding"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0337: RF",
                                                        "value": "PF: Clan CL0337: RF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0339: PFL-like",
                                                        "value": "PF: Clan CL0339: PFL-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0340: PTase-anion_tr",
                                                        "value": "PF: Clan CL0340: PTase-anion_tr"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0341: LDH_C",
                                                        "value": "PF: Clan CL0341: LDH_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0342: TolB_N",
                                                        "value": "PF: Clan CL0342: TolB_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0343: MHC",
                                                        "value": "PF: Clan CL0343: MHC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0344: 4Fe-4S",
                                                        "value": "PF: Clan CL0344: 4Fe-4S"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0345: Aerolisin_ETX",
                                                        "value": "PF: Clan CL0345: Aerolisin_ETX"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0346: Ribo_L29",
                                                        "value": "PF: Clan CL0346: Ribo_L29"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0347: Tetraspannin",
                                                        "value": "PF: Clan CL0347: Tetraspannin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0348: Phage_tail",
                                                        "value": "PF: Clan CL0348: Phage_tail"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0349: DprA",
                                                        "value": "PF: Clan CL0349: DprA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0350: PRC-barrel",
                                                        "value": "PF: Clan CL0350: PRC-barrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0351: CHCH",
                                                        "value": "PF: Clan CL0351: CHCH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0352: EsxAB",
                                                        "value": "PF: Clan CL0352: EsxAB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0353: TIMP-like",
                                                        "value": "PF: Clan CL0353: TIMP-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0354: bBprotInhib",
                                                        "value": "PF: Clan CL0354: bBprotInhib"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0355: CheC-like",
                                                        "value": "PF: Clan CL0355: CheC-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0356: AMP_N-like",
                                                        "value": "PF: Clan CL0356: AMP_N-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0357: SMAD-FHA",
                                                        "value": "PF: Clan CL0357: SMAD-FHA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0359: Intron-mat_II",
                                                        "value": "PF: Clan CL0359: Intron-mat_II"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0360: MTH1187-YkoF",
                                                        "value": "PF: Clan CL0360: MTH1187-YkoF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0361: C2H2-zf",
                                                        "value": "PF: Clan CL0361: C2H2-zf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0362: RAMPS-Cas5-like",
                                                        "value": "PF: Clan CL0362: RAMPS-Cas5-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0363: H-int",
                                                        "value": "PF: Clan CL0363: H-int"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0364: Leu-IlvD",
                                                        "value": "PF: Clan CL0364: Leu-IlvD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0365: MurF-HprK_N",
                                                        "value": "PF: Clan CL0365: MurF-HprK_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0366: JAB",
                                                        "value": "PF: Clan CL0366: JAB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0367: CI-2",
                                                        "value": "PF: Clan CL0367: CI-2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0368: PhosC-NucP1",
                                                        "value": "PF: Clan CL0368: PhosC-NucP1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0369: GHD",
                                                        "value": "PF: Clan CL0369: GHD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0370: Uteroglobin",
                                                        "value": "PF: Clan CL0370: Uteroglobin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0371: Inovirus-Coat",
                                                        "value": "PF: Clan CL0371: Inovirus-Coat"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0372: Hy-ly_N",
                                                        "value": "PF: Clan CL0372: Hy-ly_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0373: Phage-coat",
                                                        "value": "PF: Clan CL0373: Phage-coat"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0374: PEP-carboxyk",
                                                        "value": "PF: Clan CL0374: PEP-carboxyk"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0375: Transporter",
                                                        "value": "PF: Clan CL0375: Transporter"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0376: Oxa1",
                                                        "value": "PF: Clan CL0376: Oxa1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0377: FAH",
                                                        "value": "PF: Clan CL0377: FAH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0378: ANL",
                                                        "value": "PF: Clan CL0378: ANL"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0379: PgaPase",
                                                        "value": "PF: Clan CL0379: PgaPase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0380: IDO-like",
                                                        "value": "PF: Clan CL0380: IDO-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0381: Metallo-HOrase",
                                                        "value": "PF: Clan CL0381: Metallo-HOrase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0382: DNA-mend",
                                                        "value": "PF: Clan CL0382: DNA-mend"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0383: PheT-TilS",
                                                        "value": "PF: Clan CL0383: PheT-TilS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0384: PLC",
                                                        "value": "PF: Clan CL0384: PLC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0385: Hydrophilin",
                                                        "value": "PF: Clan CL0385: Hydrophilin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0386: Ant-toxin_C",
                                                        "value": "PF: Clan CL0386: Ant-toxin_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0387: DHFred",
                                                        "value": "PF: Clan CL0387: DHFred"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0388: FadR-C",
                                                        "value": "PF: Clan CL0388: FadR-C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0389: TRAF",
                                                        "value": "PF: Clan CL0389: TRAF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0390: zf-FYVE-PHD",
                                                        "value": "PF: Clan CL0390: zf-FYVE-PHD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0391: CAP_C-like",
                                                        "value": "PF: Clan CL0391: CAP_C-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0392: Chaperone-J",
                                                        "value": "PF: Clan CL0392: Chaperone-J"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0393: FucI-AraA_C",
                                                        "value": "PF: Clan CL0393: FucI-AraA_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0394: DsrEFH-like",
                                                        "value": "PF: Clan CL0394: DsrEFH-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0395: Tubby_C",
                                                        "value": "PF: Clan CL0395: Tubby_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0396: Marvel-like",
                                                        "value": "PF: Clan CL0396: Marvel-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0397: TusA-like",
                                                        "value": "PF: Clan CL0397: TusA-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0398: RMMBL_DRMBL",
                                                        "value": "PF: Clan CL0398: RMMBL_DRMBL"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0399: Asp-glut_race",
                                                        "value": "PF: Clan CL0399: Asp-glut_race"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0400: GG-leader",
                                                        "value": "PF: Clan CL0400: GG-leader"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0401: AsmA-like",
                                                        "value": "PF: Clan CL0401: AsmA-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0402: Cdc48_2-like",
                                                        "value": "PF: Clan CL0402: Cdc48_2-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0403: ADC-like",
                                                        "value": "PF: Clan CL0403: ADC-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0404: BPD_transp_1",
                                                        "value": "PF: Clan CL0404: BPD_transp_1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0405: DNA_b-psBarrel",
                                                        "value": "PF: Clan CL0405: DNA_b-psBarrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0406: YjbJ-CsbD-like",
                                                        "value": "PF: Clan CL0406: YjbJ-CsbD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0407: TBP-like",
                                                        "value": "PF: Clan CL0407: TBP-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0408: PUP",
                                                        "value": "PF: Clan CL0408: PUP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0409: GAP",
                                                        "value": "PF: Clan CL0409: GAP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0410: LEF-8-like",
                                                        "value": "PF: Clan CL0410: LEF-8-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0411: Vir",
                                                        "value": "PF: Clan CL0411: Vir"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0412: Frag1-like",
                                                        "value": "PF: Clan CL0412: Frag1-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0413: Toprim-like",
                                                        "value": "PF: Clan CL0413: Toprim-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0414: TerB",
                                                        "value": "PF: Clan CL0414: TerB"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0416: Anoctamin-like",
                                                        "value": "PF: Clan CL0416: Anoctamin-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0417: BIR-like",
                                                        "value": "PF: Clan CL0417: BIR-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0418: GIY-YIG",
                                                        "value": "PF: Clan CL0418: GIY-YIG"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0419: T3SS-Chaperone",
                                                        "value": "PF: Clan CL0419: T3SS-Chaperone"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0420: GlpM-like",
                                                        "value": "PF: Clan CL0420: GlpM-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0421: LppaM",
                                                        "value": "PF: Clan CL0421: LppaM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0422: Fibrinogen_C",
                                                        "value": "PF: Clan CL0422: Fibrinogen_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0423: AhpD-like",
                                                        "value": "PF: Clan CL0423: AhpD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0424: T3SS-hook",
                                                        "value": "PF: Clan CL0424: T3SS-hook"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0425: ComplexI-N",
                                                        "value": "PF: Clan CL0425: ComplexI-N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0426: HRDC-like",
                                                        "value": "PF: Clan CL0426: HRDC-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0428: TolA-TonB-Cterm",
                                                        "value": "PF: Clan CL0428: TolA-TonB-Cterm"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0429: UcrQ-like",
                                                        "value": "PF: Clan CL0429: UcrQ-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0430: CopD_like",
                                                        "value": "PF: Clan CL0430: CopD_like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0431: PF",
                                                        "value": "PF: Clan CL0431: PF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0433: SPFH",
                                                        "value": "PF: Clan CL0433: SPFH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0434: Sialidase",
                                                        "value": "PF: Clan CL0434: Sialidase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0435: NPR",
                                                        "value": "PF: Clan CL0435: NPR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0436: FliG",
                                                        "value": "PF: Clan CL0436: FliG"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0437: EF-G_C",
                                                        "value": "PF: Clan CL0437: EF-G_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0438: TTHA10132-281",
                                                        "value": "PF: Clan CL0438: TTHA10132-281"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0439: NusG-like",
                                                        "value": "PF: Clan CL0439: NusG-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0441: AlbA",
                                                        "value": "PF: Clan CL0441: AlbA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0442: Tubulin_C",
                                                        "value": "PF: Clan CL0442: Tubulin_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0444: YNI",
                                                        "value": "PF: Clan CL0444: YNI"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0445: SNARE-fusion",
                                                        "value": "PF: Clan CL0445: SNARE-fusion"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0446: Bacteriocin_TLN",
                                                        "value": "PF: Clan CL0446: Bacteriocin_TLN"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0447: Hypoth_1",
                                                        "value": "PF: Clan CL0447: Hypoth_1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0448: Cargo_bd_muHD",
                                                        "value": "PF: Clan CL0448: Cargo_bd_muHD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0449: G-PATCH",
                                                        "value": "PF: Clan CL0449: G-PATCH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0450: FimbA",
                                                        "value": "PF: Clan CL0450: FimbA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0451: FnI-like",
                                                        "value": "PF: Clan CL0451: FnI-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0452: Tropomyosin-lke",
                                                        "value": "PF: Clan CL0452: Tropomyosin-lke"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0453: Apoptosis-Inhib",
                                                        "value": "PF: Clan CL0453: Apoptosis-Inhib"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0454: Protease_inhib",
                                                        "value": "PF: Clan CL0454: Protease_inhib"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0455: MIM-OM_import",
                                                        "value": "PF: Clan CL0455: MIM-OM_import"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0456: Golgi_traff",
                                                        "value": "PF: Clan CL0456: Golgi_traff"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0457: 4HB_MCP",
                                                        "value": "PF: Clan CL0457: 4HB_MCP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0458: IIaaRS-ABD",
                                                        "value": "PF: Clan CL0458: IIaaRS-ABD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0459: BRCT-like",
                                                        "value": "PF: Clan CL0459: BRCT-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0461: Metallothionein",
                                                        "value": "PF: Clan CL0461: Metallothionein"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0462: TPA-repeat",
                                                        "value": "PF: Clan CL0462: TPA-repeat"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0464: 5_3_exonuc_C",
                                                        "value": "PF: Clan CL0464: 5_3_exonuc_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0465: Ank",
                                                        "value": "PF: Clan CL0465: Ank"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0466: PDZ-like",
                                                        "value": "PF: Clan CL0466: PDZ-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0468: Malectin-like",
                                                        "value": "PF: Clan CL0468: Malectin-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0469: l-integrase_N",
                                                        "value": "PF: Clan CL0469: l-integrase_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0470: UMP_1",
                                                        "value": "PF: Clan CL0470: UMP_1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0471: DUF362",
                                                        "value": "PF: Clan CL0471: DUF362"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0472: Peptidase_U",
                                                        "value": "PF: Clan CL0472: Peptidase_U"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0474: SICA_like",
                                                        "value": "PF: Clan CL0474: SICA_like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0475: Cyclophil-like",
                                                        "value": "PF: Clan CL0475: Cyclophil-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0476: tRNA-IECD_N",
                                                        "value": "PF: Clan CL0476: tRNA-IECD_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0477: TRD",
                                                        "value": "PF: Clan CL0477: TRD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0478: ATPase_I_AtpR",
                                                        "value": "PF: Clan CL0478: ATPase_I_AtpR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0479: PLD",
                                                        "value": "PF: Clan CL0479: PLD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0481: HUH",
                                                        "value": "PF: Clan CL0481: HUH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0482: Prolamin",
                                                        "value": "PF: Clan CL0482: Prolamin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0483: PreATP-grasp",
                                                        "value": "PF: Clan CL0483: PreATP-grasp"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0484: Peroxisome",
                                                        "value": "PF: Clan CL0484: Peroxisome"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0486: Fer2",
                                                        "value": "PF: Clan CL0486: Fer2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0487: FKBP",
                                                        "value": "PF: Clan CL0487: FKBP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0488: FixH-like",
                                                        "value": "PF: Clan CL0488: FixH-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0489: AFP_III-like",
                                                        "value": "PF: Clan CL0489: AFP_III-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0490: PepSY_TM-like",
                                                        "value": "PF: Clan CL0490: PepSY_TM-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0491: LYR-like",
                                                        "value": "PF: Clan CL0491: LYR-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0492: S4",
                                                        "value": "PF: Clan CL0492: S4"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0493: PTS_EIIC",
                                                        "value": "PF: Clan CL0493: PTS_EIIC"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0494: DnaA_N",
                                                        "value": "PF: Clan CL0494: DnaA_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0496: Tad-like",
                                                        "value": "PF: Clan CL0496: Tad-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0497: GST_C",
                                                        "value": "PF: Clan CL0497: GST_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0498: Nribosyltransf",
                                                        "value": "PF: Clan CL0498: Nribosyltransf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0499: O-antige_ligase",
                                                        "value": "PF: Clan CL0499: O-antige_ligase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0500: Glycine-zipper",
                                                        "value": "PF: Clan CL0500: Glycine-zipper"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0502: STAS",
                                                        "value": "PF: Clan CL0502: STAS"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0503: SOR",
                                                        "value": "PF: Clan CL0503: SOR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0504: Phage_barrel",
                                                        "value": "PF: Clan CL0504: Phage_barrel"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0505: Pentapeptide",
                                                        "value": "PF: Clan CL0505: Pentapeptide"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0506: Succ_CoA_synth",
                                                        "value": "PF: Clan CL0506: Succ_CoA_synth"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0507: Fungal_trans",
                                                        "value": "PF: Clan CL0507: Fungal_trans"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0508: YkuD",
                                                        "value": "PF: Clan CL0508: YkuD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0509: RBP11-like",
                                                        "value": "PF: Clan CL0509: RBP11-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0511: Retroviral_zf",
                                                        "value": "PF: Clan CL0511: Retroviral_zf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0512: CRAL_TRIO",
                                                        "value": "PF: Clan CL0512: CRAL_TRIO"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0513: LCCL-domain",
                                                        "value": "PF: Clan CL0513: LCCL-domain"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0515: LTXXQ-like",
                                                        "value": "PF: Clan CL0515: LTXXQ-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0516: ISP-domain",
                                                        "value": "PF: Clan CL0516: ISP-domain"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0517: MBOAT-like",
                                                        "value": "PF: Clan CL0517: MBOAT-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0520: Keratin_assoc",
                                                        "value": "PF: Clan CL0520: Keratin_assoc"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0521: GOLD-like",
                                                        "value": "PF: Clan CL0521: GOLD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0522: YbjQ-like",
                                                        "value": "PF: Clan CL0522: YbjQ-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0523: GAG-polyprotein",
                                                        "value": "PF: Clan CL0523: GAG-polyprotein"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0524: MPT63-MPB63",
                                                        "value": "PF: Clan CL0524: MPT63-MPB63"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0525: pap2",
                                                        "value": "PF: Clan CL0525: pap2"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0526: SUKH",
                                                        "value": "PF: Clan CL0526: SUKH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0527: Sm-like",
                                                        "value": "PF: Clan CL0527: Sm-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0528: DUF1214",
                                                        "value": "PF: Clan CL0528: DUF1214"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0529: FMN-dep-NRtase",
                                                        "value": "PF: Clan CL0529: FMN-dep-NRtase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0530: DNase_I-like",
                                                        "value": "PF: Clan CL0530: DNase_I-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0531: AMP-binding_C",
                                                        "value": "PF: Clan CL0531: AMP-binding_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0532: LIG",
                                                        "value": "PF: Clan CL0532: LIG"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0533: PRTase-like",
                                                        "value": "PF: Clan CL0533: PRTase-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0534: YjgF-like",
                                                        "value": "PF: Clan CL0534: YjgF-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0535: CBM",
                                                        "value": "PF: Clan CL0535: CBM"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0536: HEXAPEP",
                                                        "value": "PF: Clan CL0536: HEXAPEP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0537: CCCH_zf",
                                                        "value": "PF: Clan CL0537: CCCH_zf"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0538: DRMIP-like",
                                                        "value": "PF: Clan CL0538: DRMIP-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0539: RNase_III",
                                                        "value": "PF: Clan CL0539: RNase_III"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0540: GCP",
                                                        "value": "PF: Clan CL0540: GCP"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0541: SH2-like",
                                                        "value": "PF: Clan CL0541: SH2-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0542: RAS_GEF_N",
                                                        "value": "PF: Clan CL0542: RAS_GEF_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0543: Viral_gly_cn_dm",
                                                        "value": "PF: Clan CL0543: Viral_gly_cn_dm"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0544: AcylCoA_ox_dh_N",
                                                        "value": "PF: Clan CL0544: AcylCoA_ox_dh_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0545: APCOP-app_sub",
                                                        "value": "PF: Clan CL0545: APCOP-app_sub"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0546: Hexosaminidase",
                                                        "value": "PF: Clan CL0546: Hexosaminidase"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0547: GF_recep_C-rich",
                                                        "value": "PF: Clan CL0547: GF_recep_C-rich"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0548: IHF-likeDNA-bdg",
                                                        "value": "PF: Clan CL0548: IHF-likeDNA-bdg"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0550: SRCR",
                                                        "value": "PF: Clan CL0550: SRCR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0551: BCLiA",
                                                        "value": "PF: Clan CL0551: BCLiA"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0552: Hect",
                                                        "value": "PF: Clan CL0552: Hect"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0553: HBMR",
                                                        "value": "PF: Clan CL0553: HBMR"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0556: PapD-like",
                                                        "value": "PF: Clan CL0556: PapD-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0557: Calmodulin-bind",
                                                        "value": "PF: Clan CL0557: Calmodulin-bind"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0559: CBD9-like",
                                                        "value": "PF: Clan CL0559: CBD9-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0560: Chalcone-like",
                                                        "value": "PF: Clan CL0560: Chalcone-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0561: LisH",
                                                        "value": "PF: Clan CL0561: LisH"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0562: Holin-V",
                                                        "value": "PF: Clan CL0562: Holin-V"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0563: Holin-II",
                                                        "value": "PF: Clan CL0563: Holin-II"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0564: Holin-III",
                                                        "value": "PF: Clan CL0564: Holin-III"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0565: GHKL",
                                                        "value": "PF: Clan CL0565: GHKL"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0566: Tubulin",
                                                        "value": "PF: Clan CL0566: Tubulin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0567: Phage_TACs",
                                                        "value": "PF: Clan CL0567: Phage_TACs"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0568: Man_lectin",
                                                        "value": "PF: Clan CL0568: Man_lectin"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0569: Phage_TTPs",
                                                        "value": "PF: Clan CL0569: Phage_TTPs"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0570: PPP-I",
                                                        "value": "PF: Clan CL0570: PPP-I"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0571: 30K_movement",
                                                        "value": "PF: Clan CL0571: 30K_movement"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0572: TIKI",
                                                        "value": "PF: Clan CL0572: TIKI"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0573: KA1-like",
                                                        "value": "PF: Clan CL0573: KA1-like"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0575: EFTPs",
                                                        "value": "PF: Clan CL0575: EFTPs"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0576: STARBD",
                                                        "value": "PF: Clan CL0576: STARBD"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0577: Paramyxovirin_C",
                                                        "value": "PF: Clan CL0577: Paramyxovirin_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0578: AbiEI",
                                                        "value": "PF: Clan CL0578: AbiEI"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0579: Alg_lyase_Hep_N",
                                                        "value": "PF: Clan CL0579: Alg_lyase_Hep_N"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0580: YqgF",
                                                        "value": "PF: Clan CL0580: YqgF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0582: TrkA_C",
                                                        "value": "PF: Clan CL0582: TrkA_C"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0583: Baseplate_VgrG",
                                                        "value": "PF: Clan CL0583: Baseplate_VgrG"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0584: FF",
                                                        "value": "PF: Clan CL0584: FF"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0585: Nucleoporin_A",
                                                        "value": "PF: Clan CL0585: Nucleoporin_A"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0586: CTC1",
                                                        "value": "PF: Clan CL0586: CTC1"
                                                    },
                                                    {
                                                        "display": "PFAM: Clan CL0587: STAND_N",
                                                        "value": "PF: Clan CL0587: STAND_N"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "extra_target_fam_groups_PFAM",
                                            "optional": 1,
                                            "short_hint": "Domain Families from particular namespace groups to target in the analysis",
                                            "ui_class": "parameter",
                                            "ui_name": "Custom Domain Groups (PFAM)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Domain Families from particular namespace groups to target in the analysis",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "TIGR: role:11010: Aromatic amino acid family ",
                                                        "value": "TIGR: role:11010: Aromatic amino acid family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11020: Aspartate family ",
                                                        "value": "TIGR: role:11020: Aspartate family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11030: Glutamate family ",
                                                        "value": "TIGR: role:11030: Glutamate family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11040: Pyruvate family ",
                                                        "value": "TIGR: role:11040: Pyruvate family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11050: Serine family ",
                                                        "value": "TIGR: role:11050: Serine family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11060: Histidine family ",
                                                        "value": "TIGR: role:11060: Histidine family "
                                                    },
                                                    {
                                                        "display": "TIGR: role:11070: Other ",
                                                        "value": "TIGR: role:11070: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12010: 2'-Deoxyribonucleotide metabolism ",
                                                        "value": "TIGR: role:12010: 2'-Deoxyribonucleotide metabolism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12020: Nucleotide and nucleoside interconversions ",
                                                        "value": "TIGR: role:12020: Nucleotide and nucleoside interconversions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12030: Purine ribonucleotide biosynthesis ",
                                                        "value": "TIGR: role:12030: Purine ribonucleotide biosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12040: Pyrimidine ribonucleotide biosynthesis ",
                                                        "value": "TIGR: role:12040: Pyrimidine ribonucleotide biosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12050: Salvage of nucleosides and nucleotides ",
                                                        "value": "TIGR: role:12050: Salvage of nucleosides and nucleotides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12050: Salvage of nucleosides and nucleotides ",
                                                        "value": "TIGR: role:12050: Salvage of nucleosides and nucleotides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12060: Sugar-nucleotide biosynthesis and conversions ",
                                                        "value": "TIGR: role:12060: Sugar-nucleotide biosynthesis and conversions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:12070: Other ",
                                                        "value": "TIGR: role:12070: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13010: Biosynthesis ",
                                                        "value": "TIGR: role:13010: Biosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13010: Biosynthesis ",
                                                        "value": "TIGR: role:13010: Biosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13020: Degradation ",
                                                        "value": "TIGR: role:13020: Degradation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13020: Degradation ",
                                                        "value": "TIGR: role:13020: Degradation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13030: Other ",
                                                        "value": "TIGR: role:13030: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:13030: Other ",
                                                        "value": "TIGR: role:13030: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14010: Biotin ",
                                                        "value": "TIGR: role:14010: Biotin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14015: Folic acid ",
                                                        "value": "TIGR: role:14015: Folic acid "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14020: Heme, porphyrin, and cobalamin ",
                                                        "value": "TIGR: role:14020: Heme, porphyrin, and cobalamin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14020: Heme, porphyrin, and cobalamin ",
                                                        "value": "TIGR: role:14020: Heme, porphyrin, and cobalamin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14020: Heme, porphyrin, and cobalamin ",
                                                        "value": "TIGR: role:14020: Heme, porphyrin, and cobalamin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14025: Lipoate ",
                                                        "value": "TIGR: role:14025: Lipoate "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14030: Menaquinone and ubiquinone ",
                                                        "value": "TIGR: role:14030: Menaquinone and ubiquinone "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14030: Menaquinone and ubiquinone ",
                                                        "value": "TIGR: role:14030: Menaquinone and ubiquinone "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14035: Molybdopterin ",
                                                        "value": "TIGR: role:14035: Molybdopterin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14040: Pantothenate and coenzyme A ",
                                                        "value": "TIGR: role:14040: Pantothenate and coenzyme A "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14040: Pantothenate and coenzyme A ",
                                                        "value": "TIGR: role:14040: Pantothenate and coenzyme A "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14045: Pyridoxin ",
                                                        "value": "TIGR: role:14045: Pyridoxin "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14050: Riboflavin, FMN, and FAD ",
                                                        "value": "TIGR: role:14050: Riboflavin, FMN, and FAD "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14050: Riboflavin, FMN, and FAD ",
                                                        "value": "TIGR: role:14050: Riboflavin, FMN, and FAD "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14050: Riboflavin, FMN, and FAD ",
                                                        "value": "TIGR: role:14050: Riboflavin, FMN, and FAD "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14055: Glutathione ",
                                                        "value": "TIGR: role:14055: Glutathione "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14060: Thiamine ",
                                                        "value": "TIGR: role:14060: Thiamine "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14065: Pyridine nucleotides ",
                                                        "value": "TIGR: role:14065: Pyridine nucleotides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14065: Pyridine nucleotides ",
                                                        "value": "TIGR: role:14065: Pyridine nucleotides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14070: Chlorophyll ",
                                                        "value": "TIGR: role:14070: Chlorophyll "
                                                    },
                                                    {
                                                        "display": "TIGR: role:14075: Siderophores ",
                                                        "value": "TIGR: role:14075: Siderophores "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15010: Amino sugars ",
                                                        "value": "TIGR: role:15010: Amino sugars "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15015: One-carbon metabolism ",
                                                        "value": "TIGR: role:15015: One-carbon metabolism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15020: Phosphorus compounds ",
                                                        "value": "TIGR: role:15020: Phosphorus compounds "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15030: Polyamine biosynthesis ",
                                                        "value": "TIGR: role:15030: Polyamine biosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15040: Sulfur metabolism ",
                                                        "value": "TIGR: role:15040: Sulfur metabolism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15050: Nitrogen fixation ",
                                                        "value": "TIGR: role:15050: Nitrogen fixation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15060: Nitrogen metabolism ",
                                                        "value": "TIGR: role:15060: Nitrogen metabolism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:15070: Other ",
                                                        "value": "TIGR: role:15070: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17010: Aerobic ",
                                                        "value": "TIGR: role:17010: Aerobic "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17015: Amino acids and amines ",
                                                        "value": "TIGR: role:17015: Amino acids and amines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17015: Amino acids and amines ",
                                                        "value": "TIGR: role:17015: Amino acids and amines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17020: Anaerobic ",
                                                        "value": "TIGR: role:17020: Anaerobic "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17025: ATP-proton motive force interconversion ",
                                                        "value": "TIGR: role:17025: ATP-proton motive force interconversion "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17035: Entner-Doudoroff ",
                                                        "value": "TIGR: role:17035: Entner-Doudoroff "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17040: Fermentation ",
                                                        "value": "TIGR: role:17040: Fermentation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17049: Glycolysis/gluconeogenesis ",
                                                        "value": "TIGR: role:17049: Glycolysis/gluconeogenesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17049: Glycolysis/gluconeogenesis ",
                                                        "value": "TIGR: role:17049: Glycolysis/gluconeogenesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17050: Pentose phosphate pathway ",
                                                        "value": "TIGR: role:17050: Pentose phosphate pathway "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17055: Pyruvate dehydrogenase ",
                                                        "value": "TIGR: role:17055: Pyruvate dehydrogenase "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17060: Sugars ",
                                                        "value": "TIGR: role:17060: Sugars "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17065: TCA cycle ",
                                                        "value": "TIGR: role:17065: TCA cycle "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17070: Methanogenesis ",
                                                        "value": "TIGR: role:17070: Methanogenesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17075: Biosynthesis and degradation of polysaccharides ",
                                                        "value": "TIGR: role:17075: Biosynthesis and degradation of polysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17075: Biosynthesis and degradation of polysaccharides ",
                                                        "value": "TIGR: role:17075: Biosynthesis and degradation of polysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17076: Photosynthesis ",
                                                        "value": "TIGR: role:17076: Photosynthesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17077: Chemoautotrophy ",
                                                        "value": "TIGR: role:17077: Chemoautotrophy "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17080: Other ",
                                                        "value": "TIGR: role:17080: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17510: Phenylpropanoids/phenolics ",
                                                        "value": "TIGR: role:17510: Phenylpropanoids/phenolics "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17520: Terpenoids ",
                                                        "value": "TIGR: role:17520: Terpenoids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17530: Alkaloids ",
                                                        "value": "TIGR: role:17530: Alkaloids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17540: Phytoalexins ",
                                                        "value": "TIGR: role:17540: Phytoalexins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17550: Non-protein amino acids ",
                                                        "value": "TIGR: role:17550: Non-protein amino acids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17560: Glucosinolates ",
                                                        "value": "TIGR: role:17560: Glucosinolates "
                                                    },
                                                    {
                                                        "display": "TIGR: role:17570: Other ",
                                                        "value": "TIGR: role:17570: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18010: Amino acids, peptides and amines ",
                                                        "value": "TIGR: role:18010: Amino acids, peptides and amines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18010: Amino acids, peptides and amines ",
                                                        "value": "TIGR: role:18010: Amino acids, peptides and amines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18010: Amino acids, peptides and amines ",
                                                        "value": "TIGR: role:18010: Amino acids, peptides and amines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18020: Anions ",
                                                        "value": "TIGR: role:18020: Anions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids ",
                                                        "value": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids ",
                                                        "value": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids ",
                                                        "value": "TIGR: role:18030: Carbohydrates, organic alcohols, and acids "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18040: Cations and iron carrying compounds ",
                                                        "value": "TIGR: role:18040: Cations and iron carrying compounds "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18040: Cations and iron carrying compounds ",
                                                        "value": "TIGR: role:18040: Cations and iron carrying compounds "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18040: Cations and iron carrying compounds ",
                                                        "value": "TIGR: role:18040: Cations and iron carrying compounds "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18050: Nucleosides, purines and pyrimidines ",
                                                        "value": "TIGR: role:18050: Nucleosides, purines and pyrimidines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18050: Nucleosides, purines and pyrimidines ",
                                                        "value": "TIGR: role:18050: Nucleosides, purines and pyrimidines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18050: Nucleosides, purines and pyrimidines ",
                                                        "value": "TIGR: role:18050: Nucleosides, purines and pyrimidines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18060: Porins ",
                                                        "value": "TIGR: role:18060: Porins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18070: Other ",
                                                        "value": "TIGR: role:18070: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18070: Other ",
                                                        "value": "TIGR: role:18070: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18080: Unknown substrate ",
                                                        "value": "TIGR: role:18080: Unknown substrate "
                                                    },
                                                    {
                                                        "display": "TIGR: role:18080: Unknown substrate ",
                                                        "value": "TIGR: role:18080: Unknown substrate "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19010: DNA replication, recombination, and repair ",
                                                        "value": "TIGR: role:19010: DNA replication, recombination, and repair "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19010: DNA replication, recombination, and repair ",
                                                        "value": "TIGR: role:19010: DNA replication, recombination, and repair "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19010: DNA replication, recombination, and repair ",
                                                        "value": "TIGR: role:19010: DNA replication, recombination, and repair "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19020: Restriction/modification ",
                                                        "value": "TIGR: role:19020: Restriction/modification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19020: Restriction/modification ",
                                                        "value": "TIGR: role:19020: Restriction/modification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19030: Degradation of DNA ",
                                                        "value": "TIGR: role:19030: Degradation of DNA "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19040: Chromosome-associated proteins ",
                                                        "value": "TIGR: role:19040: Chromosome-associated proteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19040: Chromosome-associated proteins ",
                                                        "value": "TIGR: role:19040: Chromosome-associated proteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:19050: Other ",
                                                        "value": "TIGR: role:19050: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:20010: Degradation of RNA ",
                                                        "value": "TIGR: role:20010: Degradation of RNA "
                                                    },
                                                    {
                                                        "display": "TIGR: role:20020: DNA-dependent RNA polymerase ",
                                                        "value": "TIGR: role:20020: DNA-dependent RNA polymerase "
                                                    },
                                                    {
                                                        "display": "TIGR: role:20030: Transcription factors ",
                                                        "value": "TIGR: role:20030: Transcription factors "
                                                    },
                                                    {
                                                        "display": "TIGR: role:20040: RNA processing ",
                                                        "value": "TIGR: role:20040: RNA processing "
                                                    },
                                                    {
                                                        "display": "TIGR: role:20050: Other ",
                                                        "value": "TIGR: role:20050: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21010: tRNA aminoacylation ",
                                                        "value": "TIGR: role:21010: tRNA aminoacylation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21020: Nucleoproteins ",
                                                        "value": "TIGR: role:21020: Nucleoproteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21030: Ribosomal proteins: synthesis and modification ",
                                                        "value": "TIGR: role:21030: Ribosomal proteins: synthesis and modification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21040: tRNA and rRNA base modification ",
                                                        "value": "TIGR: role:21040: tRNA and rRNA base modification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21040: tRNA and rRNA base modification ",
                                                        "value": "TIGR: role:21040: tRNA and rRNA base modification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21050: Translation factors ",
                                                        "value": "TIGR: role:21050: Translation factors "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21060: Other ",
                                                        "value": "TIGR: role:21060: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21510: Protein and peptide secretion and trafficking ",
                                                        "value": "TIGR: role:21510: Protein and peptide secretion and trafficking "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21510: Protein and peptide secretion and trafficking ",
                                                        "value": "TIGR: role:21510: Protein and peptide secretion and trafficking "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21520: Protein modification and repair ",
                                                        "value": "TIGR: role:21520: Protein modification and repair "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21530: Protein folding and stabilization ",
                                                        "value": "TIGR: role:21530: Protein folding and stabilization "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21540: Degradation of proteins, peptides, and glycopeptides ",
                                                        "value": "TIGR: role:21540: Degradation of proteins, peptides, and glycopeptides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21540: Degradation of proteins, peptides, and glycopeptides ",
                                                        "value": "TIGR: role:21540: Degradation of proteins, peptides, and glycopeptides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:21550: Other ",
                                                        "value": "TIGR: role:21550: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22010: DNA interactions ",
                                                        "value": "TIGR: role:22010: DNA interactions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22020: RNA interactions ",
                                                        "value": "TIGR: role:22020: RNA interactions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22030: Protein interactions ",
                                                        "value": "TIGR: role:22030: Protein interactions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22040: Small molecule interactions ",
                                                        "value": "TIGR: role:22040: Small molecule interactions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22090: Other ",
                                                        "value": "TIGR: role:22090: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22505: Receptors ",
                                                        "value": "TIGR: role:22505: Receptors "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22510: Kinases ",
                                                        "value": "TIGR: role:22510: Kinases "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22510: Kinases ",
                                                        "value": "TIGR: role:22510: Kinases "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22520: Phosphatases ",
                                                        "value": "TIGR: role:22520: Phosphatases "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22520: Phosphatases ",
                                                        "value": "TIGR: role:22520: Phosphatases "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22530: G-proteins ",
                                                        "value": "TIGR: role:22530: G-proteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22540: Hormones, cytokines ",
                                                        "value": "TIGR: role:22540: Hormones, cytokines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22540: Hormones, cytokines ",
                                                        "value": "TIGR: role:22540: Hormones, cytokines "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22550: Channels ",
                                                        "value": "TIGR: role:22550: Channels "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22560: Immunology ",
                                                        "value": "TIGR: role:22560: Immunology "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22570: Two-component systems ",
                                                        "value": "TIGR: role:22570: Two-component systems "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22580: PTS ",
                                                        "value": "TIGR: role:22580: PTS "
                                                    },
                                                    {
                                                        "display": "TIGR: role:22595: Other ",
                                                        "value": "TIGR: role:22595: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23020: Surface structures ",
                                                        "value": "TIGR: role:23020: Surface structures "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23030: Biosynthesis of murein sacculus and peptidoglycan ",
                                                        "value": "TIGR: role:23030: Biosynthesis of murein sacculus and peptidoglycan "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides ",
                                                        "value": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides ",
                                                        "value": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides ",
                                                        "value": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides ",
                                                        "value": "TIGR: role:23040: Biosynthesis and degradation of surface polysaccharides and lipopolysaccharides "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23060: Other ",
                                                        "value": "TIGR: role:23060: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23505: Cell wall ",
                                                        "value": "TIGR: role:23505: Cell wall "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23505: Cell wall ",
                                                        "value": "TIGR: role:23505: Cell wall "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23510: Plasma membrane ",
                                                        "value": "TIGR: role:23510: Plasma membrane "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23510: Plasma membrane ",
                                                        "value": "TIGR: role:23510: Plasma membrane "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23515: Cytoplasm ",
                                                        "value": "TIGR: role:23515: Cytoplasm "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23515: Cytoplasm ",
                                                        "value": "TIGR: role:23515: Cytoplasm "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23520: Cytoskeleton ",
                                                        "value": "TIGR: role:23520: Cytoskeleton "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23520: Cytoskeleton ",
                                                        "value": "TIGR: role:23520: Cytoskeleton "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23525: Centrosome ",
                                                        "value": "TIGR: role:23525: Centrosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23525: Centrosome ",
                                                        "value": "TIGR: role:23525: Centrosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23530: Endoplasmic reticulum ",
                                                        "value": "TIGR: role:23530: Endoplasmic reticulum "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23530: Endoplasmic reticulum ",
                                                        "value": "TIGR: role:23530: Endoplasmic reticulum "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23535: Golgi ",
                                                        "value": "TIGR: role:23535: Golgi "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23535: Golgi ",
                                                        "value": "TIGR: role:23535: Golgi "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23545: Nucleus ",
                                                        "value": "TIGR: role:23545: Nucleus "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23545: Nucleus ",
                                                        "value": "TIGR: role:23545: Nucleus "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23550: Chromosome structure ",
                                                        "value": "TIGR: role:23550: Chromosome structure "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23555: Mitochondria ",
                                                        "value": "TIGR: role:23555: Mitochondria "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23555: Mitochondria ",
                                                        "value": "TIGR: role:23555: Mitochondria "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23560: Peroxisome ",
                                                        "value": "TIGR: role:23560: Peroxisome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23560: Peroxisome ",
                                                        "value": "TIGR: role:23560: Peroxisome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23565: Endosome ",
                                                        "value": "TIGR: role:23565: Endosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23565: Endosome ",
                                                        "value": "TIGR: role:23565: Endosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23570: Vacuole and lysosome ",
                                                        "value": "TIGR: role:23570: Vacuole and lysosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23570: Vacuole and lysosome ",
                                                        "value": "TIGR: role:23570: Vacuole and lysosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23570: Vacuole and lysosome ",
                                                        "value": "TIGR: role:23570: Vacuole and lysosome "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23575: Chloroplast ",
                                                        "value": "TIGR: role:23575: Chloroplast "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23580: Etioplast ",
                                                        "value": "TIGR: role:23580: Etioplast "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23585: Amyloplast ",
                                                        "value": "TIGR: role:23585: Amyloplast "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23590: Plasmodesmata ",
                                                        "value": "TIGR: role:23590: Plasmodesmata "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23595: Extracellular/secreted proteins ",
                                                        "value": "TIGR: role:23595: Extracellular/secreted proteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23597: Extracellular matrix ",
                                                        "value": "TIGR: role:23597: Extracellular matrix "
                                                    },
                                                    {
                                                        "display": "TIGR: role:23599: Other ",
                                                        "value": "TIGR: role:23599: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24010: Cell division ",
                                                        "value": "TIGR: role:24010: Cell division "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24015: Chemotaxis and motility ",
                                                        "value": "TIGR: role:24015: Chemotaxis and motility "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24015: Chemotaxis and motility ",
                                                        "value": "TIGR: role:24015: Chemotaxis and motility "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24015: Chemotaxis and motility ",
                                                        "value": "TIGR: role:24015: Chemotaxis and motility "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24020: Cell adhesion ",
                                                        "value": "TIGR: role:24020: Cell adhesion "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24025: Conjugation ",
                                                        "value": "TIGR: role:24025: Conjugation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24030: Detoxification ",
                                                        "value": "TIGR: role:24030: Detoxification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24030: Detoxification ",
                                                        "value": "TIGR: role:24030: Detoxification "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24050: DNA transformation ",
                                                        "value": "TIGR: role:24050: DNA transformation "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24060: Toxin production and resistance ",
                                                        "value": "TIGR: role:24060: Toxin production and resistance "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24060: Toxin production and resistance ",
                                                        "value": "TIGR: role:24060: Toxin production and resistance "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24065: Pathogenesis ",
                                                        "value": "TIGR: role:24065: Pathogenesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24070: Adaptations to atypical conditions ",
                                                        "value": "TIGR: role:24070: Adaptations to atypical conditions "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24075: Biosynthesis of natural products ",
                                                        "value": "TIGR: role:24075: Biosynthesis of natural products "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24095: Other ",
                                                        "value": "TIGR: role:24095: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24215: Fruit ripening ",
                                                        "value": "TIGR: role:24215: Fruit ripening "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24220: Senescence ",
                                                        "value": "TIGR: role:24220: Senescence "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24225: Flowering ",
                                                        "value": "TIGR: role:24225: Flowering "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24230: Floral development ",
                                                        "value": "TIGR: role:24230: Floral development "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24235: Juvenility ",
                                                        "value": "TIGR: role:24235: Juvenility "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24240: Photoperiodism ",
                                                        "value": "TIGR: role:24240: Photoperiodism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24245: Vernalization ",
                                                        "value": "TIGR: role:24245: Vernalization "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24250: Abscission ",
                                                        "value": "TIGR: role:24250: Abscission "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24255: Phototropism ",
                                                        "value": "TIGR: role:24255: Phototropism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24260: Gravitropism ",
                                                        "value": "TIGR: role:24260: Gravitropism "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24265: Thigmomorphogenesis ",
                                                        "value": "TIGR: role:24265: Thigmomorphogenesis "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24270: Fertilization ",
                                                        "value": "TIGR: role:24270: Fertilization "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24275: Phytohormones ",
                                                        "value": "TIGR: role:24275: Phytohormones "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24280: Other ",
                                                        "value": "TIGR: role:24280: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24410: Bacteria ",
                                                        "value": "TIGR: role:24410: Bacteria "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24420: Viruses ",
                                                        "value": "TIGR: role:24420: Viruses "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24430: Fungi ",
                                                        "value": "TIGR: role:24430: Fungi "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24440: Nematodes ",
                                                        "value": "TIGR: role:24440: Nematodes "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24450: Pathogenesis-related proteins ",
                                                        "value": "TIGR: role:24450: Pathogenesis-related proteins "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24460: Hypersensitive response ",
                                                        "value": "TIGR: role:24460: Hypersensitive response "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24470: Systemic acquired resistance ",
                                                        "value": "TIGR: role:24470: Systemic acquired resistance "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24480: Cell death ",
                                                        "value": "TIGR: role:24480: Cell death "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24490: Other ",
                                                        "value": "TIGR: role:24490: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24605: Light ",
                                                        "value": "TIGR: role:24605: Light "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24610: Cold ",
                                                        "value": "TIGR: role:24610: Cold "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24615: Heat ",
                                                        "value": "TIGR: role:24615: Heat "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24620: Drought ",
                                                        "value": "TIGR: role:24620: Drought "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24625: Flooding ",
                                                        "value": "TIGR: role:24625: Flooding "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24630: Xenobiotics ",
                                                        "value": "TIGR: role:24630: Xenobiotics "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24635: Insects ",
                                                        "value": "TIGR: role:24635: Insects "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24640: Wounding ",
                                                        "value": "TIGR: role:24640: Wounding "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24645: UV ",
                                                        "value": "TIGR: role:24645: UV "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24650: Osmotic ",
                                                        "value": "TIGR: role:24650: Osmotic "
                                                    },
                                                    {
                                                        "display": "TIGR: role:24660: Other ",
                                                        "value": "TIGR: role:24660: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:25015: Mobile and extrachromosomal element functions",
                                                        "value": "TIGR: role:25015: Mobile and extrachromosomal element functions"
                                                    },
                                                    {
                                                        "display": "TIGR: role:25020: Mobile and extrachromosomal element functions",
                                                        "value": "TIGR: role:25020: Mobile and extrachromosomal element functions"
                                                    },
                                                    {
                                                        "display": "TIGR: role:25030: Mobile and extrachromosomal element functions",
                                                        "value": "TIGR: role:25030: Mobile and extrachromosomal element functions"
                                                    },
                                                    {
                                                        "display": "TIGR: role:25095: Other ",
                                                        "value": "TIGR: role:25095: Other "
                                                    },
                                                    {
                                                        "display": "TIGR: role:25500: Enzymes of unknown specificity ",
                                                        "value": "TIGR: role:25500: Enzymes of unknown specificity "
                                                    },
                                                    {
                                                        "display": "TIGR: role:25510: General ",
                                                        "value": "TIGR: role:25510: General "
                                                    },
                                                    {
                                                        "display": "TIGR: role:25510: General ",
                                                        "value": "TIGR: role:25510: General "
                                                    },
                                                    {
                                                        "display": "TIGR: role:25510: General ",
                                                        "value": "TIGR: role:25510: General "
                                                    },
                                                    {
                                                        "display": "TIGR: role:26010: Conserved ",
                                                        "value": "TIGR: role:26010: Conserved "
                                                    },
                                                    {
                                                        "display": "TIGR: role:26015: Domain ",
                                                        "value": "TIGR: role:26015: Domain "
                                                    },
                                                    {
                                                        "display": "TIGR: role:26020: No database match ",
                                                        "value": "TIGR: role:26020: No database match "
                                                    },
                                                    {
                                                        "display": "TIGR: role:27000: Disrupted reading frame ",
                                                        "value": "TIGR: role:27000: Disrupted reading frame "
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "extra_target_fam_groups_TIGR",
                                            "optional": 1,
                                            "short_hint": "Domain Families from particular namespace groups to target in the analysis",
                                            "ui_class": "parameter",
                                            "ui_name": "Custom Domain Groups (TIGRFAM)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Domain Families from particular namespace groups to target in the analysis",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "SEED: Alanine biosynthesis",
                                                        "value": "SEED: Alanine_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Arginine Biosynthesis extended",
                                                        "value": "SEED: Arginine_Biosynthesis_extended"
                                                    },
                                                    {
                                                        "display": "SEED: Arginine Deiminase Pathway",
                                                        "value": "SEED: Arginine_Deiminase_Pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Arginine and Ornithine Degradation",
                                                        "value": "SEED: Arginine_and_Ornithine_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Aromatic amino acid degradation",
                                                        "value": "SEED: Aromatic_amino_acid_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Aromatic amino acid interconversions with aryl acids",
                                                        "value": "SEED: Aromatic_amino_acid_interconversions_with_aryl_acids"
                                                    },
                                                    {
                                                        "display": "SEED: Bacilysin biosynthesis",
                                                        "value": "SEED: Bacilysin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Branched-Chain Amino Acid Biosynthesis",
                                                        "value": "SEED: Branched-Chain_Amino_Acid_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Chorismate: Intermediate for synthesis of PAPA antibiotics, PABA, anthranilate, 3-hydroxyanthranilate and more.",
                                                        "value": "SEED: Chorismate:_Intermediate_for_synthesis_of_PAPA_antibiotics,_PABA,_anthranilate,_3-hydroxyanthranilate_and_more."
                                                    },
                                                    {
                                                        "display": "SEED: Chorismate Synthesis",
                                                        "value": "SEED: Chorismate_Synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Common Pathway For Synthesis of Aromatic Compounds (DAHP synthase to chorismate)",
                                                        "value": "SEED: Common_Pathway_For_Synthesis_of_Aromatic_Compounds_(DAHP_synthase_to_chorismate)"
                                                    },
                                                    {
                                                        "display": "SEED: Cyanophycin Metabolism",
                                                        "value": "SEED: Cyanophycin_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Cysteine Biosynthesis",
                                                        "value": "SEED: Cysteine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Glutamate dehydrogenases",
                                                        "value": "SEED: Glutamate_dehydrogenases"
                                                    },
                                                    {
                                                        "display": "SEED: Glutamine, Glutamate, Aspartate and Asparagine Biosynthesis",
                                                        "value": "SEED: Glutamine,_Glutamate,_Aspartate_and_Asparagine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Glutamine synthetases",
                                                        "value": "SEED: Glutamine_synthetases"
                                                    },
                                                    {
                                                        "display": "SEED: Glycine Biosynthesis",
                                                        "value": "SEED: Glycine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Glycine and Serine Utilization",
                                                        "value": "SEED: Glycine_and_Serine_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Glycine cleavage system",
                                                        "value": "SEED: Glycine_cleavage_system"
                                                    },
                                                    {
                                                        "display": "SEED: HMG CoA Synthesis",
                                                        "value": "SEED: HMG_CoA_Synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Histidine Biosynthesis",
                                                        "value": "SEED: Histidine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Histidine Degradation",
                                                        "value": "SEED: Histidine_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Isoleucine degradation",
                                                        "value": "SEED: Isoleucine_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Ketoisovalerate oxidoreductase",
                                                        "value": "SEED: Ketoisovalerate_oxidoreductase"
                                                    },
                                                    {
                                                        "display": "SEED: L-2-amino-thiazoline-4-carboxylic acid-Lcysteine conversion",
                                                        "value": "SEED: L-2-amino-thiazoline-4-carboxylic_acid-Lcysteine_conversion"
                                                    },
                                                    {
                                                        "display": "SEED: Leucine Biosynthesis",
                                                        "value": "SEED: Leucine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Leucine Degradation and HMG-CoA Metabolism",
                                                        "value": "SEED: Leucine_Degradation_and_HMG-CoA_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Lysine Biosynthesis DAP Pathway",
                                                        "value": "SEED: Lysine_Biosynthesis_DAP_Pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Lysine degradation",
                                                        "value": "SEED: Lysine_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Methionine Biosynthesis",
                                                        "value": "SEED: Methionine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Methionine Degradation",
                                                        "value": "SEED: Methionine_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Methionine Salvage",
                                                        "value": "SEED: Methionine_Salvage"
                                                    },
                                                    {
                                                        "display": "SEED: Phenylalanine and Tyrosine Branches from Chorismate",
                                                        "value": "SEED: Phenylalanine_and_Tyrosine_Branches_from_Chorismate"
                                                    },
                                                    {
                                                        "display": "SEED: Polyamine Metabolism",
                                                        "value": "SEED: Polyamine_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Proline, 4-hydroxyproline uptake and utilization",
                                                        "value": "SEED: Proline,_4-hydroxyproline_uptake_and_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Proline Synthesis",
                                                        "value": "SEED: Proline_Synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Serine Biosynthesis",
                                                        "value": "SEED: Serine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Threonine anaerobic catabolism gene cluster",
                                                        "value": "SEED: Threonine_anaerobic_catabolism_gene_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: Threonine and Homoserine Biosynthesis",
                                                        "value": "SEED: Threonine_and_Homoserine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Threonine degradation",
                                                        "value": "SEED: Threonine_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Tryptophan synthesis",
                                                        "value": "SEED: Tryptophan_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Urea decomposition",
                                                        "value": "SEED: Urea_decomposition"
                                                    },
                                                    {
                                                        "display": "SEED: Valine degradation",
                                                        "value": "SEED: Valine_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: 2-Ketogluconate Utilization",
                                                        "value": "SEED: 2-Ketogluconate_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: 2-methylcitrate to 2-methylaconitate metabolism cluster",
                                                        "value": "SEED: 2-methylcitrate_to_2-methylaconitate_metabolism_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: Acetoin, butanediol metabolism",
                                                        "value": "SEED: Acetoin,_butanediol_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Acetyl-CoA fermentation to Butyrate",
                                                        "value": "SEED: Acetyl-CoA_fermentation_to_Butyrate"
                                                    },
                                                    {
                                                        "display": "SEED: Alpha-acetolactate operon",
                                                        "value": "SEED: Alpha-acetolactate_operon"
                                                    },
                                                    {
                                                        "display": "SEED: Beta-Glucoside Metabolism",
                                                        "value": "SEED: Beta-Glucoside_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Butanol Biosynthesis",
                                                        "value": "SEED: Butanol_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: CO2 uptake, carboxysome",
                                                        "value": "SEED: CO2_uptake,_carboxysome"
                                                    },
                                                    {
                                                        "display": "SEED: Calvin-Benson cycle",
                                                        "value": "SEED: Calvin-Benson_cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Carboxysome",
                                                        "value": "SEED: Carboxysome"
                                                    },
                                                    {
                                                        "display": "SEED: Chitin and N-acetylglucosamine utilization",
                                                        "value": "SEED: Chitin_and_N-acetylglucosamine_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: D-Galacturonate and D-Glucuronate Utilization",
                                                        "value": "SEED: D-Galacturonate_and_D-Glucuronate_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: D-Sorbitol(D-Glucitol) and L-Sorbose Utilization",
                                                        "value": "SEED: D-Sorbitol(D-Glucitol)_and_L-Sorbose_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: D-Tagatose and Galactitol Utilization",
                                                        "value": "SEED: D-Tagatose_and_Galactitol_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: D-allose utilization",
                                                        "value": "SEED: D-allose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: D-galactarate, D-glucarate and D-glycerate catabolism",
                                                        "value": "SEED: D-galactarate,_D-glucarate_and_D-glycerate_catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: D-galactonate catabolism",
                                                        "value": "SEED: D-galactonate_catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: D-gluconate and ketogluconates metabolism",
                                                        "value": "SEED: D-gluconate_and_ketogluconates_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: D-ribose utilization",
                                                        "value": "SEED: D-ribose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Deoxyribose and Deoxynucleoside Catabolism",
                                                        "value": "SEED: Deoxyribose_and_Deoxynucleoside_Catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Di-Inositol-Phosphate biosynthesis",
                                                        "value": "SEED: Di-Inositol-Phosphate_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Dihydroxyacetone kinases",
                                                        "value": "SEED: Dihydroxyacetone_kinases"
                                                    },
                                                    {
                                                        "display": "SEED: Entner-Doudoroff Pathway",
                                                        "value": "SEED: Entner-Doudoroff_Pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Erythritol utilization",
                                                        "value": "SEED: Erythritol_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Ethanolamine utilization",
                                                        "value": "SEED: Ethanolamine_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Fermentations: Lactate",
                                                        "value": "SEED: Fermentations:_Lactate"
                                                    },
                                                    {
                                                        "display": "SEED: Fermentations: Mixed acid",
                                                        "value": "SEED: Fermentations:_Mixed_acid"
                                                    },
                                                    {
                                                        "display": "SEED: Formaldehyde assimilation: Ribulose monophosphate pathway",
                                                        "value": "SEED: Formaldehyde_assimilation:_Ribulose_monophosphate_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Fructooligosaccharides(FOS) and Raffinose Utilization",
                                                        "value": "SEED: Fructooligosaccharides(FOS)_and_Raffinose_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Fructose utilization",
                                                        "value": "SEED: Fructose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Glycerol and Glycerol-3-phosphate Uptake and Utilization",
                                                        "value": "SEED: Glycerol_and_Glycerol-3-phosphate_Uptake_and_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Glycerol fermenation to 1,3-propanediol",
                                                        "value": "SEED: Glycerol_fermenation_to_1,3-propanediol"
                                                    },
                                                    {
                                                        "display": "SEED: Glycogen metabolism",
                                                        "value": "SEED: Glycogen_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Glycolate, glyoxylate interconversions",
                                                        "value": "SEED: Glycolate,_glyoxylate_interconversions"
                                                    },
                                                    {
                                                        "display": "SEED: Glycolysis and Gluconeogenesis",
                                                        "value": "SEED: Glycolysis_and_Gluconeogenesis"
                                                    },
                                                    {
                                                        "display": "SEED: Glycolysis and Gluconeogenesis, including Archaeal enzymes",
                                                        "value": "SEED: Glycolysis_and_Gluconeogenesis,_including_Archaeal_enzymes"
                                                    },
                                                    {
                                                        "display": "SEED: Hexose Phosphate Uptake System",
                                                        "value": "SEED: Hexose_Phosphate_Uptake_System"
                                                    },
                                                    {
                                                        "display": "SEED: Inositol catabolism",
                                                        "value": "SEED: Inositol_catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Isobutyryl-CoA to Propionyl-CoA Module",
                                                        "value": "SEED: Isobutyryl-CoA_to_Propionyl-CoA_Module"
                                                    },
                                                    {
                                                        "display": "SEED: L-Arabinose utilization",
                                                        "value": "SEED: L-Arabinose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: L-ascorbate utilization (and related gene clusters)",
                                                        "value": "SEED: L-ascorbate_utilization_(and_related_gene_clusters)"
                                                    },
                                                    {
                                                        "display": "SEED: L-fucose utilization",
                                                        "value": "SEED: L-fucose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: L-fucose utilization temp",
                                                        "value": "SEED: L-fucose_utilization_temp"
                                                    },
                                                    {
                                                        "display": "SEED: L-rhamnose utilization",
                                                        "value": "SEED: L-rhamnose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Lactate utilization",
                                                        "value": "SEED: Lactate_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Lacto-N-Biose I and Galacto-N-Biose Metabolic Pathway",
                                                        "value": "SEED: Lacto-N-Biose_I_and_Galacto-N-Biose_Metabolic_Pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Lactose and Galactose Uptake and Utilization",
                                                        "value": "SEED: Lactose_and_Galactose_Uptake_and_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Lactose utilization",
                                                        "value": "SEED: Lactose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Malonate decarboxylase",
                                                        "value": "SEED: Malonate_decarboxylase"
                                                    },
                                                    {
                                                        "display": "SEED: Maltose and Maltodextrin Utilization",
                                                        "value": "SEED: Maltose_and_Maltodextrin_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Mannitol Utilization",
                                                        "value": "SEED: Mannitol_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Mannose Metabolism",
                                                        "value": "SEED: Mannose_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Melibiose Utilization",
                                                        "value": "SEED: Melibiose_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Methanogenesis",
                                                        "value": "SEED: Methanogenesis"
                                                    },
                                                    {
                                                        "display": "SEED: Methanogenesis from methylated compounds",
                                                        "value": "SEED: Methanogenesis_from_methylated_compounds"
                                                    },
                                                    {
                                                        "display": "SEED: Methylcitrate cycle",
                                                        "value": "SEED: Methylcitrate_cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Methylglyoxal Metabolism",
                                                        "value": "SEED: Methylglyoxal_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: N-Acetyl-Galactosamine and Galactosamine Utilization",
                                                        "value": "SEED: N-Acetyl-Galactosamine_and_Galactosamine_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Neotrehalosadiamine (NTD) Biosynthesis Operon",
                                                        "value": "SEED: Neotrehalosadiamine_(NTD)_Biosynthesis_Operon"
                                                    },
                                                    {
                                                        "display": "SEED: One-carbon metabolism by tetrahydropterines",
                                                        "value": "SEED: One-carbon_metabolism_by_tetrahydropterines"
                                                    },
                                                    {
                                                        "display": "SEED: Pentose phosphate pathway",
                                                        "value": "SEED: Pentose_phosphate_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Photorespiration (oxidative C2 cycle)",
                                                        "value": "SEED: Photorespiration_(oxidative_C2_cycle)"
                                                    },
                                                    {
                                                        "display": "SEED: Predicted carbohydrate hydrolases",
                                                        "value": "SEED: Predicted_carbohydrate_hydrolases"
                                                    },
                                                    {
                                                        "display": "SEED: Propanediol utilization",
                                                        "value": "SEED: Propanediol_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Propionate-CoA to Succinate Module",
                                                        "value": "SEED: Propionate-CoA_to_Succinate_Module"
                                                    },
                                                    {
                                                        "display": "SEED: Propionyl-CoA to Succinyl-CoA Module",
                                                        "value": "SEED: Propionyl-CoA_to_Succinyl-CoA_Module"
                                                    },
                                                    {
                                                        "display": "SEED: Pyruvate:ferredoxin oxidoreductase",
                                                        "value": "SEED: Pyruvate:ferredoxin_oxidoreductase"
                                                    },
                                                    {
                                                        "display": "SEED: Pyruvate Alanine Serine Interconversions",
                                                        "value": "SEED: Pyruvate_Alanine_Serine_Interconversions"
                                                    },
                                                    {
                                                        "display": "SEED: Pyruvate metabolism I: anaplerotic reactions, PEP",
                                                        "value": "SEED: Pyruvate_metabolism_I:_anaplerotic_reactions,_PEP"
                                                    },
                                                    {
                                                        "display": "SEED: Pyruvate metabolism II: acetyl-CoA, acetogenesis from pyruvate",
                                                        "value": "SEED: Pyruvate_metabolism_II:_acetyl-CoA,_acetogenesis_from_pyruvate"
                                                    },
                                                    {
                                                        "display": "SEED: Ribitol, Xylitol, Arabitol, Mannitol and Sorbitol utilization",
                                                        "value": "SEED: Ribitol,_Xylitol,_Arabitol,_Mannitol_and_Sorbitol_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Serine-glyoxylate cycle",
                                                        "value": "SEED: Serine-glyoxylate_cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Sucrose utilization",
                                                        "value": "SEED: Sucrose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Sucrose utilization Shewanella",
                                                        "value": "SEED: Sucrose_utilization_Shewanella"
                                                    },
                                                    {
                                                        "display": "SEED: TCA Cycle",
                                                        "value": "SEED: TCA_Cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Trehalose Biosynthesis",
                                                        "value": "SEED: Trehalose_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Trehalose Uptake and Utilization",
                                                        "value": "SEED: Trehalose_Uptake_and_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Tricarballylate Utilization",
                                                        "value": "SEED: Tricarballylate_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Unknown sugar utilization (cluster yphABCDEFG)",
                                                        "value": "SEED: Unknown_sugar_utilization_(cluster_yphABCDEFG)"
                                                    },
                                                    {
                                                        "display": "SEED: Xylose utilization",
                                                        "value": "SEED: Xylose_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial Cytoskeleton",
                                                        "value": "SEED: Bacterial_Cytoskeleton"
                                                    },
                                                    {
                                                        "display": "SEED: Control of cell elongation - division cycle in Bacilli",
                                                        "value": "SEED: Control_of_cell_elongation_-_division_cycle_in_Bacilli"
                                                    },
                                                    {
                                                        "display": "SEED: Cyanobacterial Circadian Clock",
                                                        "value": "SEED: Cyanobacterial_Circadian_Clock"
                                                    },
                                                    {
                                                        "display": "SEED: Heterocyst formation in cyanobacteria",
                                                        "value": "SEED: Heterocyst_formation_in_cyanobacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Macromolecular synthesis operon",
                                                        "value": "SEED: Macromolecular_synthesis_operon"
                                                    },
                                                    {
                                                        "display": "SEED: MukBEF Chromosome Condensation",
                                                        "value": "SEED: MukBEF_Chromosome_Condensation"
                                                    },
                                                    {
                                                        "display": "SEED: Two cell division clusters relating to chromosome partitioning",
                                                        "value": "SEED: Two_cell_division_clusters_relating_to_chromosome_partitioning"
                                                    },
                                                    {
                                                        "display": "SEED: YgjD and YeaZ",
                                                        "value": "SEED: YgjD_and_YeaZ"
                                                    },
                                                    {
                                                        "display": "SEED: Alginate metabolism",
                                                        "value": "SEED: Alginate_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: CMP-N-acetylneuraminate Biosynthesis",
                                                        "value": "SEED: CMP-N-acetylneuraminate_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Capsular Polysaccharide (CPS) of Campylobacter",
                                                        "value": "SEED: Capsular_Polysaccharide_(CPS)_of_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: Capsular heptose biosynthesis",
                                                        "value": "SEED: Capsular_heptose_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Capsular surface virulence antigen loci",
                                                        "value": "SEED: Capsular_surface_virulence_antigen_loci"
                                                    },
                                                    {
                                                        "display": "SEED: Colanic acid biosynthesis",
                                                        "value": "SEED: Colanic_acid_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: D-Alanyl Lipoteichoic Acid Biosynthesis",
                                                        "value": "SEED: D-Alanyl_Lipoteichoic_Acid_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: KDO2-Lipid A biosynthesis",
                                                        "value": "SEED: KDO2-Lipid_A_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: LOS core oligosaccharide biosynthesis",
                                                        "value": "SEED: LOS_core_oligosaccharide_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Lipid A-Ara4N pathway ( Polymyxin resistance )",
                                                        "value": "SEED: Lipid_A-Ara4N_pathway_(_Polymyxin_resistance_)"
                                                    },
                                                    {
                                                        "display": "SEED: Lipid A modifications",
                                                        "value": "SEED: Lipid_A_modifications"
                                                    },
                                                    {
                                                        "display": "SEED: Lipopolysaccharide-related cluster in Alphaproteobacteria",
                                                        "value": "SEED: Lipopolysaccharide-related_cluster_in_Alphaproteobacteria"
                                                    },
                                                    {
                                                        "display": "SEED: O-Methyl Phosphoramidate Capsule Modification in Campylobacter",
                                                        "value": "SEED: O-Methyl_Phosphoramidate_Capsule_Modification_in_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: Peptidoglycan Biosynthesis",
                                                        "value": "SEED: Peptidoglycan_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Phosphorylcholine incorporation in LPS",
                                                        "value": "SEED: Phosphorylcholine_incorporation_in_LPS"
                                                    },
                                                    {
                                                        "display": "SEED: Polysaccharide deacetylases",
                                                        "value": "SEED: Polysaccharide_deacetylases"
                                                    },
                                                    {
                                                        "display": "SEED: Pseudaminic Acid Biosynthesis",
                                                        "value": "SEED: Pseudaminic_Acid_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Rhamnose containing glycans",
                                                        "value": "SEED: Rhamnose_containing_glycans"
                                                    },
                                                    {
                                                        "display": "SEED: Serotype determining Capsular polysaccharide biosynthesis in Staphylococcus",
                                                        "value": "SEED: Serotype_determining_Capsular_polysaccharide_biosynthesis_in_Staphylococcus"
                                                    },
                                                    {
                                                        "display": "SEED: Sialic Acid Metabolism",
                                                        "value": "SEED: Sialic_Acid_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Teichoic and lipoteichoic acids biosynthesis",
                                                        "value": "SEED: Teichoic_and_lipoteichoic_acids_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Teichuronic acid biosynthesis",
                                                        "value": "SEED: Teichuronic_acid_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: UDP-N-acetylmuramate from Fructose-6-phosphate Biosynthesis",
                                                        "value": "SEED: UDP-N-acetylmuramate_from_Fructose-6-phosphate_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Xanthan Exopolysaccharide Biosynthesis and Export",
                                                        "value": "SEED: Xanthan_Exopolysaccharide_Biosynthesis_and_Export"
                                                    },
                                                    {
                                                        "display": "SEED: YjeE",
                                                        "value": "SEED: YjeE"
                                                    },
                                                    {
                                                        "display": "SEED: dTDP-rhamnose synthesis",
                                                        "value": "SEED: dTDP-rhamnose_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: linker unit-arabinogalactan synthesis",
                                                        "value": "SEED: linker_unit-arabinogalactan_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: mycolic acid synthesis",
                                                        "value": "SEED: mycolic_acid_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial Cell Division",
                                                        "value": "SEED: Bacterial_Cell_Division"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial RNA-metabolizing Zn-dependent hydrolases",
                                                        "value": "SEED: Bacterial_RNA-metabolizing_Zn-dependent_hydrolases"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-214092.1.peg.3450",
                                                        "value": "SEED: CBSS-214092.1.peg.3450"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-261594.1.peg.2640",
                                                        "value": "SEED: CBSS-261594.1.peg.2640"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-262316.1.peg.2929",
                                                        "value": "SEED: CBSS-262316.1.peg.2929"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-262719.3.peg.410",
                                                        "value": "SEED: CBSS-262719.3.peg.410"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-343509.6.peg.2644",
                                                        "value": "SEED: CBSS-343509.6.peg.2644"
                                                    },
                                                    {
                                                        "display": "SEED: CBSS-562.2.peg.5158 SK3 including",
                                                        "value": "SEED: CBSS-562.2.peg.5158_SK3_including"
                                                    },
                                                    {
                                                        "display": "SEED: Cluster-based Subsystem Grouping Hypotheticals - perhaps Proteosome Related",
                                                        "value": "SEED: Cluster-based_Subsystem_Grouping_Hypotheticals_-_perhaps_Proteosome_Related"
                                                    },
                                                    {
                                                        "display": "SEED: Conenzyme B12 related Hypothetical: Clusters with cobST",
                                                        "value": "SEED: Conenzyme_B12_related_Hypothetical:_Clusters_with_cobST"
                                                    },
                                                    {
                                                        "display": "SEED: Conserved gene cluster associated with Met-tRNA formyltransferase",
                                                        "value": "SEED: Conserved_gene_cluster_associated_with_Met-tRNA_formyltransferase"
                                                    },
                                                    {
                                                        "display": "SEED: LMPTP YfkJ cluster",
                                                        "value": "SEED: LMPTP_YfkJ_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: LMPTP YwlE cluster",
                                                        "value": "SEED: LMPTP_YwlE_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: NusA-TFII Cluster",
                                                        "value": "SEED: NusA-TFII_Cluster"
                                                    },
                                                    {
                                                        "display": "SEED: PA0057 cluster",
                                                        "value": "SEED: PA0057_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: Putative hemin transporter",
                                                        "value": "SEED: Putative_hemin_transporter"
                                                    },
                                                    {
                                                        "display": "SEED: Putative sulfate assimilation cluster",
                                                        "value": "SEED: Putative_sulfate_assimilation_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: Spore Coat",
                                                        "value": "SEED: Spore_Coat"
                                                    },
                                                    {
                                                        "display": "SEED: Type III secretion systems, extended",
                                                        "value": "SEED: Type_III_secretion_systems,_extended"
                                                    },
                                                    {
                                                        "display": "SEED: YeiH",
                                                        "value": "SEED: YeiH"
                                                    },
                                                    {
                                                        "display": "SEED: Bilin Biosynthesis",
                                                        "value": "SEED: Bilin_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Biotin biosynthesis",
                                                        "value": "SEED: Biotin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Chlorophyll Biosynthesis",
                                                        "value": "SEED: Chlorophyll_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Chlorophyll Degradation",
                                                        "value": "SEED: Chlorophyll_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Cobalamin synthesis",
                                                        "value": "SEED: Cobalamin_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme A Biosynthesis",
                                                        "value": "SEED: Coenzyme_A_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme B12 biosynthesis",
                                                        "value": "SEED: Coenzyme_B12_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme B synthesis",
                                                        "value": "SEED: Coenzyme_B_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme F420 synthesis",
                                                        "value": "SEED: Coenzyme_F420_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme PQQ synthesis",
                                                        "value": "SEED: Coenzyme_PQQ_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Experimental tye",
                                                        "value": "SEED: Experimental_tye"
                                                    },
                                                    {
                                                        "display": "SEED: Flavodoxin",
                                                        "value": "SEED: Flavodoxin"
                                                    },
                                                    {
                                                        "display": "SEED: Folate Biosynthesis",
                                                        "value": "SEED: Folate_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Heme and Siroheme Biosynthesis",
                                                        "value": "SEED: Heme_and_Siroheme_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Heme biosynthesis orphans",
                                                        "value": "SEED: Heme_biosynthesis_orphans"
                                                    },
                                                    {
                                                        "display": "SEED: Lipoic acid metabolism",
                                                        "value": "SEED: Lipoic_acid_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Menaquinone Biosynthesis via Futalosine",
                                                        "value": "SEED: Menaquinone_Biosynthesis_via_Futalosine"
                                                    },
                                                    {
                                                        "display": "SEED: Menaquinone and Phylloquinone Biosynthesis",
                                                        "value": "SEED: Menaquinone_and_Phylloquinone_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Molybdenum cofactor biosynthesis",
                                                        "value": "SEED: Molybdenum_cofactor_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: NAD and NADP cofactor biosynthesis global",
                                                        "value": "SEED: NAD_and_NADP_cofactor_biosynthesis_global"
                                                    },
                                                    {
                                                        "display": "SEED: NAD regulation",
                                                        "value": "SEED: NAD_regulation"
                                                    },
                                                    {
                                                        "display": "SEED: Plastoquinone Biosynthesis",
                                                        "value": "SEED: Plastoquinone_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: PnuC-like transporters",
                                                        "value": "SEED: PnuC-like_transporters"
                                                    },
                                                    {
                                                        "display": "SEED: Pterin biosynthesis",
                                                        "value": "SEED: Pterin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Pyridoxin (Vitamin B6) Biosynthesis",
                                                        "value": "SEED: Pyridoxin_(Vitamin_B6)_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Pyrroloquinoline Quinone biosynthesis",
                                                        "value": "SEED: Pyrroloquinoline_Quinone_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Riboflavin, FMN and FAD metabolism",
                                                        "value": "SEED: Riboflavin,_FMN_and_FAD_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Thiamin biosynthesis",
                                                        "value": "SEED: Thiamin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Tocopherol Biosynthesis",
                                                        "value": "SEED: Tocopherol_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Ubiquinone Biosynthesis",
                                                        "value": "SEED: Ubiquinone_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: p-Aminobenzoyl-Glutamate Utilization",
                                                        "value": "SEED: p-Aminobenzoyl-Glutamate_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: 2-phosphoglycolate salvage",
                                                        "value": "SEED: 2-phosphoglycolate_salvage"
                                                    },
                                                    {
                                                        "display": "SEED: ATP-dependent Nuclease",
                                                        "value": "SEED: ATP-dependent_Nuclease"
                                                    },
                                                    {
                                                        "display": "SEED: CRISPRs",
                                                        "value": "SEED: CRISPRs"
                                                    },
                                                    {
                                                        "display": "SEED: DNA-replication",
                                                        "value": "SEED: DNA-replication"
                                                    },
                                                    {
                                                        "display": "SEED: DNA Helicase of Unknown Function",
                                                        "value": "SEED: DNA_Helicase_of_Unknown_Function"
                                                    },
                                                    {
                                                        "display": "SEED: DNA Repair Base Excision",
                                                        "value": "SEED: DNA_Repair_Base_Excision"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, UvrABC system",
                                                        "value": "SEED: DNA_repair,_UvrABC_system"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, bacterial",
                                                        "value": "SEED: DNA_repair,_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, bacterial DinG and relatives",
                                                        "value": "SEED: DNA_repair,_bacterial_DinG_and_relatives"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, bacterial MutL-MutS system",
                                                        "value": "SEED: DNA_repair,_bacterial_MutL-MutS_system"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, bacterial RecFOR pathway",
                                                        "value": "SEED: DNA_repair,_bacterial_RecFOR_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair, bacterial UvrD and related helicases",
                                                        "value": "SEED: DNA_repair,_bacterial_UvrD_and_related_helicases"
                                                    },
                                                    {
                                                        "display": "SEED: DNA repair and recombination eukaryotic",
                                                        "value": "SEED: DNA_repair_and_recombination_eukaryotic"
                                                    },
                                                    {
                                                        "display": "SEED: DNA replication, archaeal",
                                                        "value": "SEED: DNA_replication,_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: DNA structural proteins, bacterial",
                                                        "value": "SEED: DNA_structural_proteins,_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: DNA topoisomerases, Type I, ATP-independent",
                                                        "value": "SEED: DNA_topoisomerases,_Type_I,_ATP-independent"
                                                    },
                                                    {
                                                        "display": "SEED: DNA topoisomerases, Type II, ATP-dependent",
                                                        "value": "SEED: DNA_topoisomerases,_Type_II,_ATP-dependent"
                                                    },
                                                    {
                                                        "display": "SEED: Plasmid replication",
                                                        "value": "SEED: Plasmid_replication"
                                                    },
                                                    {
                                                        "display": "SEED: Restriction-Modification System",
                                                        "value": "SEED: Restriction-Modification_System"
                                                    },
                                                    {
                                                        "display": "SEED: RuvABC plus a hypothetical",
                                                        "value": "SEED: RuvABC_plus_a_hypothetical"
                                                    },
                                                    {
                                                        "display": "SEED: YcfH",
                                                        "value": "SEED: YcfH"
                                                    },
                                                    {
                                                        "display": "SEED: Bacillus biofilm matrix protein component TasA and homologs",
                                                        "value": "SEED: Bacillus_biofilm_matrix_protein_component_TasA_and_homologs"
                                                    },
                                                    {
                                                        "display": "SEED: Spore germination",
                                                        "value": "SEED: Spore_germination"
                                                    },
                                                    {
                                                        "display": "SEED: Sporulation Cluster III A",
                                                        "value": "SEED: Sporulation_Cluster_III_A"
                                                    },
                                                    {
                                                        "display": "SEED: Sporulation gene orphans",
                                                        "value": "SEED: Sporulation_gene_orphans"
                                                    },
                                                    {
                                                        "display": "SEED: Archaeal lipids",
                                                        "value": "SEED: Archaeal_lipids"
                                                    },
                                                    {
                                                        "display": "SEED: Carotenoids",
                                                        "value": "SEED: Carotenoids"
                                                    },
                                                    {
                                                        "display": "SEED: Fatty Acid Biosynthesis FASII",
                                                        "value": "SEED: Fatty_Acid_Biosynthesis_FASII"
                                                    },
                                                    {
                                                        "display": "SEED: Glycerolipid and Glycerophospholipid Metabolism in Bacteria",
                                                        "value": "SEED: Glycerolipid_and_Glycerophospholipid_Metabolism_in_Bacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Isoprenoid Biosynthesis",
                                                        "value": "SEED: Isoprenoid_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Polyhydroxybutyrate metabolism",
                                                        "value": "SEED: Polyhydroxybutyrate_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Polyprenyl Diphosphate Biosynthesis",
                                                        "value": "SEED: Polyprenyl_Diphosphate_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Terpen biosynthesis",
                                                        "value": "SEED: Terpen_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Triacylglycerol metabolism",
                                                        "value": "SEED: Triacylglycerol_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: polyprenyl synthesis",
                                                        "value": "SEED: polyprenyl_synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Campylobacter Iron Metabolism",
                                                        "value": "SEED: Campylobacter_Iron_Metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Heme, hemin uptake and utilization systems in GramPositives",
                                                        "value": "SEED: Heme,_hemin_uptake_and_utilization_systems_in_GramPositives"
                                                    },
                                                    {
                                                        "display": "SEED: Hemin transport system",
                                                        "value": "SEED: Hemin_transport_system"
                                                    },
                                                    {
                                                        "display": "SEED: Iron acquisition in Vibrio",
                                                        "value": "SEED: Iron_acquisition_in_Vibrio"
                                                    },
                                                    {
                                                        "display": "SEED: Siderophore Aerobactin",
                                                        "value": "SEED: Siderophore_Aerobactin"
                                                    },
                                                    {
                                                        "display": "SEED: Siderophore Enterobactin",
                                                        "value": "SEED: Siderophore_Enterobactin"
                                                    },
                                                    {
                                                        "display": "SEED: Siderophore Pyoverdine",
                                                        "value": "SEED: Siderophore_Pyoverdine"
                                                    },
                                                    {
                                                        "display": "SEED: Siderophore Staphylobactin",
                                                        "value": "SEED: Siderophore_Staphylobactin"
                                                    },
                                                    {
                                                        "display": "SEED: Siderophore pyochelin",
                                                        "value": "SEED: Siderophore_pyochelin"
                                                    },
                                                    {
                                                        "display": "SEED: Transport of Iron",
                                                        "value": "SEED: Transport_of_Iron"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter alkylphosphonate (TC 3.A.1.9.1)",
                                                        "value": "SEED: ABC_transporter_alkylphosphonate_(TC_3.A.1.9.1)"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter branched-chain amino acid (TC 3.A.1.4.1)",
                                                        "value": "SEED: ABC_transporter_branched-chain_amino_acid_(TC_3.A.1.4.1)"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter dipeptide (TC 3.A.1.5.2)",
                                                        "value": "SEED: ABC_transporter_dipeptide_(TC_3.A.1.5.2)"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter of unknown substrate X",
                                                        "value": "SEED: ABC_transporter_of_unknown_substrate_X"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter oligopeptide (TC 3.A.1.5.1)",
                                                        "value": "SEED: ABC_transporter_oligopeptide_(TC_3.A.1.5.1)"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter peptide (TC 3.A.1.5.5)",
                                                        "value": "SEED: ABC_transporter_peptide_(TC_3.A.1.5.5)"
                                                    },
                                                    {
                                                        "display": "SEED: ABC transporter tungstate (TC 3.A.1.6.2)",
                                                        "value": "SEED: ABC_transporter_tungstate_(TC_3.A.1.6.2)"
                                                    },
                                                    {
                                                        "display": "SEED: Agrobacterium opine transport",
                                                        "value": "SEED: Agrobacterium_opine_transport"
                                                    },
                                                    {
                                                        "display": "SEED: Choline Transport",
                                                        "value": "SEED: Choline_Transport"
                                                    },
                                                    {
                                                        "display": "SEED: Curli production",
                                                        "value": "SEED: Curli_production"
                                                    },
                                                    {
                                                        "display": "SEED: ECF class transporters",
                                                        "value": "SEED: ECF_class_transporters"
                                                    },
                                                    {
                                                        "display": "SEED: ESAT-6 proteins secretion system in Actinobacteria",
                                                        "value": "SEED: ESAT-6_proteins_secretion_system_in_Actinobacteria"
                                                    },
                                                    {
                                                        "display": "SEED: ESAT-6 proteins secretion system in Firmicutes",
                                                        "value": "SEED: ESAT-6_proteins_secretion_system_in_Firmicutes"
                                                    },
                                                    {
                                                        "display": "SEED: Fructose and Mannose Inducible PTS",
                                                        "value": "SEED: Fructose_and_Mannose_Inducible_PTS"
                                                    },
                                                    {
                                                        "display": "SEED: Mannose-sensitive hemagglutinin type 4 pilus",
                                                        "value": "SEED: Mannose-sensitive_hemagglutinin_type_4_pilus"
                                                    },
                                                    {
                                                        "display": "SEED: Na(+) H(+) antiporter",
                                                        "value": "SEED: Na(+)_H(+)_antiporter"
                                                    },
                                                    {
                                                        "display": "SEED: Sodium Hydrogen Antiporter",
                                                        "value": "SEED: Sodium_Hydrogen_Antiporter"
                                                    },
                                                    {
                                                        "display": "SEED: Ton and Tol transport systems",
                                                        "value": "SEED: Ton_and_Tol_transport_systems"
                                                    },
                                                    {
                                                        "display": "SEED: Toxin co-regulated pilus",
                                                        "value": "SEED: Toxin_co-regulated_pilus"
                                                    },
                                                    {
                                                        "display": "SEED: Transport of Manganese",
                                                        "value": "SEED: Transport_of_Manganese"
                                                    },
                                                    {
                                                        "display": "SEED: Transport of Molybdenum",
                                                        "value": "SEED: Transport_of_Molybdenum"
                                                    },
                                                    {
                                                        "display": "SEED: Transport of Nickel and Cobalt",
                                                        "value": "SEED: Transport_of_Nickel_and_Cobalt"
                                                    },
                                                    {
                                                        "display": "SEED: Transport of Zinc",
                                                        "value": "SEED: Transport_of_Zinc"
                                                    },
                                                    {
                                                        "display": "SEED: Twin-arginine translocation system",
                                                        "value": "SEED: Twin-arginine_translocation_system"
                                                    },
                                                    {
                                                        "display": "SEED: Type 4 conjugative transfer system, IncI1 type",
                                                        "value": "SEED: Type_4_conjugative_transfer_system,_IncI1_type"
                                                    },
                                                    {
                                                        "display": "SEED: Type III secretion system orphans",
                                                        "value": "SEED: Type_III_secretion_system_orphans"
                                                    },
                                                    {
                                                        "display": "SEED: Type IV pilus",
                                                        "value": "SEED: Type_IV_pilus"
                                                    },
                                                    {
                                                        "display": "SEED: Widespread colonization island",
                                                        "value": "SEED: Widespread_colonization_island"
                                                    },
                                                    {
                                                        "display": "SEED: pVir Plasmid of Campylobacter",
                                                        "value": "SEED: pVir_Plasmid_of_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: 4-Hydroxyphenylacetic acid catabolic pathway",
                                                        "value": "SEED: 4-Hydroxyphenylacetic_acid_catabolic_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Acetophenone carboxylase 1",
                                                        "value": "SEED: Acetophenone_carboxylase_1"
                                                    },
                                                    {
                                                        "display": "SEED: Anaerobic toluene and ethylbenzene degradation",
                                                        "value": "SEED: Anaerobic_toluene_and_ethylbenzene_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Aromatic Amin Catabolism",
                                                        "value": "SEED: Aromatic_Amin_Catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Benzoate degradation",
                                                        "value": "SEED: Benzoate_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Benzoate transport and degradation cluster",
                                                        "value": "SEED: Benzoate_transport_and_degradation_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: Biphenyl Degradation",
                                                        "value": "SEED: Biphenyl_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Catechol branch of beta-ketoadipate pathway",
                                                        "value": "SEED: Catechol_branch_of_beta-ketoadipate_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Central meta-cleavage pathway of aromatic compound degradation",
                                                        "value": "SEED: Central_meta-cleavage_pathway_of_aromatic_compound_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Chloroaromatic degradation pathway",
                                                        "value": "SEED: Chloroaromatic_degradation_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Cresol degradation",
                                                        "value": "SEED: Cresol_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Gentisare degradation",
                                                        "value": "SEED: Gentisare_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Homogentisate pathway of aromatic compound degradation",
                                                        "value": "SEED: Homogentisate_pathway_of_aromatic_compound_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: N-heterocyclic aromatic compound degradation",
                                                        "value": "SEED: N-heterocyclic_aromatic_compound_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Naphtalene and antracene degradation",
                                                        "value": "SEED: Naphtalene_and_antracene_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Phenylpropanoid compound degradation",
                                                        "value": "SEED: Phenylpropanoid_compound_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Protocatechuate branch of beta-ketoadipate pathway",
                                                        "value": "SEED: Protocatechuate_branch_of_beta-ketoadipate_pathway"
                                                    },
                                                    {
                                                        "display": "SEED: Quinate degradation",
                                                        "value": "SEED: Quinate_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Salicylate and gentisate catabolism",
                                                        "value": "SEED: Salicylate_and_gentisate_catabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Salicylate ester degradation",
                                                        "value": "SEED: Salicylate_ester_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Toluene degradation",
                                                        "value": "SEED: Toluene_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: carbazol degradation cluster",
                                                        "value": "SEED: carbazol_degradation_cluster"
                                                    },
                                                    {
                                                        "display": "SEED: n-Phenylalkanoic acid degradation",
                                                        "value": "SEED: n-Phenylalkanoic_acid_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: p-Hydroxybenzoate degradation",
                                                        "value": "SEED: p-Hydroxybenzoate_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: p-cymene degradation",
                                                        "value": "SEED: p-cymene_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Archease",
                                                        "value": "SEED: Archease"
                                                    },
                                                    {
                                                        "display": "SEED: Conserved gene cluster possibly involved in RNA metabolism",
                                                        "value": "SEED: Conserved_gene_cluster_possibly_involved_in_RNA_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Luciferases",
                                                        "value": "SEED: Luciferases"
                                                    },
                                                    {
                                                        "display": "SEED: Muconate lactonizing enzyme family",
                                                        "value": "SEED: Muconate_lactonizing_enzyme_family"
                                                    },
                                                    {
                                                        "display": "SEED: Synechocystis experimental",
                                                        "value": "SEED: Synechocystis_experimental"
                                                    },
                                                    {
                                                        "display": "SEED: YaaA",
                                                        "value": "SEED: YaaA"
                                                    },
                                                    {
                                                        "display": "SEED: YbbK",
                                                        "value": "SEED: YbbK"
                                                    },
                                                    {
                                                        "display": "SEED: ZZ gjo need homes",
                                                        "value": "SEED: ZZ_gjo_need_homes"
                                                    },
                                                    {
                                                        "display": "SEED: Archaeal Flagellum",
                                                        "value": "SEED: Archaeal_Flagellum"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial Chemotaxis",
                                                        "value": "SEED: Bacterial_Chemotaxis"
                                                    },
                                                    {
                                                        "display": "SEED: Flagellar motility",
                                                        "value": "SEED: Flagellar_motility"
                                                    },
                                                    {
                                                        "display": "SEED: Flagellum",
                                                        "value": "SEED: Flagellum"
                                                    },
                                                    {
                                                        "display": "SEED: Flagellum in Campylobacter",
                                                        "value": "SEED: Flagellum_in_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: Rhamnolipids in Pseudomonas",
                                                        "value": "SEED: Rhamnolipids_in_Pseudomonas"
                                                    },
                                                    {
                                                        "display": "SEED: Allantoin Utilization",
                                                        "value": "SEED: Allantoin_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Amidase clustered with urea and nitrile hydratase functions",
                                                        "value": "SEED: Amidase_clustered_with_urea_and_nitrile_hydratase_functions"
                                                    },
                                                    {
                                                        "display": "SEED: Ammonia assimilation",
                                                        "value": "SEED: Ammonia_assimilation"
                                                    },
                                                    {
                                                        "display": "SEED: Cyanate hydrolysis",
                                                        "value": "SEED: Cyanate_hydrolysis"
                                                    },
                                                    {
                                                        "display": "SEED: Denitrification",
                                                        "value": "SEED: Denitrification"
                                                    },
                                                    {
                                                        "display": "SEED: Dissimilatory nitrite reductase",
                                                        "value": "SEED: Dissimilatory_nitrite_reductase"
                                                    },
                                                    {
                                                        "display": "SEED: Nitrate and nitrite ammonification",
                                                        "value": "SEED: Nitrate_and_nitrite_ammonification"
                                                    },
                                                    {
                                                        "display": "SEED: Nitric oxide synthase",
                                                        "value": "SEED: Nitric_oxide_synthase"
                                                    },
                                                    {
                                                        "display": "SEED: Nitrogen fixation",
                                                        "value": "SEED: Nitrogen_fixation"
                                                    },
                                                    {
                                                        "display": "SEED: Nitrosative stress",
                                                        "value": "SEED: Nitrosative_stress"
                                                    },
                                                    {
                                                        "display": "SEED: AMP to 3-phosphoglycerate",
                                                        "value": "SEED: AMP_to_3-phosphoglycerate"
                                                    },
                                                    {
                                                        "display": "SEED: Adenosyl nucleosidases",
                                                        "value": "SEED: Adenosyl_nucleosidases"
                                                    },
                                                    {
                                                        "display": "SEED: De Novo Purine Biosynthesis",
                                                        "value": "SEED: De_Novo_Purine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: De Novo Pyrimidine Synthesis",
                                                        "value": "SEED: De_Novo_Pyrimidine_Synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Hydantoin metabolism",
                                                        "value": "SEED: Hydantoin_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Nucleoside triphosphate pyrophosphohydrolase MazG",
                                                        "value": "SEED: Nucleoside_triphosphate_pyrophosphohydrolase_MazG"
                                                    },
                                                    {
                                                        "display": "SEED: Nudix proteins (nucleoside triphosphate hydrolases)",
                                                        "value": "SEED: Nudix_proteins_(nucleoside_triphosphate_hydrolases)"
                                                    },
                                                    {
                                                        "display": "SEED: Purine Utilization",
                                                        "value": "SEED: Purine_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Purine conversions",
                                                        "value": "SEED: Purine_conversions"
                                                    },
                                                    {
                                                        "display": "SEED: Purine nucleotide synthesis regulator",
                                                        "value": "SEED: Purine_nucleotide_synthesis_regulator"
                                                    },
                                                    {
                                                        "display": "SEED: Pyrimidine utilization",
                                                        "value": "SEED: Pyrimidine_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Ribonucleotide reduction",
                                                        "value": "SEED: Ribonucleotide_reduction"
                                                    },
                                                    {
                                                        "display": "SEED: Xanthosine utilization (xap region)",
                                                        "value": "SEED: Xanthosine_utilization_(xap_region)"
                                                    },
                                                    {
                                                        "display": "SEED: Phage capsid proteins",
                                                        "value": "SEED: Phage_capsid_proteins"
                                                    },
                                                    {
                                                        "display": "SEED: Conjugative transposon, Bacteroidales",
                                                        "value": "SEED: Conjugative_transposon,_Bacteroidales"
                                                    },
                                                    {
                                                        "display": "SEED: IbrA and IbrB: co-activators of prophage gene expression",
                                                        "value": "SEED: IbrA_and_IbrB:_co-activators_of_prophage_gene_expression"
                                                    },
                                                    {
                                                        "display": "SEED: Integrons",
                                                        "value": "SEED: Integrons"
                                                    },
                                                    {
                                                        "display": "SEED: Listeria Pathogenicity Island LIPI-1 extended",
                                                        "value": "SEED: Listeria_Pathogenicity_Island_LIPI-1_extended"
                                                    },
                                                    {
                                                        "display": "SEED: Listeria phi-A118-like prophages",
                                                        "value": "SEED: Listeria_phi-A118-like_prophages"
                                                    },
                                                    {
                                                        "display": "SEED: Staphylococcal pathogenicity islands SaPI",
                                                        "value": "SEED: Staphylococcal_pathogenicity_islands_SaPI"
                                                    },
                                                    {
                                                        "display": "SEED: Staphylococcal phi-Mu50B-like prophages",
                                                        "value": "SEED: Staphylococcal_phi-Mu50B-like_prophages"
                                                    },
                                                    {
                                                        "display": "SEED: Tn552",
                                                        "value": "SEED: Tn552"
                                                    },
                                                    {
                                                        "display": "SEED: Vibrio pathogenicity island",
                                                        "value": "SEED: Vibrio_pathogenicity_island"
                                                    },
                                                    {
                                                        "display": "SEED: Alkylphosphonate utilization",
                                                        "value": "SEED: Alkylphosphonate_utilization"
                                                    },
                                                    {
                                                        "display": "SEED: High affinity phosphate transporter and control of PHO regulon",
                                                        "value": "SEED: High_affinity_phosphate_transporter_and_control_of_PHO_regulon"
                                                    },
                                                    {
                                                        "display": "SEED: Phosphate metabolism",
                                                        "value": "SEED: Phosphate_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Phosphonate metabolism",
                                                        "value": "SEED: Phosphonate_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial light-harvesting proteins",
                                                        "value": "SEED: Bacterial_light-harvesting_proteins"
                                                    },
                                                    {
                                                        "display": "SEED: Chlorosome",
                                                        "value": "SEED: Chlorosome"
                                                    },
                                                    {
                                                        "display": "SEED: Photosystem I",
                                                        "value": "SEED: Photosystem_I"
                                                    },
                                                    {
                                                        "display": "SEED: Photosystem I-type photosynthetic reaction center",
                                                        "value": "SEED: Photosystem_I-type_photosynthetic_reaction_center"
                                                    },
                                                    {
                                                        "display": "SEED: Photosystem II",
                                                        "value": "SEED: Photosystem_II"
                                                    },
                                                    {
                                                        "display": "SEED: Photosystem II-type photosynthetic reaction center",
                                                        "value": "SEED: Photosystem_II-type_photosynthetic_reaction_center"
                                                    },
                                                    {
                                                        "display": "SEED: Phycobilisome",
                                                        "value": "SEED: Phycobilisome"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione-regulated potassium-efflux system and associated functions",
                                                        "value": "SEED: Glutathione-regulated_potassium-efflux_system_and_associated_functions"
                                                    },
                                                    {
                                                        "display": "SEED: Potassium homeostasis",
                                                        "value": "SEED: Potassium_homeostasis"
                                                    },
                                                    {
                                                        "display": "SEED: pH adaptation potassium efflux system",
                                                        "value": "SEED: pH_adaptation_potassium_efflux_system"
                                                    },
                                                    {
                                                        "display": "SEED: Glycine reductase, sarcosine reductase and betaine reductase",
                                                        "value": "SEED: Glycine_reductase,_sarcosine_reductase_and_betaine_reductase"
                                                    },
                                                    {
                                                        "display": "SEED: GroEL GroES",
                                                        "value": "SEED: GroEL_GroES"
                                                    },
                                                    {
                                                        "display": "SEED: Inteins",
                                                        "value": "SEED: Inteins"
                                                    },
                                                    {
                                                        "display": "SEED: N-linked Glycosylation in Bacteria",
                                                        "value": "SEED: N-linked_Glycosylation_in_Bacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Peptidyl-prolyl cis-trans isomerase",
                                                        "value": "SEED: Peptidyl-prolyl_cis-trans_isomerase"
                                                    },
                                                    {
                                                        "display": "SEED: Periplasmic disulfide interchange",
                                                        "value": "SEED: Periplasmic_disulfide_interchange"
                                                    },
                                                    {
                                                        "display": "SEED: Programmed frameshift",
                                                        "value": "SEED: Programmed_frameshift"
                                                    },
                                                    {
                                                        "display": "SEED: Proteasome archaeal",
                                                        "value": "SEED: Proteasome_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Proteasome bacterial",
                                                        "value": "SEED: Proteasome_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Proteasome eukaryotic",
                                                        "value": "SEED: Proteasome_eukaryotic"
                                                    },
                                                    {
                                                        "display": "SEED: Protein chaperones",
                                                        "value": "SEED: Protein_chaperones"
                                                    },
                                                    {
                                                        "display": "SEED: Protein degradation",
                                                        "value": "SEED: Protein_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Protein secretion by ABC-type exporters",
                                                        "value": "SEED: Protein_secretion_by_ABC-type_exporters"
                                                    },
                                                    {
                                                        "display": "SEED: Proteolysis in bacteria, ATP-dependent",
                                                        "value": "SEED: Proteolysis_in_bacteria,_ATP-dependent"
                                                    },
                                                    {
                                                        "display": "SEED: Putative TldE-TldD proteolytic complex",
                                                        "value": "SEED: Putative_TldE-TldD_proteolytic_complex"
                                                    },
                                                    {
                                                        "display": "SEED: Pyrrolysine",
                                                        "value": "SEED: Pyrrolysine"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosomal protein S12p Asp methylthiotransferase",
                                                        "value": "SEED: Ribosomal_protein_S12p_Asp_methylthiotransferase"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosomal protein S5p acylation",
                                                        "value": "SEED: Ribosomal_protein_S5p_acylation"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome LSU bacterial",
                                                        "value": "SEED: Ribosome_LSU_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome LSU chloroplast",
                                                        "value": "SEED: Ribosome_LSU_chloroplast"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome LSU eukaryotic and archaeal",
                                                        "value": "SEED: Ribosome_LSU_eukaryotic_and_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome LSU mitochondrial",
                                                        "value": "SEED: Ribosome_LSU_mitochondrial"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome SSU bacterial",
                                                        "value": "SEED: Ribosome_SSU_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome SSU chloroplast",
                                                        "value": "SEED: Ribosome_SSU_chloroplast"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome SSU eukaryotic and archaeal",
                                                        "value": "SEED: Ribosome_SSU_eukaryotic_and_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome SSU mitochondrial",
                                                        "value": "SEED: Ribosome_SSU_mitochondrial"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome activity modulation",
                                                        "value": "SEED: Ribosome_activity_modulation"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome biogenesis bacterial",
                                                        "value": "SEED: Ribosome_biogenesis_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Selenocysteine metabolism",
                                                        "value": "SEED: Selenocysteine_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Signal peptidase",
                                                        "value": "SEED: Signal_peptidase"
                                                    },
                                                    {
                                                        "display": "SEED: Thermosome, archaeal",
                                                        "value": "SEED: Thermosome,_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Trans-translation by stalled ribosomes",
                                                        "value": "SEED: Trans-translation_by_stalled_ribosomes"
                                                    },
                                                    {
                                                        "display": "SEED: Translation elongation factor G family",
                                                        "value": "SEED: Translation_elongation_factor_G_family"
                                                    },
                                                    {
                                                        "display": "SEED: Translation elongation factors eukaryotic and archaeal",
                                                        "value": "SEED: Translation_elongation_factors_eukaryotic_and_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Translation initiation factors eukaryotic and archaeal",
                                                        "value": "SEED: Translation_initiation_factors_eukaryotic_and_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Universal GTPases",
                                                        "value": "SEED: Universal_GTPases"
                                                    },
                                                    {
                                                        "display": "SEED: rRNAs",
                                                        "value": "SEED: rRNAs"
                                                    },
                                                    {
                                                        "display": "SEED: tRNA aminoacylation, Asp and Asn",
                                                        "value": "SEED: tRNA_aminoacylation,_Asp_and_Asn"
                                                    },
                                                    {
                                                        "display": "SEED: tRNA aminoacylation, Glu and Gln",
                                                        "value": "SEED: tRNA_aminoacylation,_Glu_and_Gln"
                                                    },
                                                    {
                                                        "display": "SEED: tRNAs",
                                                        "value": "SEED: tRNAs"
                                                    },
                                                    {
                                                        "display": "SEED: ATP-dependent RNA helicases, bacterial",
                                                        "value": "SEED: ATP-dependent_RNA_helicases,_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Exosome",
                                                        "value": "SEED: Exosome"
                                                    },
                                                    {
                                                        "display": "SEED: Group II intron-associated genes",
                                                        "value": "SEED: Group_II_intron-associated_genes"
                                                    },
                                                    {
                                                        "display": "SEED: Polyadenylation bacterial",
                                                        "value": "SEED: Polyadenylation_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Queuosine-Archaeosine Biosynthesis",
                                                        "value": "SEED: Queuosine-Archaeosine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: RNA 3'-terminal phosphate cyclase",
                                                        "value": "SEED: RNA_3'-terminal_phosphate_cyclase"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase I",
                                                        "value": "SEED: RNA_polymerase_I"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase II",
                                                        "value": "SEED: RNA_polymerase_II"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase III",
                                                        "value": "SEED: RNA_polymerase_III"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase III initiation factors",
                                                        "value": "SEED: RNA_polymerase_III_initiation_factors"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase II initiation factors",
                                                        "value": "SEED: RNA_polymerase_II_initiation_factors"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase archaeal",
                                                        "value": "SEED: RNA_polymerase_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase archaeal initiation factors",
                                                        "value": "SEED: RNA_polymerase_archaeal_initiation_factors"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase bacterial",
                                                        "value": "SEED: RNA_polymerase_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: RNA polymerase chloroplast",
                                                        "value": "SEED: RNA_polymerase_chloroplast"
                                                    },
                                                    {
                                                        "display": "SEED: RNA processing and degradation, bacterial",
                                                        "value": "SEED: RNA_processing_and_degradation,_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Ribonuclease H",
                                                        "value": "SEED: Ribonuclease_H"
                                                    },
                                                    {
                                                        "display": "SEED: Ribonuclease P archaeal and eukaryal",
                                                        "value": "SEED: Ribonuclease_P_archaeal_and_eukaryal"
                                                    },
                                                    {
                                                        "display": "SEED: Ribosome biogenesis archaeal",
                                                        "value": "SEED: Ribosome_biogenesis_archaeal"
                                                    },
                                                    {
                                                        "display": "SEED: Rrf2 family transcriptional regulators",
                                                        "value": "SEED: Rrf2_family_transcriptional_regulators"
                                                    },
                                                    {
                                                        "display": "SEED: Spliceosome",
                                                        "value": "SEED: Spliceosome"
                                                    },
                                                    {
                                                        "display": "SEED: Transcription factors bacterial",
                                                        "value": "SEED: Transcription_factors_bacterial"
                                                    },
                                                    {
                                                        "display": "SEED: Transcription factors cyanobacterial RpoD-like sigma factors",
                                                        "value": "SEED: Transcription_factors_cyanobacterial_RpoD-like_sigma_factors"
                                                    },
                                                    {
                                                        "display": "SEED: Transcription initiation, bacterial sigma factors",
                                                        "value": "SEED: Transcription_initiation,_bacterial_sigma_factors"
                                                    },
                                                    {
                                                        "display": "SEED: Wyeosine-MimG Biosynthesis",
                                                        "value": "SEED: Wyeosine-MimG_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: tRNA nucleotidyltransferase",
                                                        "value": "SEED: tRNA_nucleotidyltransferase"
                                                    },
                                                    {
                                                        "display": "SEED: tRNA processing",
                                                        "value": "SEED: tRNA_processing"
                                                    },
                                                    {
                                                        "display": "SEED: tRNA splicing",
                                                        "value": "SEED: tRNA_splicing"
                                                    },
                                                    {
                                                        "display": "SEED: Autoinducer 2 (AI-2) transport and processing (lsrACDBFGE operon)",
                                                        "value": "SEED: Autoinducer_2_(AI-2)_transport_and_processing_(lsrACDBFGE_operon)"
                                                    },
                                                    {
                                                        "display": "SEED: Biofilm formation in Staphylococcus",
                                                        "value": "SEED: Biofilm_formation_in_Staphylococcus"
                                                    },
                                                    {
                                                        "display": "SEED: Coagulation cascade",
                                                        "value": "SEED: Coagulation_cascade"
                                                    },
                                                    {
                                                        "display": "SEED: CytR regulation",
                                                        "value": "SEED: CytR_regulation"
                                                    },
                                                    {
                                                        "display": "SEED: DNA-binding regulatory proteins, strays",
                                                        "value": "SEED: DNA-binding_regulatory_proteins,_strays"
                                                    },
                                                    {
                                                        "display": "SEED: MazEF toxin-antitoxing (programmed cell death) system",
                                                        "value": "SEED: MazEF_toxin-antitoxing_(programmed_cell_death)_system"
                                                    },
                                                    {
                                                        "display": "SEED: Murein hydrolase regulation and cell death",
                                                        "value": "SEED: Murein_hydrolase_regulation_and_cell_death"
                                                    },
                                                    {
                                                        "display": "SEED: Orphan regulatory proteins",
                                                        "value": "SEED: Orphan_regulatory_proteins"
                                                    },
                                                    {
                                                        "display": "SEED: Oxygen and light sensor PpaA-PpsR",
                                                        "value": "SEED: Oxygen_and_light_sensor_PpaA-PpsR"
                                                    },
                                                    {
                                                        "display": "SEED: Pseudomonas quinolone signal PQS",
                                                        "value": "SEED: Pseudomonas_quinolone_signal_PQS"
                                                    },
                                                    {
                                                        "display": "SEED: Quorum Sensing: Autoinducer-2 Synthesis",
                                                        "value": "SEED: Quorum_Sensing:_Autoinducer-2_Synthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Quorum sensing regulation in Pseudomonas",
                                                        "value": "SEED: Quorum_sensing_regulation_in_Pseudomonas"
                                                    },
                                                    {
                                                        "display": "SEED: Regulatory Intramembrane Proteolysis Pathways",
                                                        "value": "SEED: Regulatory_Intramembrane_Proteolysis_Pathways"
                                                    },
                                                    {
                                                        "display": "SEED: Sex pheromones in Enterococcus faecalis and other Firmicutes",
                                                        "value": "SEED: Sex_pheromones_in_Enterococcus_faecalis_and_other_Firmicutes"
                                                    },
                                                    {
                                                        "display": "SEED: SpeB-SpeF extended regulon",
                                                        "value": "SEED: SpeB-SpeF_extended_regulon"
                                                    },
                                                    {
                                                        "display": "SEED: Streptococcal Mga Regulon",
                                                        "value": "SEED: Streptococcal_Mga_Regulon"
                                                    },
                                                    {
                                                        "display": "SEED: Stringent Response, (p)ppGpp metabolism",
                                                        "value": "SEED: Stringent_Response,_(p)ppGpp_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Toxin-antitoxin replicon stabilization systems",
                                                        "value": "SEED: Toxin-antitoxin_replicon_stabilization_systems"
                                                    },
                                                    {
                                                        "display": "SEED: Two-component regulatory systems in Campylobacter",
                                                        "value": "SEED: Two-component_regulatory_systems_in_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: cAMP signaling in bacteria",
                                                        "value": "SEED: cAMP_signaling_in_bacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Anaerobic respiratory reductases",
                                                        "value": "SEED: Anaerobic_respiratory_reductases"
                                                    },
                                                    {
                                                        "display": "SEED: Biogenesis of c-type cytochromes",
                                                        "value": "SEED: Biogenesis_of_c-type_cytochromes"
                                                    },
                                                    {
                                                        "display": "SEED: Biogenesis of cbb3-type cytochrome c oxidases",
                                                        "value": "SEED: Biogenesis_of_cbb3-type_cytochrome_c_oxidases"
                                                    },
                                                    {
                                                        "display": "SEED: Biogenesis of cytochrome c oxidases",
                                                        "value": "SEED: Biogenesis_of_cytochrome_c_oxidases"
                                                    },
                                                    {
                                                        "display": "SEED: CO Dehydrogenase",
                                                        "value": "SEED: CO_Dehydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Carbon monoxide dehydrogenase maturation factors",
                                                        "value": "SEED: Carbon_monoxide_dehydrogenase_maturation_factors"
                                                    },
                                                    {
                                                        "display": "SEED: Carbon monoxide induced hydrogenase",
                                                        "value": "SEED: Carbon_monoxide_induced_hydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme F420-H2 dehydrogenase (methanophenazine)",
                                                        "value": "SEED: Coenzyme_F420-H2_dehydrogenase_(methanophenazine)"
                                                    },
                                                    {
                                                        "display": "SEED: Coenzyme F420 hydrogenase",
                                                        "value": "SEED: Coenzyme_F420_hydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Cytochrome B6-F complex",
                                                        "value": "SEED: Cytochrome_B6-F_complex"
                                                    },
                                                    {
                                                        "display": "SEED: Energy-conserving hydrogenase (ferredoxin)",
                                                        "value": "SEED: Energy-conserving_hydrogenase_(ferredoxin)"
                                                    },
                                                    {
                                                        "display": "SEED: F0F1-type ATP synthase",
                                                        "value": "SEED: F0F1-type_ATP_synthase"
                                                    },
                                                    {
                                                        "display": "SEED: Flavocytochrome C",
                                                        "value": "SEED: Flavocytochrome_C"
                                                    },
                                                    {
                                                        "display": "SEED: Formate dehydrogenase",
                                                        "value": "SEED: Formate_dehydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Formate hydrogenase",
                                                        "value": "SEED: Formate_hydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: H2:CoM-S-S-HTP oxidoreductase",
                                                        "value": "SEED: H2:CoM-S-S-HTP_oxidoreductase"
                                                    },
                                                    {
                                                        "display": "SEED: Hydrogenases",
                                                        "value": "SEED: Hydrogenases"
                                                    },
                                                    {
                                                        "display": "SEED: Membrane-bound Ni, Fe-hydrogenase",
                                                        "value": "SEED: Membrane-bound_Ni,_Fe-hydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Methanophenazine hydrogenase",
                                                        "value": "SEED: Methanophenazine_hydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Na(+)-translocating NADH-quinone oxidoreductase and rnf-like group of electron transport complexes",
                                                        "value": "SEED: Na(+)-translocating_NADH-quinone_oxidoreductase_and_rnf-like_group_of_electron_transport_complexes"
                                                    },
                                                    {
                                                        "display": "SEED: Na+ translocating decarboxylases and related biotin-dependent enzymes",
                                                        "value": "SEED: Na+_translocating_decarboxylases_and_related_biotin-dependent_enzymes"
                                                    },
                                                    {
                                                        "display": "SEED: NiFe hydrogenase maturation",
                                                        "value": "SEED: NiFe_hydrogenase_maturation"
                                                    },
                                                    {
                                                        "display": "SEED: Reductive Dechlorination",
                                                        "value": "SEED: Reductive_Dechlorination"
                                                    },
                                                    {
                                                        "display": "SEED: Respiratory Complex I",
                                                        "value": "SEED: Respiratory_Complex_I"
                                                    },
                                                    {
                                                        "display": "SEED: Respiratory dehydrogenases 1",
                                                        "value": "SEED: Respiratory_dehydrogenases_1"
                                                    },
                                                    {
                                                        "display": "SEED: Soluble cytochromes and functionally related electron carriers",
                                                        "value": "SEED: Soluble_cytochromes_and_functionally_related_electron_carriers"
                                                    },
                                                    {
                                                        "display": "SEED: Succinate dehydrogenase",
                                                        "value": "SEED: Succinate_dehydrogenase"
                                                    },
                                                    {
                                                        "display": "SEED: Terminal AA3-600 quinol oxidase",
                                                        "value": "SEED: Terminal_AA3-600_quinol_oxidase"
                                                    },
                                                    {
                                                        "display": "SEED: Terminal cytochrome C oxidases",
                                                        "value": "SEED: Terminal_cytochrome_C_oxidases"
                                                    },
                                                    {
                                                        "display": "SEED: Terminal cytochrome O ubiquinol oxidase",
                                                        "value": "SEED: Terminal_cytochrome_O_ubiquinol_oxidase"
                                                    },
                                                    {
                                                        "display": "SEED: Terminal cytochrome d ubiquinol oxidases",
                                                        "value": "SEED: Terminal_cytochrome_d_ubiquinol_oxidases"
                                                    },
                                                    {
                                                        "display": "SEED: Terminal cytochrome oxidases",
                                                        "value": "SEED: Terminal_cytochrome_oxidases"
                                                    },
                                                    {
                                                        "display": "SEED: Tetrathionate respiration",
                                                        "value": "SEED: Tetrathionate_respiration"
                                                    },
                                                    {
                                                        "display": "SEED: Ubiquinone Menaquinone-cytochrome c reductase complexes",
                                                        "value": "SEED: Ubiquinone_Menaquinone-cytochrome_c_reductase_complexes"
                                                    },
                                                    {
                                                        "display": "SEED: V-Type ATP synthase",
                                                        "value": "SEED: V-Type_ATP_synthase"
                                                    },
                                                    {
                                                        "display": "SEED: trimethylamine N-oxide (TMAO) reductase",
                                                        "value": "SEED: trimethylamine_N-oxide_(TMAO)_reductase"
                                                    },
                                                    {
                                                        "display": "SEED: 2-isocapryloyl-3R-hydroxymethyl-gamma-butyrolactone and other bacterial morphogens",
                                                        "value": "SEED: 2-isocapryloyl-3R-hydroxymethyl-gamma-butyrolactone_and_other_bacterial_morphogens"
                                                    },
                                                    {
                                                        "display": "SEED: Alkaloid biosynthesis from L-lysine",
                                                        "value": "SEED: Alkaloid_biosynthesis_from_L-lysine"
                                                    },
                                                    {
                                                        "display": "SEED: Apigenin derivatives",
                                                        "value": "SEED: Apigenin_derivatives"
                                                    },
                                                    {
                                                        "display": "SEED: Auxin biosynthesis",
                                                        "value": "SEED: Auxin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Auxin degradation",
                                                        "value": "SEED: Auxin_degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Biflavanoid biosynthesis",
                                                        "value": "SEED: Biflavanoid_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Caffeic acid derivatives",
                                                        "value": "SEED: Caffeic_acid_derivatives"
                                                    },
                                                    {
                                                        "display": "SEED: Cannabinoid biosynthesis",
                                                        "value": "SEED: Cannabinoid_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Cinnamic Acid Degradation",
                                                        "value": "SEED: Cinnamic_Acid_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Clavulanic acid biosynthesis",
                                                        "value": "SEED: Clavulanic_acid_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Flavanone biosynthesis",
                                                        "value": "SEED: Flavanone_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Lignine biosynthesis",
                                                        "value": "SEED: Lignine_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Octadecanoids",
                                                        "value": "SEED: Octadecanoids"
                                                    },
                                                    {
                                                        "display": "SEED: Phenazine biosynthesis",
                                                        "value": "SEED: Phenazine_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Phenylpropanoids general biosynthesis",
                                                        "value": "SEED: Phenylpropanoids_general_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Phenylpropionate Degradation",
                                                        "value": "SEED: Phenylpropionate_Degradation"
                                                    },
                                                    {
                                                        "display": "SEED: Phytoalexin biosynthesis",
                                                        "value": "SEED: Phytoalexin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Phytosterol biosynthesis",
                                                        "value": "SEED: Phytosterol_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Quinolinic acid and its derivatives",
                                                        "value": "SEED: Quinolinic_acid_and_its_derivatives"
                                                    },
                                                    {
                                                        "display": "SEED: Salicylic acid biosynthesis1",
                                                        "value": "SEED: Salicylic_acid_biosynthesis1"
                                                    },
                                                    {
                                                        "display": "SEED: Steroid sulfates",
                                                        "value": "SEED: Steroid_sulfates"
                                                    },
                                                    {
                                                        "display": "SEED: Suberine biosynthesis",
                                                        "value": "SEED: Suberine_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Tannin biosynthesis",
                                                        "value": "SEED: Tannin_biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: Acid resistance mechanisms",
                                                        "value": "SEED: Acid_resistance_mechanisms"
                                                    },
                                                    {
                                                        "display": "SEED: Bacterial hemoglobins",
                                                        "value": "SEED: Bacterial_hemoglobins"
                                                    },
                                                    {
                                                        "display": "SEED: Betaine biosynthesis from glycine",
                                                        "value": "SEED: Betaine_biosynthesis_from_glycine"
                                                    },
                                                    {
                                                        "display": "SEED: Choline and Betaine Uptake and Betaine Biosynthesis",
                                                        "value": "SEED: Choline_and_Betaine_Uptake_and_Betaine_Biosynthesis"
                                                    },
                                                    {
                                                        "display": "SEED: D-tyrosyl-tRNA(Tyr) deacylase",
                                                        "value": "SEED: D-tyrosyl-tRNA(Tyr)_deacylase"
                                                    },
                                                    {
                                                        "display": "SEED: Dimethylarginine metabolism",
                                                        "value": "SEED: Dimethylarginine_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Ectoine biosynthesis and regulation",
                                                        "value": "SEED: Ectoine_biosynthesis_and_regulation"
                                                    },
                                                    {
                                                        "display": "SEED: Flavohaemoglobin",
                                                        "value": "SEED: Flavohaemoglobin"
                                                    },
                                                    {
                                                        "display": "SEED: Glutaredoxins",
                                                        "value": "SEED: Glutaredoxins"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione-dependent pathway of formaldehyde detoxification",
                                                        "value": "SEED: Glutathione-dependent_pathway_of_formaldehyde_detoxification"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione: Biosynthesis and gamma-glutamyl cycle",
                                                        "value": "SEED: Glutathione:_Biosynthesis_and_gamma-glutamyl_cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione: Non-redox reactions",
                                                        "value": "SEED: Glutathione:_Non-redox_reactions"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione: Redox cycle",
                                                        "value": "SEED: Glutathione:_Redox_cycle"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathione analogs: mycothiol",
                                                        "value": "SEED: Glutathione_analogs:_mycothiol"
                                                    },
                                                    {
                                                        "display": "SEED: Glutathionylspermidine and Trypanothione",
                                                        "value": "SEED: Glutathionylspermidine_and_Trypanothione"
                                                    },
                                                    {
                                                        "display": "SEED: Heat shock dnaK gene cluster extended",
                                                        "value": "SEED: Heat_shock_dnaK_gene_cluster_extended"
                                                    },
                                                    {
                                                        "display": "SEED: Hfl operon",
                                                        "value": "SEED: Hfl_operon"
                                                    },
                                                    {
                                                        "display": "SEED: Oxidative stress",
                                                        "value": "SEED: Oxidative_stress"
                                                    },
                                                    {
                                                        "display": "SEED: Redox-dependent regulation of nucleus processes",
                                                        "value": "SEED: Redox-dependent_regulation_of_nucleus_processes"
                                                    },
                                                    {
                                                        "display": "SEED: Rubrerythrin",
                                                        "value": "SEED: Rubrerythrin"
                                                    },
                                                    {
                                                        "display": "SEED: SigmaB stress responce regulation",
                                                        "value": "SEED: SigmaB_stress_responce_regulation"
                                                    },
                                                    {
                                                        "display": "SEED: Sugar-phosphate stress regulation",
                                                        "value": "SEED: Sugar-phosphate_stress_regulation"
                                                    },
                                                    {
                                                        "display": "SEED: Universal stress protein family",
                                                        "value": "SEED: Universal_stress_protein_family"
                                                    },
                                                    {
                                                        "display": "SEED: Alkanesulfonate assimilation",
                                                        "value": "SEED: Alkanesulfonate_assimilation"
                                                    },
                                                    {
                                                        "display": "SEED: Alkanesulfonates Utilization",
                                                        "value": "SEED: Alkanesulfonates_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: DMSP breakdown",
                                                        "value": "SEED: DMSP_breakdown"
                                                    },
                                                    {
                                                        "display": "SEED: Galactosylceramide and Sulfatide metabolism",
                                                        "value": "SEED: Galactosylceramide_and_Sulfatide_metabolism"
                                                    },
                                                    {
                                                        "display": "SEED: Sulfate reduction-associated complexes",
                                                        "value": "SEED: Sulfate_reduction-associated_complexes"
                                                    },
                                                    {
                                                        "display": "SEED: Sulfur oxidation",
                                                        "value": "SEED: Sulfur_oxidation"
                                                    },
                                                    {
                                                        "display": "SEED: Taurine Utilization",
                                                        "value": "SEED: Taurine_Utilization"
                                                    },
                                                    {
                                                        "display": "SEED: Thioredoxin-disulfide reductase",
                                                        "value": "SEED: Thioredoxin-disulfide_reductase"
                                                    },
                                                    {
                                                        "display": "SEED: Utilization of glutathione as a sulphur source",
                                                        "value": "SEED: Utilization_of_glutathione_as_a_sulphur_source"
                                                    },
                                                    {
                                                        "display": "SEED: Type 4 secretion and conjugative transfer",
                                                        "value": "SEED: Type_4_secretion_and_conjugative_transfer"
                                                    },
                                                    {
                                                        "display": "SEED: Adhesins in Staphylococcus",
                                                        "value": "SEED: Adhesins_in_Staphylococcus"
                                                    },
                                                    {
                                                        "display": "SEED: Adhesion of Campylobacter",
                                                        "value": "SEED: Adhesion_of_Campylobacter"
                                                    },
                                                    {
                                                        "display": "SEED: Aminoglycoside adenylyltransferases",
                                                        "value": "SEED: Aminoglycoside_adenylyltransferases"
                                                    },
                                                    {
                                                        "display": "SEED: Arsenic resistance",
                                                        "value": "SEED: Arsenic_resistance"
                                                    },
                                                    {
                                                        "display": "SEED: Bacteriocin-like peptides Blp",
                                                        "value": "SEED: Bacteriocin-like_peptides_Blp"
                                                    },
                                                    {
                                                        "display": "SEED: Beta-lactamase",
                                                        "value": "SEED: Beta-lactamase"
                                                    },
                                                    {
                                                        "display": "SEED: Cholera toxin",
                                                        "value": "SEED: Cholera_toxin"
                                                    },
                                                    {
                                                        "display": "SEED: Cobalt-zinc-cadmium resistance",
                                                        "value": "SEED: Cobalt-zinc-cadmium_resistance"
                                                    },
                                                    {
                                                        "display": "SEED: Copper homeostasis",
                                                        "value": "SEED: Copper_homeostasis"
                                                    },
                                                    {
                                                        "display": "SEED: Copper homeostasis: copper tolerance",
                                                        "value": "SEED: Copper_homeostasis:_copper_tolerance"
                                                    },
                                                    {
                                                        "display": "SEED: Cytolethal distending toxin of Campylobacter jejuni",
                                                        "value": "SEED: Cytolethal_distending_toxin_of_Campylobacter_jejuni"
                                                    },
                                                    {
                                                        "display": "SEED: Cytolysin and Lipase operon in Vibrio",
                                                        "value": "SEED: Cytolysin_and_Lipase_operon_in_Vibrio"
                                                    },
                                                    {
                                                        "display": "SEED: Fosfomycin resistance",
                                                        "value": "SEED: Fosfomycin_resistance"
                                                    },
                                                    {
                                                        "display": "SEED: Listeria surface proteins: Internalin-like proteins",
                                                        "value": "SEED: Listeria_surface_proteins:_Internalin-like_proteins"
                                                    },
                                                    {
                                                        "display": "SEED: Listeria surface proteins: LPXTG motif",
                                                        "value": "SEED: Listeria_surface_proteins:_LPXTG_motif"
                                                    },
                                                    {
                                                        "display": "SEED: MLST",
                                                        "value": "SEED: MLST"
                                                    },
                                                    {
                                                        "display": "SEED: Mercuric reductase",
                                                        "value": "SEED: Mercuric_reductase"
                                                    },
                                                    {
                                                        "display": "SEED: Mercury resistance operon",
                                                        "value": "SEED: Mercury_resistance_operon"
                                                    },
                                                    {
                                                        "display": "SEED: Methicillin resistance in Staphylococci",
                                                        "value": "SEED: Methicillin_resistance_in_Staphylococci"
                                                    },
                                                    {
                                                        "display": "SEED: Multidrug Resistance, 2-protein version Found in Gram-positive bacteria",
                                                        "value": "SEED: Multidrug_Resistance,_2-protein_version_Found_in_Gram-positive_bacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Multidrug Resistance, Tripartite Systems Found in Gram Negative Bacteria",
                                                        "value": "SEED: Multidrug_Resistance,_Tripartite_Systems_Found_in_Gram_Negative_Bacteria"
                                                    },
                                                    {
                                                        "display": "SEED: Multidrug Resistance Efflux Pumps",
                                                        "value": "SEED: Multidrug_Resistance_Efflux_Pumps"
                                                    },
                                                    {
                                                        "display": "SEED: Multidrug efflux pump in Campylobacter jejuni (CmeABC operon)",
                                                        "value": "SEED: Multidrug_efflux_pump_in_Campylobacter_jejuni_(CmeABC_operon)"
                                                    },
                                                    {
                                                        "display": "SEED: Prophage-encoded Exotoxins",
                                                        "value": "SEED: Prophage-encoded_Exotoxins"
                                                    },
                                                    {
                                                        "display": "SEED: Resistance to Vancomycin",
                                                        "value": "SEED: Resistance_to_Vancomycin"
                                                    },
                                                    {
                                                        "display": "SEED: Resistance to fluoroquinolones",
                                                        "value": "SEED: Resistance_to_fluoroquinolones"
                                                    },
                                                    {
                                                        "display": "SEED: Salmonella invasion locus",
                                                        "value": "SEED: Salmonella_invasion_locus"
                                                    },
                                                    {
                                                        "display": "SEED: Streptococcus pneumoniae Vancomycin Tolerance Locus",
                                                        "value": "SEED: Streptococcus_pneumoniae_Vancomycin_Tolerance_Locus"
                                                    },
                                                    {
                                                        "display": "SEED: Streptococcus pyogenes Virulome",
                                                        "value": "SEED: Streptococcus_pyogenes_Virulome"
                                                    },
                                                    {
                                                        "display": "SEED: Streptococcus pyogenes recombinatorial zone",
                                                        "value": "SEED: Streptococcus_pyogenes_recombinatorial_zone"
                                                    },
                                                    {
                                                        "display": "SEED: Streptolysin S Biosynthesis and Transport",
                                                        "value": "SEED: Streptolysin_S_Biosynthesis_and_Transport"
                                                    },
                                                    {
                                                        "display": "SEED: Streptothricin resistance",
                                                        "value": "SEED: Streptothricin_resistance"
                                                    },
                                                    {
                                                        "display": "SEED: Zinc resistance",
                                                        "value": "SEED: Zinc_resistance"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "extra_target_fam_groups_SEED",
                                            "optional": 1,
                                            "short_hint": "Domain Families from particular namespace groups to target in the analysis",
                                            "ui_class": "parameter",
                                            "ui_name": "Custom Domain Groups (SEED)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "perc_annot"
                                            ],
                                            "description": "Calculate numbers as percentages or raw counts",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "raw count of genes with the annotation",
                                                        "index": 0,
                                                        "value": "raw_count"
                                                    },
                                                    {
                                                        "display": "percentage of annotated protein-coding genes",
                                                        "index": 1,
                                                        "value": "perc_annot"
                                                    },
                                                    {
                                                        "display": "percentage of all protein-coding genes",
                                                        "index": 2,
                                                        "value": "perc_all"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "count_category",
                                            "optional": 0,
                                            "short_hint": "Calculate numbers as percentages or raw counts",
                                            "ui_class": "parameter",
                                            "ui_name": "View values as"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Display as heatmap or numerical table",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "heatmap",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "numerical",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "heatmap",
                                            "optional": 0,
                                            "short_hint": "Display as heatmap or numerical table",
                                            "ui_class": "parameter",
                                            "ui_name": "View table as"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Set if you want the heatmap to show colors using a log scale",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "log_base",
                                            "optional": 1,
                                            "short_hint": "Set if you want the heatmap to show colors using a log scale",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 1.1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Heatmap Log Base (optional)"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1e-5"
                                            ],
                                            "description": "Ignore domain hits below e-value threshold",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "e_value",
                                            "optional": 0,
                                            "short_hint": "Ignore domain hits below e-value threshold",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 0.1,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "E-value lower limit"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Show table with genomes as rows",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "rows",
                                                        "index": 0,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "vertical",
                                            "optional": 0,
                                            "short_hint": "Show table with genomes as rows",
                                            "ui_class": "parameter",
                                            "ui_name": "View genomes as"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Count only the top hit per gene within a namespace (e.g. Pfam)",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "top domain hit to gene only",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "all domain hits to gene",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "top_hit",
                                            "optional": 0,
                                            "short_hint": "Count only the top hit per gene within a namespace (e.g. Pfam)",
                                            "ui_class": "parameter",
                                            "ui_name": "Count annotated genes using"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Show categories or families that have no counts",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "show categories with no hits",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "hide categories with no hits",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "show_blanks",
                                            "optional": 0,
                                            "short_hint": "Show categories or families that have no counts",
                                            "ui_class": "parameter",
                                            "ui_name": "Empty categories"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "368552b2-6936-4b18-b0fb-249d38f892e0",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                    "creation_time": 1523378742995,
                                    "exec_start_time": 1523378744895,
                                    "finish_time": 1523378813191,
                                    "finished": 1,
                                    "job_id": "5accea36e4b09663c3f59dd7",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_phylogenomics_report_ec3d88eb-00f6-4bb3-9742-7f1a7ccac3e4",
                                            "report_ref": "30462/106/1"
                                        }
                                    ],
                                    "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2",
                                    "status": [
                                        "2018-04-10T16:46:53+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523378815224,
                                "launchState": {
                                    "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T16:45:43.006804Z",
                                    "job_id": "5accea36e4b09663c3f59dd7",
                                    "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T16:45:42.480Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T16:45:43.028Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "368552b2-6936-4b18-b0fb-249d38f892e0",
                                                "awe_job_state": "queued",
                                                "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                                "creation_time": 1523378742995,
                                                "finished": 0,
                                                "job_id": "5accea36e4b09663c3f59dd7",
                                                "job_state": "queued",
                                                "position": 14,
                                                "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2",
                                                "status": [
                                                    "2018-04-10T16:45:42+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "3f2a7353-0f41-4aa9-9336-1e4c48eca67d",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T16:45:43.390Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "368552b2-6936-4b18-b0fb-249d38f892e0",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                                "creation_time": 1523378742995,
                                                "finished": 0,
                                                "job_id": "5accea36e4b09663c3f59dd7",
                                                "job_state": "queued",
                                                "position": 14,
                                                "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2",
                                                "status": [
                                                    "2018-04-10T16:45:42+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T16:45:43.588Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "368552b2-6936-4b18-b0fb-249d38f892e0",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                                "creation_time": 1523378742995,
                                                "exec_start_time": 1523378744895,
                                                "finished": 0,
                                                "job_id": "5accea36e4b09663c3f59dd7",
                                                "job_state": "in-progress",
                                                "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2",
                                                "status": [
                                                    "2018-04-10T16:45:44+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T16:45:54.050Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "368552b2-6936-4b18-b0fb-249d38f892e0",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                                                "creation_time": 1523378742995,
                                                "exec_start_time": 1523378744895,
                                                "finish_time": 1523378813191,
                                                "finished": 1,
                                                "job_id": "5accea36e4b09663c3f59dd7",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "kb_phylogenomics_report_ec3d88eb-00f6-4bb3-9742-7f1a7ccac3e4",
                                                        "report_ref": "30462/106/1"
                                                    }
                                                ],
                                                "run_id": "8e9187ed-ed9c-44ae-8213-0e02718760b2",
                                                "status": [
                                                    "2018-04-10T16:46:53+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T16:46:55.222Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_phylogenomics_report_ec3d88eb-00f6-4bb3-9742-7f1a7ccac3e4",
                                        "report_ref": "30462/106/1",
                                        "workspace_name": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5accea36e4b09663c3f59dd7": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 18:11:38 GMT",
                                        "params": {
                                            "count_category": "perc_annot",
                                            "custom_target_fams": null,
                                            "e_value": 1e-05,
                                            "heatmap": "1",
                                            "input_speciesTree_ref": "janthinobacterium_10_closest_tree",
                                            "log_base": null,
                                            "namespace": "COG",
                                            "show_blanks": "0",
                                            "top_hit": "1",
                                            "vertical": "1"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "count_category": "perc_annot",
                                "custom_target_fams": null,
                                "e_value": 1e-05,
                                "heatmap": "1",
                                "input_speciesTree_ref": "janthinobacterium_10_closest_tree",
                                "log_base": null,
                                "namespace": "COG",
                                "show_blanks": "0",
                                "top_hit": "1",
                                "vertical": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 16:45:14 GMT",
                            "id": "b19fb4b1-4867-4fef-9d70-cd553621bf9f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_phylogenomics/view_fxn_profile_phylo/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Examine the general functional distribution or specific functional gene families for the Genomes in a Species Tree",
                            "title": "View Function Profile Phylo - v1.0.0"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_phylogenomics/view_fxn_profile_phylo\",\n    {\n        \"input_speciesTree_ref\": \"janthinobacterium_10_closest_tree\",\n        \"namespace\": \"COG\",\n        \"custom_target_fams\": None,\n        \"count_category\": \"perc_annot\",\n        \"heatmap\": \"1\",\n        \"log_base\": None,\n        \"e_value\": 0.00001,\n        \"vertical\": \"1\",\n        \"top_hit\": \"1\",\n        \"show_blanks\": \"0\"\n    },\n    tag=\"release\",\n    version=\"1.0.1\",\n    cell_id=\"b19fb4b1-4867-4fef-9d70-cd553621bf9f\",\n    run_id=\"8e9187ed-ed9c-44ae-8213-0e02718760b2\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Compare genomes in pangenome"
                        },
                        "cellState": {
                            "message": "",
                            "selected": true,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Compare genomes in pangenome"
            },
            {
                "cell_type": "code",
                "execution_count": 37,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4f5874f57e7c366a6d373200a76f0d5c3fe7a887",
                                "id": "GenomeComparisonSDK/compare_genomes",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_pangenome",
                                                "target_property": "pangenome_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "output_gencomp",
                                                "target_property": "output_id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "compare_genomes",
                                        "kb_service_name": "GenomeComparisonSDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "input_parameter": "output_gencomp",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4f5874f57e7c366a6d373200a76f0d5c3fe7a887"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dejongh"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "4f5874f57e7c366a6d373200a76f0d5c3fe7a887",
                                        "icon": {
                                            "url": "img?method_id=GenomeComparisonSDK/compare_genomes&image_name=kb-purple.png&tag=release"
                                        },
                                        "id": "GenomeComparisonSDK/compare_genomes",
                                        "input_types": [
                                            "KBaseGenomes.Pangenome"
                                        ],
                                        "module_name": "GenomeComparisonSDK",
                                        "name": "Compare Genomes from Pangenome",
                                        "namespace": "GenomeComparisonSDK",
                                        "output_types": [
                                            "KBaseGenomes.GenomeComparison"
                                        ],
                                        "subtitle": "Compare isofunctional and homologous gene families for all genomes in the pangenome.",
                                        "tooltip": "Compare isofunctional and homologous gene families for all genomes in the pangenome.",
                                        "ver": "0.0.4"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A list of all distinct protein families identified in a set of input genome sequences, as well as the IDs of the proteins present in each family",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_pangenome",
                                            "optional": 0,
                                            "short_hint": "A list of all distinct protein families identified in a set of input genome sequences, as well as the IDs of the proteins present in each family",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "Name of Pangenome",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Pangenome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Pangenome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Set of all isofunctional and homologous protein families identified across the input set of genome sequences",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_gencomp",
                                            "optional": 0,
                                            "short_hint": "Set of all isofunctional and homologous protein families identified across the input set of genome sequences",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name of output Genome Comparison",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.GenomeComparison"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Genome Comparison"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeComparisonViewer"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.4"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "39892cac-9086-4d7d-a925-b715201997e8",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                                    "creation_time": 1523323188317,
                                    "exec_start_time": 1523323190484,
                                    "finish_time": 1523323302561,
                                    "finished": 1,
                                    "job_id": "5acc1134e4b09663c3f59d3a",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "cg_ref": "jplfaria:narrative_1523236349247/janthinobacterium_pagenome_compar",
                                            "report_name": "genomecomparison_report_janthinobacterium_pagenome_compar",
                                            "report_ref": "30462/82/1"
                                        }
                                    ],
                                    "run_id": "f46c2e39-099a-43b5-8037-6ed908275bc1",
                                    "status": [
                                        "2018-04-10T01:21:42+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1523323304136,
                                "launchState": {
                                    "cell_id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                                    "event": "launched_job",
                                    "event_at": "2018-04-10T01:19:48.306974Z",
                                    "job_id": "5acc1134e4b09663c3f59d3a",
                                    "run_id": "f46c2e39-099a-43b5-8037-6ed908275bc1"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-04-10T01:19:47.714Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-04-10T01:19:48.442Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "39892cac-9086-4d7d-a925-b715201997e8",
                                                "awe_job_state": "queued",
                                                "cell_id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                                                "creation_time": 1523323188317,
                                                "finished": 0,
                                                "job_id": "5acc1134e4b09663c3f59d3a",
                                                "job_state": "queued",
                                                "position": 22,
                                                "run_id": "f46c2e39-099a-43b5-8037-6ed908275bc1",
                                                "status": [
                                                    "2018-04-10T01:19:48+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "32d3aa74-e740-410c-bdb1-8bc8d940c710",
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:19:48.526Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "39892cac-9086-4d7d-a925-b715201997e8",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                                                "creation_time": 1523323188317,
                                                "exec_start_time": 1523323190484,
                                                "finished": 0,
                                                "job_id": "5acc1134e4b09663c3f59d3a",
                                                "job_state": "in-progress",
                                                "run_id": "f46c2e39-099a-43b5-8037-6ed908275bc1",
                                                "status": [
                                                    "2018-04-10T01:19:50+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:19:58.360Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "39892cac-9086-4d7d-a925-b715201997e8",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                                                "creation_time": 1523323188317,
                                                "exec_start_time": 1523323190484,
                                                "finish_time": 1523323302561,
                                                "finished": 1,
                                                "job_id": "5acc1134e4b09663c3f59d3a",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "cg_ref": "jplfaria:narrative_1523236349247/janthinobacterium_pagenome_compar",
                                                        "report_name": "genomecomparison_report_janthinobacterium_pagenome_compar",
                                                        "report_ref": "30462/82/1"
                                                    }
                                                ],
                                                "run_id": "f46c2e39-099a-43b5-8037-6ed908275bc1",
                                                "status": [
                                                    "2018-04-10T01:21:42+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-04-10T01:21:44.136Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbaseGenomeComparisonViewer",
                                    "params": {
                                        "id": "janthinobacterium_pagenome_compar",
                                        "report_name": "genomecomparison_report_janthinobacterium_pagenome_compar",
                                        "report_ref": "30462/82/1",
                                        "report_window_line_height": "16",
                                        "workspace_name": "jplfaria:narrative_1523236349247",
                                        "ws": "jplfaria:narrative_1523236349247"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5acc1134e4b09663c3f59d3a": {
                                        "cell": {
                                            "created": true,
                                            "id": "a3f0c699-9fba-45bd-a67d-931196ca5cb1"
                                        },
                                        "createdAt": "Tue, 10 Apr 2018 01:21:44 GMT",
                                        "params": {
                                            "input_pangenome": "janthinobacterium_10_closest_pangenome",
                                            "output_gencomp": "janthinobacterium_pagenome_comparison"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_pangenome": "janthinobacterium_10_closest_pangenome",
                                "output_gencomp": "janthinobacterium_pagenome_comparison"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 01:19:13 GMT",
                            "id": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/GenomeComparisonSDK/compare_genomes/release"
                            },
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:37 GMT",
                            "status": "new",
                            "subtitle": "Compare isofunctional and homologous gene families for all genomes in the pangenome.",
                            "title": "Compare Genomes from Pangenome"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"GenomeComparisonSDK/compare_genomes\",\n    {\n        \"input_pangenome\": \"janthinobacterium_10_closest_pangenome\",\n        \"output_gencomp\": \"janthinobacterium_pagenome_comparison\"\n    },\n    tag=\"release\",\n    version=\"0.0.4\",\n    cell_id=\"a74d89be-d491-4365-b09c-10d9f5a4bca9\",\n    run_id=\"ae241392-420c-4218-8f96-b1094567a08d\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 39,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Apr 2018 01:21:44 GMT",
                            "icon": "arrow-right",
                            "id": "a3f0c699-9fba-45bd-a67d-931196ca5cb1",
                            "lastLoaded": "Tue, 10 Apr 2018 18:11:36 GMT",
                            "status": "new",
                            "title": "Output from Compare Genomes from Pangenome"
                        },
                        "outputCell": {
                            "jobId": "5acc1134e4b09663c3f59d3a",
                            "parentCellId": "a74d89be-d491-4365-b09c-10d9f5a4bca9",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeComparisonViewer",
                                "params": {
                                    "id": "janthinobacterium_pagenome_compar",
                                    "report_name": "genomecomparison_report_janthinobacterium_pagenome_compar",
                                    "report_ref": "30462/82/1",
                                    "report_window_line_height": "16",
                                    "workspace_name": "jplfaria:narrative_1523236349247",
                                    "ws": "jplfaria:narrative_1523236349247"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-dd2e610d-9024-4741-9f13-3615c21f2182' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-dd2e610d-9024-4741-9f13-3615c21f2182'), {\n                \"data\": {\"ws\": \"jplfaria:narrative_1523236349247\", \"report_window_line_height\": \"16\", \"workspace_name\": \"jplfaria:narrative_1523236349247\", \"report_ref\": \"30462/82/1\", \"id\": \"janthinobacterium_pagenome_compar\", \"report_name\": \"genomecomparison_report_janthinobacterium_pagenome_compar\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseGenomeComparisonViewer\",\n                \"cellId\":\"a3f0c699-9fba-45bd-a67d-931196ca5cb1\",\n                \"title\":\"\",\n                \"time\":1523323304225\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 39,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeComparisonViewer\",\n    {\n        \"report_name\": \"genomecomparison_report_janthinobacterium_pagenome_compar\",\n        \"ws\": \"jplfaria:narrative_1523236349247\",\n        \"workspace_name\": \"jplfaria:narrative_1523236349247\",\n        \"report_window_line_height\": \"16\",\n        \"report_ref\": \"30462/82/1\",\n        \"id\": \"janthinobacterium_pagenome_compar\"\n    },\n    tag=\"release\",\n    cell_id=\"a3f0c699-9fba-45bd-a67d-931196ca5cb1\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Overview of functional assignments"
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "# Overview of functional assignments\nTable 1 below gives an overview of all functional assigments for all genes in the violacein production operon. We found that 6 out of 11 genomes in our pangenome study have the violacein biosynthesis gene. Four of those genomes (_Janthinobacterium sp. RA13_, _Janthinobacterium lividum_, _Janthinobacterium agaricidamnosum NBRC 102515 = DSM 9628_ and _Janthinobacterium sp. HH01_) are members of the Janthinobacterium Genus. We also observe a member of the Duganella Genus (_Duganella violaceinigra DSM 15887_) as a closely related genome with the complete violacein production operon.\n\nThis analysis also provides more confidence in our assigment of \"vioE\" to genome feature \"COKOADII_05068\" (in the Domain Annotation analysis above), as genes in three closely related Janthinobacterium genomes (see cluster 3945 in Table 1 below) had the \"Proto(deoxy)violaceinic acid synthase VioE\" function assigned.\n\n\n<b> Table 1 - Summary of functional assignments for genes in the violacein production operon in pangenome analysis</b>\n\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"0\"> <thead> <tr>\n<td valign=\"bottom\" ><p><b>Gene</b></p></td>\n<td colspan=\"2\" valign=\"bottom\" ><p><b>Family</b></p></td>\n<td valign=\"bottom\" ><p><b>Totals</b></p></td>\n<td valign=\"bottom\" ><p><b>Functions</b></p></td>\n<td valign=\"bottom\" ><p><b>Subsystems</b></p></td>\n<td valign=\"bottom\" ><p><b>Primary classes</b></p></td>\n<td valign=\"bottom\" ><p><b>Secondary classes</b></p></td>\n<td valign=\"bottom\" ><p><b>Function genes</b></p></td>\n<td valign=\"bottom\" ><p><b>Function genomes</b></p></td>\n</tr>\n\n</thead> \n<tbody>\n<tr>\n<td valign=\"top\" ><p><b>vioA</b></p></td>\n<td valign=\"top\" ><p>cluster3647</p></td>\n<td colspan=\"2\" valign=\"top\" ><p>Genes: 6<br />\nFunctions: 3<br />\nGenomes: 6</p></td>\n<td valign=\"top\" ><p>1: Tryptophan 2-monooxygenase VioA in violacein biosynthesis (EC 1.13.12.3)<br />\n2: vioA - tryptophan 2-monooxygenase<br />\n3: Flavin-dependent L-tryptophan oxidase VioA</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 2(100%)<br />\n3: 1(100%)</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 2(100%)<br />\n3: 1(100%)</p></td>\n</tr>\n\n<tr>\n<td valign=\"top\" ><p><b>vioB</b></p></td>\n<td valign=\"top\" ><p>cluster3810</p></td>\n<td colspan=\"2\" valign=\"top\" ><p>Genes: 6<br />\nFunctions: 3<br />\nGenomes: 6</p></td>\n<td valign=\"top\" ><p>1: Violacein biosynthesis protein VioB<br />\n2: Violacein biosynthesis protein vioB<br />\n3: 2-imino-3-(indol-3-yl)propanoate dimerase</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: none<br />\n3: none</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 2(100%)<br />\n3: 1(100%)</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 2(100%)<br />\n3: 1(100%)</p></td>\n</tr>\n\n<tr>\n<td valign=\"top\" ><p><b>vioC</b></p></td>\n<td valign=\"top\" ><p>cluster3755</p></td>\n<td colspan=\"2\" valign=\"top\" ><p>Genes: 6<br />\nFunctions: 2<br />\nGenomes: 6</p></td>\n<td valign=\"top\" ><p>1: Kynurenine 3-monooxygenase (EC 1.14.13.9)<br />\n2: Violacein synthase</p></td>\n<td valign=\"top\" ><p>1: Tryptophan catabolism<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: Amino Acids and Derivatives<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: Aromatic amino acids and derivatives<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: 5(71%)<br />\n2: 1(100%)</p></td>\n<td valign=\"top\" ><p>1: 5(100%)<br />\n2: 1(100%)</p></td>\n</tr>\n\n<tr>\n<td valign=\"top\" ><p><b>vioD</b></p></td>\n<td valign=\"top\" ><p>cluster3899</p></td>\n<td colspan=\"2\" valign=\"top\" ><p>Genes: 6<br />\nFunctions: 4<br />\nGenomes: 6</p></td>\n<td valign=\"top\" ><p>1: Tryptophan hydroxylase VioD in violacein biosynthesis<br />\n2: 2-polyprenyl-6-methoxyphenol hydroxylase and related FAD-dependent oxidoreductases<br />\n3: vioD - hydroxylase<br />\n4: Protodeoxyviolaceinate monooxygenase</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: Salicylate and gentisate catabolism<br />\n3: none<br />\n4: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: Metabolism of Aromatic Compounds<br />\n3: none<br />\n4: none</p></td>\n<td valign=\"top\" ><p>1: none<br />\n2: <br />\n3: none<br />\n4: none</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 1(13%)<br />\n3: 1(100%)<br />\n4: 1(100%)</p></td>\n<td valign=\"top\" ><p>1: 3(100%)<br />\n2: 1(20%)<br />\n3: 1(100%)<br />\n4: 1(100%)</p></td>\n</tr>\n\n<tr>\n<td valign=\"top\" ><p><b>vioE</b></p></td>\n<td valign=\"top\" ><p>cluster3945</p></td>\n<td colspan=\"2\" valign=\"top\" ><p>Genes: 6<br />\nFunctions: 2<br />\nGenomes: 6</p></td>\n<td valign=\"top\" ><p>1: hypothetical protein<br />\n2: Proto(deoxy)violaceinic acid synthase VioE</p></td>\n<td valign=\"top\" ><p>1: CBSS-272569.1.peg.3198<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: Clustering-based subsystems<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: pH adaptation potassium efflux<br />\n2: none</p></td>\n<td valign=\"top\" ><p>1: 3(0%)<br />\n2: 3(100%)</p></td>\n<td valign=\"top\" ><p>1: 3(27%)<br />\n2: 3(100%)</p></td>\n</tr>\n\n</tbody>\n</table>\n"
            }
        ],
        "metadata": {
            "creator": "jplfaria",
            "data_dependencies": [],
            "description": "",
            "format": "ipynb",
            "is_temporary": "false",
            "job_ids": {
                "apps": [],
                "job_usage": {
                    "queue_time": 0,
                    "run_time": 0
                },
                "methods": []
            },
            "kbase": {
                "creator": "jplfaria",
                "job_ids": {
                    "apps": [],
                    "job_usage": {
                        "queue_time": 0,
                        "run_time": 0
                    },
                    "methods": []
                },
                "name": "Untitled",
                "ws_name": "jplfaria:narrative_1523236349247"
            },
            "kernelspec": {
                "display_name": "Python 2",
                "language": "python",
                "name": "python2"
            },
            "language_info": {
                "codemirror_mode": {
                    "name": "ipython",
                    "version": 2
                },
                "file_extension": ".py",
                "mimetype": "text/x-python",
                "name": "python",
                "nbconvert_exporter": "python",
                "pygments_lexer": "ipython2",
                "version": "2.7.6"
            },
            "name": "Janthinobacterium FRC Isolate Analysis @ MBL - RESET",
            "type": "KBaseNarrative.Narrative",
            "ws_name": "jplfaria:narrative_1523380297505"
        },
        "nbformat": 4,
        "nbformat_minor": 1
    },
    "info": [
        107,
        "Narrative.1523236349247",
        "KBaseNarrative.Narrative-4.0",
        "2018-04-10T19:22:51+0000",
        25,
        "jplfaria",
        30530,
        "jplfaria:narrative_1523380297505",
        "8439bd205ece15507e260478ba406cfd",
        414183,
        {
            "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}",
            "description": "",
            "method.PangenomeOrthomcl/build_pangenome_with_orthomcl/fd6b156cb12dd66341002f18325d6869c2b19136": "1",
            "method.GenomeComparisonSDK/compare_genomes/4f5874f57e7c366a6d373200a76f0d5c3fe7a887": "1",
            "type": "KBaseNarrative.Narrative",
            "method.kb_phylogenomics/run_DomainAnnotation_Sets/aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae": "1",
            "is_temporary": "false",
            "method.MEGAHIT/run_megahit/833c6d8cceedbb67c4001133e347f71cab488572": "2",
            "method.kb_phylogenomics/view_tree/133b7b7c4179b5fb1b51bade70069a545bca91fc": "1",
            "method.kb_assembly_compare/run_contig_distribution_compare/39ac58cc7cf47afa017eb8d1318b0757658de2d8": "1",
            "method.kb_uploadmethods/load_paired_end_reads_from_URL/8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433": "1",
            "method.kb_trimmomatic/run_trimmomatic/09b94c39b2fab79962a8d978aa15a424342defe4": "1",
            "method.kb_quast/run_QUAST_app/cdb54192310bd25fd775e51ad7a6d1835ac96a32": "1",
            "method.kb_uploadmethods/import_fastq_sra_as_reads_from_staging/8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433": "2",
            "method.kb_phylogenomics/view_pan_circle_plot/aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae": "1",
            "method.kb_fastqc/runFastQC/0b89d71ea1c42fba94263fe3ac528bbddc5cb9ac": "3",
            "creator": "jplfaria",
            "method.ProkkaAnnotation/annotate_contigs/30eb4fb9e26c82dcf02d55c58beabf7fb5796332": "1",
            "jupyter.markdown": "21",
            "data_dependencies": "[]",
            "method.kb_uploadmethods/import_sra_as_reads_from_web/8ebb66e4f2c27bc4a9b7cddff7d7b0f27f4ee433": "1",
            "format": "ipynb",
            "method.kb_SPAdes/run_SPAdes/647a2c3367aba00ddbaaf51d064c949d097a260d": "2",
            "method.SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/3eeaaa02c0ec0b57a42cab029c093bf6e8138e6e": "1",
            "method.RAST_SDK/annotate_contigset/44dd19a28a24ec2fdd178f5bf9f80303050412af": "1",
            "method.Velvet/run_velvet/9b74f5ec3e4978d0ad5f28800429dbe28649e6c3": "2",
            "name": "Janthinobacterium FRC Isolate Analysis @ MBL - RESET",
            "method.kb_phylogenomics/view_fxn_profile_phylo/aa81ae70e8e32dd7d9faa89bef19b12b4a3c3bae": "1",
            "method.DomainAnnotation/annotate_domains_in_a_genome/4875183ff3284901e2a2c591830237b086e398d6": "1",
            "ws_name": "jplfaria:narrative_1523380297505"
        }
    ],
    "path": [
        "30530/107/25"
    ],
    "provenance": [
        {
            "service": "narrative",
            "service_ver": "3.7.1",
            "input_ws_objects": [],
            "resolved_ws_objects": [],
            "external_data": [],
            "subactions": [],
            "custom": {},
            "description": "Saved by KBase Narrative Interface"
        }
    ],
    "creator": "jplfaria",
    "orig_wsid": 30530,
    "created": "2018-04-10T19:22:51+0000",
    "epoch": 1523388171097,
    "refs": [],
    "copy_source_inaccessible": 0,
    "extracted_ids": {}
}
