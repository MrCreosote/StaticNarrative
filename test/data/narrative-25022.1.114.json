{
    "data": {
        "cells": [
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Mon, 19 Mar 2018 20:39:10 GMT",
                            "icon": "database",
                            "id": "c25cdcc9-9944-44e2-a7db-d271a0ba3cff",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "subtitle": "v2 - KBaseFBA.FBAModel-13.0",
                            "title": "rhodoModel"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "3cbcac6de065ee04a941f3c0f86366aa",
                                "id": 14,
                                "metadata": {
                                    "Genome": "2968/4/1",
                                    "Name": "Rhodobacter CACIA 14H1",
                                    "Number biomasses": "1",
                                    "Number compartments": "2",
                                    "Number compounds": "1048",
                                    "Number gapfills": "0",
                                    "Number gapgens": "0",
                                    "Number reactions": "1002",
                                    "Source": "KBase",
                                    "Source ID": "kb|g.220339.fbamdl",
                                    "Type": "GenomeScale"
                                },
                                "name": "rhodoModel",
                                "obj_id": "ws.25022.obj.14",
                                "ref": "25022/14/2",
                                "ref_path": null,
                                "saveDate": "2018-01-26T15:29:14.000Z",
                                "save_date": "2018-01-26T15:29:14+0000",
                                "saved_by": "wjriehl",
                                "size": 1267550,
                                "type": "KBaseFBA.FBAModel-13.0",
                                "typeMajorVersion": "13",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseFBA",
                                "typeName": "FBAModel",
                                "version": 2,
                                "ws": "wjriehl:narrative_1502225097649",
                                "ws_id": 25022,
                                "wsid": 25022
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-688e8f04-e200-4d24-8e3f-5fe018ac753d' class='kb-vis-area'></div>\");\n\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-688e8f04-e200-4d24-8e3f-5fe018ac753d'), {\n                \"data\": {\"output\": {\"obj\": \"rhodoModel\", \"type\": \"KBaseFBA.FBAModel\", \"ws\": \"wjriehl:narrative_1502225097649\"}, \"type_spec\": {\"import_method_ids\": [\"fba_tools/import_fbamodel_tsv_file\", \"fba_tools/import_fbamodel_sbml_file\", \"fba_tools/import_fbamodel_excel_file\"], \"subtitle\": \"FBA model object\", \"name\": \"FBA model\", \"export_functions\": {\"TSV\": \"fba_tools/export_model_as_tsv_file\", \"EXCEL\": \"fba_tools/export_model_as_excel_file\", \"SBML\": \"fba_tools/export_model_as_sbml_file\"}, \"view_method_ids\": [\"NarrativeViewers/view_metabolic_model_details\"], \"description\": \"<p>This type describes FBA model.</p>\\n\", \"type_name\": \"KBaseFBA.FBAModel\", \"tooltip\": \"FBA model object\", \"landing_page_url_prefix\": \"ws/models\", \"icon\": {\"url\": \"img?type_name=KBaseFBA.FBAModel&image_name=none\"}}, \"info_tuple\": [14, \"rhodoModel\", \"KBaseFBA.FBAModel-13.0\", \"2018-01-26T15:29:14+0000\", 2, \"wjriehl\", 25022, \"wjriehl:narrative_1502225097649\", \"3cbcac6de065ee04a941f3c0f86366aa\", 1267550, {\"Number gapfills\": \"0\", \"Name\": \"Rhodobacter CACIA 14H1\", \"Number compounds\": \"1048\", \"Number gapgens\": \"0\", \"Number biomasses\": \"1\", \"Source\": \"KBase\", \"Number reactions\": \"1002\", \"Genome\": \"2968/4/1\", \"Type\": \"GenomeScale\", \"Number compartments\": \"2\", \"Source ID\": \"kb|g.220339.fbamdl\"}], \"app_spec\": {\"info\": {\"ver\": \"1.0.2\", \"name\": \"View Metabolic Model Details\", \"subtitle\": \"Bring up a detailed view of a metabolic model within the narrative.\", \"output_types\": [], \"app_type\": \"viewer\", \"namespace\": \"NarrativeViewers\", \"tooltip\": \"Bring up a detailed view of a metabolic model within the narrative.\", \"git_commit_hash\": \"16e96d7a6832ce65e1658563c492b355904dac6f\", \"input_types\": [\"KBaseFBA.FBAModel\"], \"authors\": [], \"module_name\": \"NarrativeViewers\", \"id\": \"NarrativeViewers/view_metabolic_model_details\", \"categories\": [\"inactive\"]}, \"widgets\": {\"input\": \"null\", \"output\": \"kbaseTabTable\"}, \"fixed_parameters\": [], \"parameters\": [{\"field_type\": \"text\", \"ui_class\": \"input\", \"allow_multiple\": 0, \"description\": \"the metabolic model to view\", \"text_options\": {\"is_output_name\": 0, \"placeholder\": \"\", \"regex_constraint\": [], \"valid_ws_types\": [\"KBaseFBA.FBAModel\"]}, \"disabled\": 0, \"short_hint\": \"the metabolic model to view\", \"default_values\": [\"\"], \"ui_name\": \"Metabolic Model\", \"optional\": 0, \"id\": \"param0\", \"advanced\": 0}], \"behavior\": {\"output_mapping\": [{\"target_property\": \"type\", \"constant_value\": \"KBaseFBA.FBAModel\"}, {\"target_property\": \"obj\", \"input_parameter\": \"param0\"}, {\"target_property\": \"ws\", \"narrative_system_variable\": \"workspace\"}]}}},\n                \"type\":\"viewer\",\n                \"widget\":\"kbaseNarrativeDataCell\",\n                \"cellId\":\"c25cdcc9-9944-44e2-a7db-d271a0ba3cff\",\n                \"title\":\"rhodoModel\",\n                \"time\":1521491958484\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"25022/14/2\",\n    cell_id=\"c25cdcc9-9944-44e2-a7db-d271a0ba3cff\",\n    title=\"rhodoModel\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 14,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                "id": "NarrativeTest/test_input_params",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "actual_input_object",
                                                "target_property": "input_genome_name"
                                            },
                                            {
                                                "input_parameter": "actual_output_object",
                                                "target_property": "output_genome_name"
                                            }
                                        ],
                                        "kb_service_method": "test_async_job",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "contig_filter_result"
                                            },
                                            {
                                                "input_parameter": "actual_output_object",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "ce273c5ba9f7aae461a78a861be3e0949095f2c6"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [
                                            "active"
                                        ],
                                        "git_commit_hash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                        "id": "NarrativeTest/test_input_params",
                                        "input_types": [
                                            "KBaseFBA.FBAModel",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "NarrativeTest",
                                        "name": "Test Input Parameters",
                                        "namespace": "NarrativeTest",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Used for testing that input parameters are properly validated.",
                                        "tooltip": "Used for testing that input parameters are properly validated.",
                                        "ver": "0.0.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "actual_input_object",
                                            "optional": 0,
                                            "short_hint": "Should be a genome (KBaseGenomes.Genome)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome to be duplicated"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "actual_output_object",
                                            "optional": 0,
                                            "short_hint": "The name of the new Genome object that gets created (a KBaseGenomes.Genome)",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Name of new Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_int",
                                            "optional": 1,
                                            "short_hint": "Only accept a single integer between [-100, 100]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 100,
                                                "min_int": -100,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single integer"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_ints",
                                            "optional": 1,
                                            "short_hint": "Accept multiple integers between [-100, 100]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 100,
                                                "min_int": -100,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple integers"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_float",
                                            "optional": 1,
                                            "short_hint": "Only accept a single float between [-55.5, 55.5]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 55.5,
                                                "min_float": -55.5,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single floating point number"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_floats",
                                            "optional": 1,
                                            "short_hint": "Accept multiple floating point numbers between [-55.5, 55.5]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 55.5,
                                                "min_float": -55.5,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple floating point numbers"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_string",
                                            "optional": 1,
                                            "short_hint": "Just validate that it is a something.",
                                            "ui_class": "parameter",
                                            "ui_name": "Single random string"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_strings",
                                            "optional": 1,
                                            "short_hint": "Accept multple random strings",
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple strings"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_ws_object",
                                            "optional": 1,
                                            "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "A single ws object"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_ws_objects",
                                            "optional": 1,
                                            "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Multiple ws objects"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Apple",
                                                        "index": 0,
                                                        "value": "apple"
                                                    },
                                                    {
                                                        "display": "Banana",
                                                        "index": 1,
                                                        "value": "banana"
                                                    },
                                                    {
                                                        "display": "Carrot",
                                                        "index": 2,
                                                        "value": "carrot"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "dropdown_selection",
                                            "optional": 1,
                                            "short_hint": "Should only accept what is in that dropdown.",
                                            "ui_class": "parameter",
                                            "ui_name": "Dropdown of random strings"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Apple",
                                                        "value": "apple"
                                                    },
                                                    {
                                                        "display": "Banana",
                                                        "value": "banana"
                                                    },
                                                    {
                                                        "display": "Carrot",
                                                        "value": "carrot"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "list_of_dropdown_selections",
                                            "optional": 1,
                                            "short_hint": "Should accept only what is in the dropdown, but a list of them.",
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple dropdown results"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_checkbox",
                                            "optional": 1,
                                            "short_hint": "Accepts just True or False, should auto-map to actual value",
                                            "ui_class": "parameter",
                                            "ui_name": "A single checkbox"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textarea",
                                            "id": "single_textarea",
                                            "optional": 1,
                                            "short_hint": "A textarea",
                                            "textarea_options": {
                                                "n_rows": 4,
                                                "placeholder": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single textarea"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textarea",
                                            "id": "list_of_textareas",
                                            "optional": 1,
                                            "short_hint": "Maybe you want to write an article with lots of paragraphs?",
                                            "textarea_options": {
                                                "n_rows": 3,
                                                "placeholder": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "A list of textareas."
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "model_for_subdata",
                                            "optional": 1,
                                            "short_hint": "This is the FBA model that will be used for populating subdata selection",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "A single FBA model for subdata selection"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "single_textsubdata",
                                            "optional": 1,
                                            "short_hint": "Used for a KBaseFBA.FBAModel (as in the example spec)",
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}} ({{formula}})",
                                                    "parameter_id": "model_for_subdata",
                                                    "path_to_subdata": [
                                                        "modelcompounds"
                                                    ],
                                                    "selection_description": [
                                                        "name",
                                                        "formula"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelcompounds/[*]/id",
                                                        "modelcompounds/[*]/name",
                                                        "modelcompounds/[*]/formula"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "A single fancy text subdata"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.2"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 1,
                                    "cell_id": "86eb2434-a861-4123-a66c-97055f89699d",
                                    "child_jobs": [],
                                    "creation_time": 1574441927644,
                                    "finish_time": 1574441932470,
                                    "finished": 1,
                                    "job_id": "5dd813be88aa5c1e3ef4dc40",
                                    "job_state": "canceled",
                                    "run_id": "13820eca-e44c-4b77-a466-8624ec010dc5",
                                    "status": [
                                        "2019-11-22T16:58:52+0000",
                                        "canceled",
                                        "canceled by user",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "token_id": "d7128372-faad-435b-9d52-2874604b4e1d",
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1574441932560,
                                "launchState": {
                                    "cell_id": "86eb2434-a861-4123-a66c-97055f89699d",
                                    "event": "launched_job",
                                    "event_at": "2019-11-22T16:58:47.754394Z",
                                    "job_id": "5dd813be88aa5c1e3ef4dc40",
                                    "run_id": "13820eca-e44c-4b77-a466-8624ec010dc5"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "canceled"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "actual_input_object": "bsub_annotation",
                                "actual_output_object": "copy_genome",
                                "dropdown_selection": "",
                                "list_of_dropdown_selections": [],
                                "list_of_floats": [],
                                "list_of_ints": [],
                                "list_of_strings": [],
                                "list_of_textareas": [],
                                "list_of_ws_objects": [],
                                "model_for_subdata": null,
                                "single_checkbox": 0,
                                "single_float": 10,
                                "single_int": null,
                                "single_string": "",
                                "single_textarea": "",
                                "single_textsubdata": [],
                                "single_ws_object": null
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 22 Nov 2019 16:57:52 GMT",
                            "id": "86eb2434-a861-4123-a66c-97055f89699d",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/test_input_params/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Used for testing that input parameters are properly validated.",
                            "title": "Test Input Parameters"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/test_input_params\",\n    {\n        \"actual_input_object\": \"bsub_annotation\",\n        \"actual_output_object\": \"copy_genome\",\n        \"single_int\": None,\n        \"list_of_ints\": [],\n        \"single_float\": 10,\n        \"list_of_floats\": [],\n        \"single_string\": \"\",\n        \"list_of_strings\": [],\n        \"single_ws_object\": None,\n        \"list_of_ws_objects\": [],\n        \"dropdown_selection\": \"\",\n        \"list_of_dropdown_selections\": [],\n        \"single_checkbox\": 0,\n        \"single_textarea\": \"\",\n        \"list_of_textareas\": [],\n        \"model_for_subdata\": None,\n        \"single_textsubdata\": []\n    },\n    tag=\"dev\",\n    version=\"ce273c5ba9f7aae461a78a861be3e0949095f2c6\",\n    cell_id=\"86eb2434-a861-4123-a66c-97055f89699d\",\n    run_id=\"13820eca-e44c-4b77-a466-8624ec010dc5\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "eaacbb349d721977a6c667031f37c5a60f3528c5",
                                "id": "kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "fasta_file",
                                                "target_property": "fasta_file"
                                            },
                                            {
                                                "input_parameter": "gff_file",
                                                "target_property": "gff_file"
                                            },
                                            {
                                                "input_parameter": "genome_name",
                                                "target_property": "genome_name"
                                            },
                                            {
                                                "input_parameter": "source",
                                                "target_property": "source"
                                            },
                                            {
                                                "input_parameter": "taxon_wsname",
                                                "target_property": "taxon_wsname"
                                            },
                                            {
                                                "input_parameter": "taxon_id",
                                                "target_property": "taxon_id"
                                            },
                                            {
                                                "input_parameter": "release",
                                                "target_property": "release"
                                            },
                                            {
                                                "input_parameter": "genetic_code",
                                                "target_property": "genetic_code"
                                            },
                                            {
                                                "input_parameter": "generate_missing_genes",
                                                "target_property": "generate_missing_genes"
                                            }
                                        ],
                                        "kb_service_method": "upload_metagenome_fasta_gff_file",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "constant_value": "KBaseMetagenomes.AnnotatedMetagenomeAssembly",
                                                "target_property": "type"
                                            },
                                            {
                                                "input_parameter": "genome_name",
                                                "target_property": "id"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "eaacbb349d721977a6c667031f37c5a60f3528c5"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "slebras"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "assembly",
                                            "upload"
                                        ],
                                        "git_commit_hash": "eaacbb349d721977a6c667031f37c5a60f3528c5",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging&image_name=data-red.png&tag=dev"
                                        },
                                        "id": "kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import GFF3/FASTA file as Annotated Metagenome Assembly from Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [
                                            "KBaseMetagenomes.AnnotatedMetagenomeAssembly"
                                        ],
                                        "subtitle": "Import a GFF3 and FASTA file from your staging area into your Narrative as an Annotated Metagenome Assembly data object",
                                        "tooltip": "Import a GFF3 and FASTA file from your staging area into your Narrative as an Annotated Metagenome Assembly data object",
                                        "ver": "1.0.31"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2. Note that the FASTA file must contain sequences for contigs which match the seq_id in the gff file not sequences for every individual feature.",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "ftp_staging",
                                                "multiselection": 0,
                                                "service_params": null
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "fasta_file",
                                            "optional": 0,
                                            "short_hint": "FASTA File containing assembled contigs or chromosomes (NOT feature sequences)",
                                            "ui_class": "parameter",
                                            "ui_name": "FASTA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for GFF: .gff, .gff3. Compressed files (containing files with valid extensions): .zip, .gz, .bz2, .tar.gz, .tar.bz2. Note that older versions of GFF files may also have the .gff extension but have a differing schema which could result in incorrect upload. Always use GFF3 where possible",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "ftp_staging",
                                                "multiselection": 0,
                                                "service_params": null
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "gff_file",
                                            "optional": 0,
                                            "short_hint": "GFF3 File containing list of predicted gene models and associated features",
                                            "ui_class": "parameter",
                                            "ui_name": "GFF3 File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the output object that will be created by this upload",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genome_name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the output object that will be created by this upload",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.AnnotatedMetagenomeAssembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Metagenome Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Other"
                                            ],
                                            "description": "Source of the metagenome data (i.e. EBI etc.)",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "RefSeq",
                                                        "index": 0,
                                                        "value": "RefSeq user"
                                                    },
                                                    {
                                                        "display": "Ensembl",
                                                        "index": 1,
                                                        "value": "Ensembl user"
                                                    },
                                                    {
                                                        "display": "Other",
                                                        "index": 2,
                                                        "value": "Other"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "source",
                                            "optional": 0,
                                            "short_hint": "Source of the metagenome data (i.e. EBI etc.)",
                                            "ui_class": "parameter",
                                            "ui_name": "Source of metagenome"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Where the reference taxons are. Defaults to ReferenceTaxons",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "taxon_wsname",
                                            "optional": 1,
                                            "short_hint": "Where the reference taxons are. Defaults to ReferenceTaxons",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Taxon Workspace Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "If defined, will try to link the Genome to the specified taxonomy id in lieu of performing the lookup during upload",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "taxon_id",
                                            "optional": 1,
                                            "short_hint": "Will try to link the Genome to the specified taxonomy id",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Taxonomy ID"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Release or version of the source data (for example: Release31, V4)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "release",
                                            "optional": 1,
                                            "short_hint": "Release or version of the source data (for example: Release31, V4)",
                                            "ui_class": "parameter",
                                            "ui_name": "Release or Version of the Source Data"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid genetic code integer for translation purposes (see http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genetic_code",
                                            "optional": 1,
                                            "short_hint": "Valid genetic code (see http://www.ncbi.nlm.nih.gov/Taxonomy/Utils/wprintgc.cgi)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Genetic Code for protein translation"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Some files may contain only coding sequences but KBase genomes are\nexpected to contain a parent gene for these CDS. This option\ngenerates spoof genes based on the CDS location.",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "generate_missing_genes",
                                            "optional": 1,
                                            "short_hint": "Generate gene feature for CDSs that do not have a parent in file",
                                            "ui_class": "parameter",
                                            "ui_name": "Spoof Genes for parentless CDS"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "dev",
                                "version": "1.0.31"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "f540ec59-03fb-4527-8b1f-44751cef163a",
                                    "child_jobs": [],
                                    "creation_time": 1564174271466,
                                    "exec_start_time": 1564174413410,
                                    "finish_time": 1564176749344,
                                    "finished": 1,
                                    "job_id": "5d3b67b6aa5a4d298c5dc84b",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "genome_info": [
                                                33,
                                                "metagenome.gff_metagenome",
                                                "KBaseMetagenomes.AnnotatedMetagenomeAssembly-1.0",
                                                "2019-07-26T21:29:27+0000",
                                                1,
                                                "wjriehl",
                                                25022,
                                                "wjriehl:narrative_1502225097649",
                                                "153d588d732a0a4d50f15a5dd560756b",
                                                2018848,
                                                {
                                                    "Assembly Object": "25022/32/1",
                                                    "GC content": "0.63534",
                                                    "MD5": "8ac7402452ede5f469ac439c3e48decd",
                                                    "Number contigs": "87272",
                                                    "Number features": "265441",
                                                    "Number of Warnings": "1",
                                                    "Size": "70257324",
                                                    "Source": "Other",
                                                    "Source ID": "unknown"
                                                }
                                            ],
                                            "genome_ref": "25022/33/1",
                                            "report_name": "kb_genome_upload_report_e3711ce8-0675-4b3d-a851-8928303c70fe",
                                            "report_ref": "25022/34/1"
                                        }
                                    ],
                                    "run_id": "9f2b3daa-3151-4307-8fe2-2f4a844fc301",
                                    "status": [
                                        "2019-07-26T21:32:29+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1568141537580,
                                "launchState": {
                                    "cell_id": "f540ec59-03fb-4527-8b1f-44751cef163a",
                                    "event": "launched_job",
                                    "event_at": "2019-07-26T20:51:11.542615Z",
                                    "job_id": "5d3b67b6aa5a4d298c5dc84b",
                                    "run_id": "9f2b3daa-3151-4307-8fe2-2f4a844fc301"
                                },
                                "outputWidgetInfo": {
                                    "name": "kbaseGenomeView",
                                    "params": {
                                        "id": "metagenome.gff_metagenome",
                                        "obj_ref": null,
                                        "report_name": "kb_genome_upload_report_e3711ce8-0675-4b3d-a851-8928303c70fe",
                                        "report_ref": "25022/34/1",
                                        "report_window_line_height": "16",
                                        "type": "KBaseMetagenomes.AnnotatedMetagenomeAssembly",
                                        "ws": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import GFF3/FASTA file as Annotated Metagenome Assembly from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5d3b67b6aa5a4d298c5dc84b": {
                                        "cell": {
                                            "created": true,
                                            "id": "aea2fcee-8ae1-4306-8c2b-0323bf2d8901"
                                        },
                                        "createdAt": "Tue, 10 Sep 2019 18:52:17 GMT",
                                        "params": {
                                            "fasta_file": "metagenome.fa",
                                            "generate_missing_genes": 1,
                                            "genetic_code": null,
                                            "genome_name": "metagenome.gff_metagenome",
                                            "gff_file": "metagenome.gff",
                                            "release": "",
                                            "source": "Other",
                                            "taxon_id": "",
                                            "taxon_wsname": ""
                                        }
                                    }
                                }
                            },
                            "params": {
                                "fasta_file": "metagenome.fa",
                                "generate_missing_genes": 1,
                                "genetic_code": null,
                                "genome_name": "metagenome.gff_metagenome",
                                "gff_file": "metagenome.gff",
                                "release": "",
                                "source": "Other",
                                "taxon_id": "",
                                "taxon_wsname": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 26 Jul 2019 20:47:42 GMT",
                            "id": "f540ec59-03fb-4527-8b1f-44751cef163a",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import a GFF3 and FASTA file from your staging area into your Narrative as an Annotated Metagenome Assembly data object",
                            "title": "Import GFF3/FASTA file as Annotated Metagenome Assembly from Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging\",\n    {\n        \"fasta_file\": \"metagenome.fa\",\n        \"gff_file\": \"metagenome.gff\",\n        \"genome_name\": \"metagenome.gff_metagenome\",\n        \"source\": \"Other\",\n        \"taxon_wsname\": \"\",\n        \"taxon_id\": \"\",\n        \"release\": \"\",\n        \"genetic_code\": None,\n        \"generate_missing_genes\": 1\n    },\n    tag=\"dev\",\n    version=\"eaacbb349d721977a6c667031f37c5a60f3528c5\",\n    cell_id=\"f540ec59-03fb-4527-8b1f-44751cef163a\",\n    run_id=\"9f2b3daa-3151-4307-8fe2-2f4a844fc301\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Sep 2019 18:52:17 GMT",
                            "icon": "arrow-right",
                            "id": "aea2fcee-8ae1-4306-8c2b-0323bf2d8901",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "title": "Output from Import GFF3/FASTA file as Annotated Metagenome Assembly from Staging Area"
                        },
                        "dataCell": {
                            "upas": {
                                "id": "[25022]/33/1"
                            }
                        },
                        "outputCell": {
                            "jobId": "5d3b67b6aa5a4d298c5dc84b",
                            "parentCellId": "f540ec59-03fb-4527-8b1f-44751cef163a",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeView",
                                "params": {
                                    "id": "metagenome.gff_metagenome",
                                    "obj_ref": null,
                                    "report_name": "kb_genome_upload_report_e3711ce8-0675-4b3d-a851-8928303c70fe",
                                    "report_ref": "25022/34/1",
                                    "report_window_line_height": "16",
                                    "type": "KBaseMetagenomes.AnnotatedMetagenomeAssembly",
                                    "ws": "wjriehl:narrative_1502225097649"
                                },
                                "tag": "dev"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-ed6ff76b-fa8c-42e7-967e-1b19822e2cf1' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-ed6ff76b-fa8c-42e7-967e-1b19822e2cf1'), {\n                \"upas\": {\"id\": \"25022/33/1\"},\n                \"data\": {\"obj_ref\": null, \"ws\": \"wjriehl:narrative_1502225097649\", \"report_window_line_height\": \"16\", \"report_ref\": \"25022/34/1\", \"type\": \"KBaseMetagenomes.AnnotatedMetagenomeAssembly\", \"id\": \"metagenome.gff_metagenome\", \"report_name\": \"kb_genome_upload_report_e3711ce8-0675-4b3d-a851-8928303c70fe\"},\n                \"type\": \"method\",\n                \"widget\": \"kbaseGenomeView\",\n                \"cellId\": \"aea2fcee-8ae1-4306-8c2b-0323bf2d8901\",\n                \"title\": \"\",\n                \"time\": 1568141537744\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeView\",\n    {\n        \"obj_ref\": None,\n        \"report_name\": \"kb_genome_upload_report_e3711ce8-0675-4b3d-a851-8928303c70fe\",\n        \"ws\": \"wjriehl:narrative_1502225097649\",\n        \"report_window_line_height\": \"16\",\n        \"report_ref\": \"25022/34/1\",\n        \"type\": \"KBaseMetagenomes.AnnotatedMetagenomeAssembly\",\n        \"id\": \"metagenome.gff_metagenome\"\n    },\n    tag=\"dev\",\n    cell_id=\"aea2fcee-8ae1-4306-8c2b-0323bf2d8901\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "50b012d9b41b71ba31b30355627cf85f2611bc3e",
                                "id": "RAST_SDK/reannotate_microbial_genome",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_genome",
                                                "target_property": "input_genome",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "call_features_rRNA_SEED",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_tRNA_trnascan",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "input_parameter": "call_selenoproteins",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "input_parameter": "call_pyrrolysoproteins",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "input_parameter": "call_features_repeat_region_SEED",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_suis_repeat",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_pneumo_repeat",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_crispr",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_glimmer3",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_prodigal",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_kmer_v2",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "input_parameter": "kmer_v1_parameters",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_similarity",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "input_parameter": "resolve_overlapping_features",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "input_parameter": "call_features_prophage_phispy",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "input_parameter": "retain_old_anno_for_hypotheticals",
                                                "target_property": "retain_old_anno_for_hypotheticals"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genome_"
                                                },
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "50b012d9b41b71ba31b30355627cf85f2611bc3e"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry",
                                            "olson"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "50b012d9b41b71ba31b30355627cf85f2611bc3e",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/reannotate_microbial_genome&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/reannotate_microbial_genome",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Microbial Genome",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                                        "tooltip": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                                        "ver": "0.1.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A genome (set of DNA contigs) including structural and functional annotations",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genome",
                                            "optional": 0,
                                            "short_hint": "A genome (set of DNA contigs) including structural and functional annotations",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A genome with updated structural and functional annotations",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 1,
                                            "short_hint": "A genome with updated structural and functional annotations",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name to assign genome",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call rRNA non-coding features with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_rRNA_SEED",
                                            "optional": 0,
                                            "short_hint": "Call rRNA non-coding features",
                                            "ui_class": "parameter",
                                            "ui_name": "Call rRNAs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call tRNA non-coding features with trnascan in RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_tRNA_trnascan",
                                            "optional": 0,
                                            "short_hint": "Call tRNA non-coding feature",
                                            "ui_class": "parameter",
                                            "ui_name": "Call tRNA trnascan"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call new selenoprotein-containing genes with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_selenoproteins",
                                            "optional": 0,
                                            "short_hint": "Call new selenoprotein-containing genes",
                                            "ui_class": "parameter",
                                            "ui_name": "Call selenoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call new pyrrolysoprotein-containing genes with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_pyrrolysoproteins",
                                            "optional": 0,
                                            "short_hint": "Call new pyrrolysoprotein-containing genes",
                                            "ui_class": "parameter",
                                            "ui_name": "Call pyrrolysoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call SEED-defined non-coding repeat regions. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_repeat_region_SEED",
                                            "optional": 0,
                                            "short_hint": "Call SEED-defined repeat regions",
                                            "ui_class": "parameter",
                                            "ui_name": "Call SEED repeat region"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call non-coding strep suis repeats with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_suis_repeat",
                                            "optional": 0,
                                            "short_hint": "Call non-coding strep suis repeats",
                                            "ui_class": "parameter",
                                            "ui_name": "Call strep suis repeats"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call non-coding strep pneumo repeats with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_pneumo_repeat",
                                            "optional": 0,
                                            "short_hint": "Call non-coding strep pneumo repeats",
                                            "ui_class": "parameter",
                                            "ui_name": "Call strep pneumo repeats"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Call non-coding crisprs with RAST. See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_crispr",
                                            "optional": 0,
                                            "short_hint": "Call non-coding crisprs",
                                            "ui_class": "parameter",
                                            "ui_name": "Call crisprs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information. WARNING: Calling new genes will delete existing genes. Glimmer will not run if all contigs < 2000nt.",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_glimmer3",
                                            "optional": 0,
                                            "short_hint": "Call CDS features with glimmer3",
                                            "ui_class": "parameter",
                                            "ui_name": "Call glimmer3"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See http://compbio.ornl.gov/prodigal/ for more information. WARNING: Calling new genes will delete existing genes.",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_prodigal",
                                            "optional": 0,
                                            "short_hint": "Call CDS features with prodigal",
                                            "ui_class": "parameter",
                                            "ui_name": "Call prodigal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_kmer_v2",
                                            "optional": 0,
                                            "short_hint": "Annotate proteins kmer v2 with RAST",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate proteins kmer v2"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "kmer_v1_parameters",
                                            "optional": 0,
                                            "short_hint": "Annotate proteins kmer v1 with RAST",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate proteins Kmer v1"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_similarity",
                                            "optional": 0,
                                            "short_hint": "Annotate proteins similarity with RAST",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate proteins similarity"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Retain old annotations for hypotheticals",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "retain_old_anno_for_hypotheticals",
                                            "optional": 0,
                                            "short_hint": "Retain old annotations for hypotheticals",
                                            "ui_class": "parameter",
                                            "ui_name": "Retain old annotations for hypotheticals"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "resolve_overlapping_features",
                                            "optional": 0,
                                            "short_hint": "Resolve overlapping features",
                                            "ui_class": "parameter",
                                            "ui_name": "Resolve overlapping features"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See http://rast.nmpdr.org/ for more information",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_prophage_phispy",
                                            "optional": 0,
                                            "short_hint": "Call features prophage phispy with RAST",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features prophage phispy"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.1.1"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "31c1d49c-ed1d-4844-807a-fd30d3539d32",
                                    "child_jobs": [],
                                    "creation_time": 1560377760938,
                                    "error": {
                                        "code": -32603,
                                        "error": "'An input object reference is not a Genome. It was: KBaseGenomeAnnotations.GenomeAnnotation-2.1'\n\nTrace begun at /kb/module/bin/../lib/GenomeAnnotationAPI/GenomeAnnotationAPIClient.pm line 147\nGenomeAnnotationAPI::GenomeAnnotationAPIClient::_check_job('GenomeAnnotationAPI::GenomeAnnotationAPIClient=HASH(0xac03910)', '5610c856-852c-436b-8f6c-b06e56cf6e3e') called at /kb/module/bin/../lib/GenomeAnnotationAPI/GenomeAnnotationAPIClient.pm line 3776\nGenomeAnnotationAPI::GenomeAnnotationAPIClient::get_genome_v1('GenomeAnnotationAPI::GenomeAnnotationAPIClient=HASH(0xac03910)', 'HASH(0xadbe388)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 60\nRAST_SDK::RAST_SDKImpl::util_get_genome('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'wjriehl:narrative_1502225097649', '25022/24/2') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 188\nRAST_SDK::RAST_SDKImpl::annotate_process('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'HASH(0xa10a3b8)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 1227\nRAST_SDK::RAST_SDKImpl::annotate_genome('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'HASH(0xa10a3b8)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 300\neval {...} at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 292\nRAST_SDK::RAST_SDKServer::call_method('RAST_SDK::RAST_SDKServer=HASH(0xa125d78)', 'HASH(0xa10a3e8)', 'HASH(0xa127650)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 413\neval {...} at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 405\nRAST_SDK::RAST_SDKServer::handle_input_cli('RAST_SDK::RAST_SDKServer=HASH(0xa125d78)', '{\"version\":\"1.1\",\"method\":\"RAST_SDK.annotate_genome\",\"params\":[{\"call_pyrrolysoproteins\":0,\"workspace\":\"wjriehl:narrative_1502225097649\",\"retain_old_anno_for_hypotheticals\":0,\"input_genome\":\"25022/24/2\",\"kmer_v1_parameters\":1,\"call_features_prophage_phispy\":0,\"call_features_CDS_glimmer3\":0,\"call_features_CDS_prodigal\":0,\"call_features_strep_suis_repeat\":0,\"resolve_overlapping_features\":0,\"annotate_proteins_similarity\":1,\"call_features_tRNA_trnascan\":0,\"call_features_repeat_region_SEED\":0,\"annotate_proteins_kmer_v2\":1,\"call_features_rRNA_SEED\":0,\"call_features_strep_pneumo_repeat\":0,\"call_selenoproteins\":0,\"call_features_crispr\":0,\"output_genome\":\"asdfsa\"}],\"context\":{\"call_stack\":[{\"time\":\"2019-06-12T22:16:24+0000\",\"method\":\"RAST_SDK.annotate_genome\",\"job_id\":\"5d017999aa5a4d298c5dc32b\"}],\"run_id\":\"\"}}') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 742\n",
                                        "message": "'An input object reference is not a Genome. It was: KBaseGenomeAnnotations.GenomeAnnotation-2.1'\n\nTrace begun at /kb/module/bin/../lib/GenomeAnnotationAPI/GenomeAnnotationAPIClient.pm line 147\nGenomeAnnotationAPI::GenomeAnnotationAPIClient::_check_job('GenomeAnnotationAPI::GenomeAnnotationAPIClient=HASH(0xac03910)', '5610c856-852c-436b-8f6c-b06e56cf6e3e') called at /kb/module/bin/../lib/GenomeAnnotationAPI/GenomeAnnotationAPIClient.pm line 3776\nGenomeAnnotationAPI::GenomeAnnotationAPIClient::get_genome_v1('GenomeAnnotationAPI::GenomeAnnotationAPIClient=HASH(0xac03910)', 'HASH(0xadbe388)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 60\nRAST_SDK::RAST_SDKImpl::util_get_genome('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'wjriehl:narrative_1502225097649', '25022/24/2') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 188\nRAST_SDK::RAST_SDKImpl::annotate_process('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'HASH(0xa10a3b8)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKImpl.pm line 1227\nRAST_SDK::RAST_SDKImpl::annotate_genome('RAST_SDK::RAST_SDKImpl=HASH(0xa101490)', 'HASH(0xa10a3b8)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 300\neval {...} at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 292\nRAST_SDK::RAST_SDKServer::call_method('RAST_SDK::RAST_SDKServer=HASH(0xa125d78)', 'HASH(0xa10a3e8)', 'HASH(0xa127650)') called at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 413\neval {...} at /kb/module/bin/../lib/RAST_SDK/RAST_SDKServer.pm line 405\nRAST_SDK::RAST_SDKServer::handle_input_cli('RAST_SDK::RAST_SDKServer=HASH(0xa125d78)', '{\"version\":\"1.1\",\"method\":\"RAST_SDK.annotate_genome\",\"params\":[{\"call_pyrrolysoproteins\":0,\"workspace\":\"wjriehl:narrative_1502225097649\",\"retain_old_anno_for_hypotheticals\":0,\"input_genome\":\"25022/24/2\",\"kmer_v1_parameters\":1,\"call_features_prophage_phispy\":0,\"call_features_CDS_glimmer3\":0,\"call_features_CDS_prodigal\":0,\"call_features_strep_suis_repeat\":0,\"resolve_overlapping_features\":0,\"annotate_proteins_similarity\":1,\"call_features_tRNA_trnascan\":0,\"call_features_repeat_region_SEED\":0,\"annotate_proteins_kmer_v2\":1,\"call_features_rRNA_SEED\":0,\"call_features_strep_pneumo_repeat\":0,\"call_selenoproteins\":0,\"call_features_crispr\":0,\"output_genome\":\"asdfsa\"}],\"context\":{\"call_stack\":[{\"time\":\"2019-06-12T22:16:24+0000\",\"method\":\"RAST_SDK.annotate_genome\",\"job_id\":\"5d017999aa5a4d298c5dc32b\"}],\"run_id\":\"\"}}') called",
                                        "name": "JSONRPCError"
                                    },
                                    "exec_start_time": 1560377784295,
                                    "finish_time": 1560377801243,
                                    "finished": 1,
                                    "job_id": "5d017999aa5a4d298c5dc32b",
                                    "job_state": "suspend",
                                    "run_id": "945caf42-02c9-4a5f-a6c3-4a65821b0be6",
                                    "status": [
                                        "2019-06-12T22:16:41+0000",
                                        "error",
                                        "'An input object reference is not a Genome. It was: KBaseGenomeAnnotations.GenomeAnnotation-2.1'\n\nTrace begun at /kb/module/bin/../lib/GenomeAnnotationAPI/GenomeAnnotationAPIClient.pm line 147\nGeno...",
                                        null,
                                        null,
                                        1,
                                        1
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1563918075420,
                                "launchState": {
                                    "cell_id": "31c1d49c-ed1d-4844-807a-fd30d3539d32",
                                    "event": "launched_job",
                                    "event_at": "2019-06-12T22:16:01.116012Z",
                                    "job_id": "5d017999aa5a4d298c5dc32b",
                                    "run_id": "945caf42-02c9-4a5f-a6c3-4a65821b0be6"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "error",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "annotate_proteins_kmer_v2": 1,
                                "annotate_proteins_similarity": 1,
                                "call_features_CDS_glimmer3": 0,
                                "call_features_CDS_prodigal": 0,
                                "call_features_crispr": 0,
                                "call_features_prophage_phispy": 0,
                                "call_features_rRNA_SEED": 0,
                                "call_features_repeat_region_SEED": 0,
                                "call_features_strep_pneumo_repeat": 0,
                                "call_features_strep_suis_repeat": 0,
                                "call_features_tRNA_trnascan": 0,
                                "call_pyrrolysoproteins": 0,
                                "call_selenoproteins": 0,
                                "input_genome": "4529_Ensembl",
                                "kmer_v1_parameters": 1,
                                "output_genome": "asdfsa",
                                "resolve_overlapping_features": 0,
                                "retain_old_anno_for_hypotheticals": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Wed, 12 Jun 2019 22:14:29 GMT",
                            "id": "31c1d49c-ed1d-4844-807a-fd30d3539d32",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/reannotate_microbial_genome/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                            "title": "Annotate Microbial Genome"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/reannotate_microbial_genome\",\n    {\n        \"input_genome\": \"4529_Ensembl\",\n        \"output_genome\": \"asdfsa\",\n        \"call_features_rRNA_SEED\": 0,\n        \"call_features_tRNA_trnascan\": 0,\n        \"call_selenoproteins\": 0,\n        \"call_pyrrolysoproteins\": 0,\n        \"call_features_repeat_region_SEED\": 0,\n        \"call_features_strep_suis_repeat\": 0,\n        \"call_features_strep_pneumo_repeat\": 0,\n        \"call_features_crispr\": 0,\n        \"call_features_CDS_glimmer3\": 0,\n        \"call_features_CDS_prodigal\": 0,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"kmer_v1_parameters\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"retain_old_anno_for_hypotheticals\": 0,\n        \"resolve_overlapping_features\": 0,\n        \"call_features_prophage_phispy\": 0\n    },\n    tag=\"release\",\n    version=\"0.1.1\",\n    cell_id=\"31c1d49c-ed1d-4844-807a-fd30d3539d32\",\n    run_id=\"945caf42-02c9-4a5f-a6c3-4a65821b0be6\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 12 Jun 2019 20:52:23 GMT",
                            "icon": "database",
                            "id": "2aede931-fca4-42ad-a91c-5eb1d9185655",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "subtitle": "v15 - KBaseGenomes.Genome-8.0",
                            "title": "bsub_annotation"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "c85809f93839d0316bd231b3d3ba658f",
                                "id": 25,
                                "metadata": {
                                    "Close genomes": "30",
                                    "Domain": "B",
                                    "GC content": "0.5",
                                    "Genetic code": "11",
                                    "MD5": "dbf77105f122414ce1969295209d0f14",
                                    "Name": "B subtilis",
                                    "Number contigs": "1",
                                    "Number features": "4553",
                                    "Size": "4215606",
                                    "Source": "KBase",
                                    "Source ID": "bsub_annotation"
                                },
                                "name": "bsub_annotation",
                                "obj_id": "ws.25022.obj.25",
                                "ref": "25022/25/15",
                                "ref_path": null,
                                "saveDate": "2019-06-12T20:51:08.000Z",
                                "save_date": "2019-06-12T20:51:08+0000",
                                "saved_by": "wjriehl",
                                "size": 2684445,
                                "type": "KBaseGenomes.Genome-8.0",
                                "typeMajorVersion": "8",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseGenomes",
                                "typeName": "Genome",
                                "version": 15,
                                "ws": "wjriehl:narrative_1502225097649",
                                "ws_id": 25022,
                                "wsid": 25022
                            },
                            "upas": {
                                "id": "[25022]/25/15"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-b9bdd9d9-fea9-46ea-a6ed-6181c368476d' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-b9bdd9d9-fea9-46ea-a6ed-6181c368476d'), {\n                \"upas\": {\"id\": \"25022/25/15\"},\n                \"data\": {\"ws\": \"wjriehl:narrative_1502225097649\", \"id\": \"bsub_annotation\"},\n                \"type\": \"viewer\",\n                \"widget\": \"kbaseGenomeView\",\n                \"cellId\": \"2aede931-fca4-42ad-a91c-5eb1d9185655\",\n                \"title\": \"bsub_annotation\",\n                \"time\": 1560372744078\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"25022/25/15\",\n    cell_id=\"2aede931-fca4-42ad-a91c-5eb1d9185655\",\n    title=\"bsub_annotation\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "daaf0bd2a797f60c85dfbfe3a0b4e7568037e763",
                                "id": "NarrativeTest/introspect_job",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "string_1",
                                                "target_property": "param1"
                                            },
                                            {
                                                "input_parameter": "string_2",
                                                "target_property": "param2"
                                            }
                                        ],
                                        "kb_service_method": "introspect_job_info",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "context"
                                                ],
                                                "target_property": "context"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "params"
                                                ],
                                                "target_property": "params"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "config"
                                                ],
                                                "target_property": "config"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "daaf0bd2a797f60c85dfbfe3a0b4e7568037e763"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [],
                                        "git_commit_hash": "daaf0bd2a797f60c85dfbfe3a0b4e7568037e763",
                                        "id": "NarrativeTest/introspect_job",
                                        "input_types": [],
                                        "module_name": "NarrativeTest",
                                        "name": "Introspect Job",
                                        "namespace": "NarrativeTest",
                                        "output_types": [],
                                        "subtitle": "Introspect the information provided to an app",
                                        "tooltip": "Introspect the information provided to an app",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Some dummy text",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "string_1",
                                            "optional": 0,
                                            "short_hint": "Some dummy text",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Text Input 1"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Some more dummy text",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "string_2",
                                            "optional": 0,
                                            "short_hint": "Some more dummy text",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Text Input 2"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseDefaultNarrativeOutput"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "965434e5-b09c-4d34-b87d-dec9c26a8fe1",
                                    "child_jobs": [],
                                    "creation_time": 1553024235204,
                                    "exec_start_time": 1553026635855,
                                    "finish_time": 1553026647030,
                                    "finished": 1,
                                    "job_id": "5c9144e2279b8f28b2bcd958",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "config": {
                                                "auth-service-url": "https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login",
                                                "auth-service-url-allow-insecure": "false",
                                                "handle-service-url": "https://ci.kbase.us/services/handle_service",
                                                "job-service-url": "https://ci.kbase.us/services/userandjobstate/",
                                                "kbase-endpoint": "https://ci.kbase.us/services",
                                                "njsw-url": "https://ci.kbase.us/services/njs_wrapper",
                                                "scratch": "/kb/module/work/tmp",
                                                "shock-url": "https://ci.kbase.us/services/shock-api",
                                                "srv-wiz-url": "https://ci.kbase.us/services/service_wizard",
                                                "workspace-url": "https://ci.kbase.us/services/ws"
                                            },
                                            "context": {
                                                "CLI": 1,
                                                "authenticated": 1,
                                                "call_id": null,
                                                "client_ip": null,
                                                "method": "introspect_job_info",
                                                "module": "NarrativeTest",
                                                "provenance": [
                                                    {
                                                        "method": "introspect_job_info",
                                                        "method_params": [
                                                            {
                                                                "param1": "foo",
                                                                "param2": "bar"
                                                            }
                                                        ],
                                                        "service": "NarrativeTest"
                                                    }
                                                ],
                                                "rpc_context": {
                                                    "call_stack": [
                                                        {
                                                            "job_id": "5c9144e2279b8f28b2bcd958",
                                                            "method": "NarrativeTest.introspect_job_info",
                                                            "time": "2019-03-19T20:17:15+0000"
                                                        }
                                                    ],
                                                    "run_id": ""
                                                },
                                                "token": "lol, no",
                                                "user_id": "wjriehl"
                                            },
                                            "params": {
                                                "param1": "foo",
                                                "param2": "bar"
                                            }
                                        }
                                    ],
                                    "run_id": "6d5063fd-503b-4433-badc-f5a7fe0a2495",
                                    "status": [
                                        "2019-03-19T20:17:27+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1553294190537,
                                "launchState": {
                                    "cell_id": "965434e5-b09c-4d34-b87d-dec9c26a8fe1",
                                    "event": "launched_job",
                                    "event_at": "2019-03-19T19:37:15.245838Z",
                                    "job_id": "5c9144e2279b8f28b2bcd958",
                                    "run_id": "6d5063fd-503b-4433-badc-f5a7fe0a2495"
                                },
                                "outputWidgetInfo": {
                                    "name": "kbaseDefaultNarrativeOutput",
                                    "params": {
                                        "config": {
                                            "auth-service-url": "https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login",
                                            "auth-service-url-allow-insecure": "false",
                                            "handle-service-url": "https://ci.kbase.us/services/handle_service",
                                            "job-service-url": "https://ci.kbase.us/services/userandjobstate/",
                                            "kbase-endpoint": "https://ci.kbase.us/services",
                                            "njsw-url": "https://ci.kbase.us/services/njs_wrapper",
                                            "scratch": "/kb/module/work/tmp",
                                            "shock-url": "https://ci.kbase.us/services/shock-api",
                                            "srv-wiz-url": "https://ci.kbase.us/services/service_wizard",
                                            "workspace-url": "https://ci.kbase.us/services/ws"
                                        },
                                        "context": {
                                            "CLI": 1,
                                            "authenticated": 1,
                                            "call_id": null,
                                            "client_ip": null,
                                            "method": "introspect_job_info",
                                            "module": "NarrativeTest",
                                            "provenance": [
                                                {
                                                    "method": "introspect_job_info",
                                                    "method_params": [
                                                        {
                                                            "param1": "foo",
                                                            "param2": "bar"
                                                        }
                                                    ],
                                                    "service": "NarrativeTest"
                                                }
                                            ],
                                            "rpc_context": {
                                                "call_stack": [
                                                    {
                                                        "job_id": "5c9144e2279b8f28b2bcd958",
                                                        "method": "NarrativeTest.introspect_job_info",
                                                        "time": "2019-03-19T20:17:15+0000"
                                                    }
                                                ],
                                                "run_id": ""
                                            },
                                            "token": "lol, no",
                                            "user_id": "wjriehl"
                                        },
                                        "params": {
                                            "param1": "foo",
                                            "param2": "bar"
                                        }
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Introspect Job",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5c9144e2279b8f28b2bcd958": {
                                        "cell": {
                                            "created": true,
                                            "id": "719e38ef-f380-493b-8d7d-081e6c86dde4"
                                        },
                                        "createdAt": "Fri, 22 Mar 2019 22:36:30 GMT",
                                        "params": {
                                            "string_1": "foo",
                                            "string_2": "bar"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "string_1": "foo",
                                "string_2": "bar"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 19 Mar 2019 19:36:57 GMT",
                            "id": "965434e5-b09c-4d34-b87d-dec9c26a8fe1",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/introspect_job/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Introspect the information provided to an app",
                            "title": "Introspect Job"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/introspect_job\",\n    {\n        \"string_1\": \"foo\",\n        \"string_2\": \"bar\"\n    },\n    tag=\"dev\",\n    version=\"daaf0bd2a797f60c85dfbfe3a0b4e7568037e763\",\n    cell_id=\"965434e5-b09c-4d34-b87d-dec9c26a8fe1\",\n    run_id=\"6d5063fd-503b-4433-badc-f5a7fe0a2495\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 22 Mar 2019 22:36:30 GMT",
                            "icon": "arrow-right",
                            "id": "719e38ef-f380-493b-8d7d-081e6c86dde4",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "title": "Output from Introspect Job"
                        },
                        "dataCell": {
                            "upas": {}
                        },
                        "outputCell": {
                            "jobId": "5c9144e2279b8f28b2bcd958",
                            "parentCellId": "965434e5-b09c-4d34-b87d-dec9c26a8fe1",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseDefaultNarrativeOutput",
                                "params": {
                                    "config": {
                                        "auth-service-url": "https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login",
                                        "auth-service-url-allow-insecure": "false",
                                        "handle-service-url": "https://ci.kbase.us/services/handle_service",
                                        "job-service-url": "https://ci.kbase.us/services/userandjobstate/",
                                        "kbase-endpoint": "https://ci.kbase.us/services",
                                        "njsw-url": "https://ci.kbase.us/services/njs_wrapper",
                                        "scratch": "/kb/module/work/tmp",
                                        "shock-url": "https://ci.kbase.us/services/shock-api",
                                        "srv-wiz-url": "https://ci.kbase.us/services/service_wizard",
                                        "workspace-url": "https://ci.kbase.us/services/ws"
                                    },
                                    "context": {
                                        "CLI": 1,
                                        "authenticated": 1,
                                        "call_id": null,
                                        "client_ip": null,
                                        "method": "introspect_job_info",
                                        "module": "NarrativeTest",
                                        "provenance": [
                                            {
                                                "method": "introspect_job_info",
                                                "method_params": [
                                                    {
                                                        "param1": "foo",
                                                        "param2": "bar"
                                                    }
                                                ],
                                                "service": "NarrativeTest"
                                            }
                                        ],
                                        "rpc_context": {
                                            "call_stack": [
                                                {
                                                    "job_id": "5c9144e2279b8f28b2bcd958",
                                                    "method": "NarrativeTest.introspect_job_info",
                                                    "time": "2019-03-19T20:17:15+0000"
                                                }
                                            ],
                                            "run_id": ""
                                        },
                                        "token": "lol, no",
                                        "user_id": "wjriehl"
                                    },
                                    "params": {
                                        "param1": "foo",
                                        "param2": "bar"
                                    }
                                },
                                "tag": "dev"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-40708611-ca7c-4778-97ba-de44b0072fb2' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-40708611-ca7c-4778-97ba-de44b0072fb2'), {\n                \"upas\": {},\n                \"data\": {\"context\": {\"authenticated\": 1, \"CLI\": 1, \"rpc_context\": {\"run_id\": \"\", \"call_stack\": [{\"method\": \"NarrativeTest.introspect_job_info\", \"job_id\": \"5c9144e2279b8f28b2bcd958\", \"time\": \"2019-03-19T20:17:15+0000\"}]}, \"provenance\": [{\"method\": \"introspect_job_info\", \"service\": \"NarrativeTest\", \"method_params\": [{\"param1\": \"foo\", \"param2\": \"bar\"}]}], \"method\": \"introspect_job_info\", \"user_id\": \"wjriehl\", \"module\": \"NarrativeTest\", \"client_ip\": null, \"call_id\": null, \"token\": \"lol, no\"}, \"params\": {\"param1\": \"foo\", \"param2\": \"bar\"}, \"config\": {\"shock-url\": \"https://ci.kbase.us/services/shock-api\", \"job-service-url\": \"https://ci.kbase.us/services/userandjobstate/\", \"srv-wiz-url\": \"https://ci.kbase.us/services/service_wizard\", \"njsw-url\": \"https://ci.kbase.us/services/njs_wrapper\", \"auth-service-url-allow-insecure\": \"false\", \"kbase-endpoint\": \"https://ci.kbase.us/services\", \"scratch\": \"/kb/module/work/tmp\", \"handle-service-url\": \"https://ci.kbase.us/services/handle_service\", \"auth-service-url\": \"https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login\", \"workspace-url\": \"https://ci.kbase.us/services/ws\"}},\n                \"type\": \"method\",\n                \"widget\": \"kbaseDefaultNarrativeOutput\",\n                \"cellId\": \"719e38ef-f380-493b-8d7d-081e6c86dde4\",\n                \"title\": \"\",\n                \"time\": 1553294190664\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseDefaultNarrativeOutput\",\n    {\n        \"context\": {\n            \"authenticated\": 1,\n            \"CLI\": 1,\n            \"rpc_context\": {\n                \"run_id\": \"\",\n                \"call_stack\": [{\n                    \"method\": \"NarrativeTest.introspect_job_info\",\n                    \"job_id\": \"5c9144e2279b8f28b2bcd958\",\n                    \"time\": \"2019-03-19T20:17:15+0000\"\n                }]\n            },\n            \"provenance\": [{\n                \"method\": \"introspect_job_info\",\n                \"service\": \"NarrativeTest\",\n                \"method_params\": [{\n                    \"param1\": \"foo\",\n                    \"param2\": \"bar\"\n                }]\n            }],\n            \"method\": \"introspect_job_info\",\n            \"user_id\": \"wjriehl\",\n            \"module\": \"NarrativeTest\",\n            \"client_ip\": None,\n            \"call_id\": None,\n            \"token\": \"lol, no\"\n        },\n        \"params\": {\n            \"param1\": \"foo\",\n            \"param2\": \"bar\"\n        },\n        \"config\": {\n            \"shock-url\": \"https://ci.kbase.us/services/shock-api\",\n            \"job-service-url\": \"https://ci.kbase.us/services/userandjobstate/\",\n            \"srv-wiz-url\": \"https://ci.kbase.us/services/service_wizard\",\n            \"njsw-url\": \"https://ci.kbase.us/services/njs_wrapper\",\n            \"auth-service-url-allow-insecure\": \"false\",\n            \"kbase-endpoint\": \"https://ci.kbase.us/services\",\n            \"scratch\": \"/kb/module/work/tmp\",\n            \"handle-service-url\": \"https://ci.kbase.us/services/handle_service\",\n            \"auth-service-url\": \"https://ci.kbase.us/services/auth/api/legacy/KBase/Sessions/Login\",\n            \"workspace-url\": \"https://ci.kbase.us/services/ws\"\n        }\n    },\n    tag=\"dev\",\n    cell_id=\"719e38ef-f380-493b-8d7d-081e6c86dde4\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 9,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Sat, 22 Sep 2018 16:15:39 GMT",
                            "icon": "code",
                            "id": "4cfa373f-dfd1-492b-901e-9daf2235868c",
                            "lastLoaded": "Sat, 22 Sep 2018 16:15:39 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "require(['api/auth', 'narrativeConfig'], (Auth, Config) => {\n    let auth = Auth.make({url: Config.url('auth')});\n    auth.getCurrentProfile(auth.getAuthToken())\n        .then((info) => {\n            if (info.idents) {\n//                 info.idents = [{'provider': 'foo'}];\n                let foundGlobus = info.idents.some(ident => ident.provider.toLocaleLowerCase() === 'globus');\n                console.log(foundGlobus);\n            }\n        });\n});",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "metadata": {},
                        "output_type": "display_data"
                    }
                ],
                "source": "%%javascript\nrequire(['api/auth', 'narrativeConfig'], (Auth, Config) => {\n    let auth = Auth.make({url: Config.url('auth')});\n    auth.getCurrentProfile(auth.getAuthToken())\n        .then((info) => {\n            if (info.idents) {\n                let foundGlobus = info.idents.some(ident => ident.provider.toLocaleLowerCase() === 'globus');\n                console.log(foundGlobus);\n            }\n        });\n});"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Mon, 08 Jan 2018 23:48:48 GMT",
                            "icon": "code",
                            "id": "f1b52f9a-598d-406b-91d6-20ae076596f8",
                            "lastLoaded": "Mon, 08 Jan 2018 23:48:48 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "var x = ['1', '2', '3']\nvar y = x.map(function(v) { return v*2; });\nconsole.log(x);\nconsole.log(y);",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "metadata": {},
                        "output_type": "display_data"
                    }
                ],
                "source": "%%javascript\nvar x = ['1', '2', '3']\nvar y = x.map(function(v) { return v*2; });\nconsole.log(x);\nconsole.log(y);"
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "be11b8565ec27d8d1df75b3f26862dbf4a738e5b",
                                "id": "NarrativeTest/report_example",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "text_input",
                                                "target_property": "text_input"
                                            },
                                            {
                                                "input_parameter": "checkbox_input",
                                                "target_property": "checkbox_input"
                                            }
                                        ],
                                        "kb_service_method": "example_report",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "be11b8565ec27d8d1df75b3f26862dbf4a738e5b"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [],
                                        "git_commit_hash": "be11b8565ec27d8d1df75b3f26862dbf4a738e5b",
                                        "id": "NarrativeTest/report_example",
                                        "input_types": [],
                                        "module_name": "NarrativeTest",
                                        "name": "Example HTML Report",
                                        "namespace": "NarrativeTest",
                                        "output_types": [],
                                        "subtitle": "Show an example HTML Report",
                                        "tooltip": "Show an example HTML Report",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Some input test goes here",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "text_input",
                                            "optional": 1,
                                            "short_hint": "Add some text for your report",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Text Input"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Your report will show this being checked or not",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "checkbox_input",
                                            "optional": 0,
                                            "short_hint": "Show this off in your report",
                                            "ui_class": "parameter",
                                            "ui_name": "Checkbox Input"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "d7bb01ae-8e73-40cb-a7f7-037fdec5acf2",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                                    "creation_time": 1516653596610,
                                    "exec_start_time": 1516653601411,
                                    "finish_time": 1516653629816,
                                    "finished": 1,
                                    "job_id": "5a664c1ce4b0ace8f870f569",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "NarrativeTest.example_report8e0d950c-f727-4acb-a51b-2c70fdb9e8f7",
                                            "report_ref": "25022/13/1"
                                        }
                                    ],
                                    "run_id": null,
                                    "status": [
                                        "2018-01-22T20:40:29+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516839845044,
                                "launchState": {
                                    "cell_id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                                    "event": "launched_job",
                                    "event_at": "2018-01-22T20:39:56.619338Z",
                                    "job_id": "5a664c1ce4b0ace8f870f569",
                                    "run_id": "8a73d933-fbf1-48d6-804a-3f56b4368841"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-22T20:39:56.186Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-22T20:39:56.736Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d7bb01ae-8e73-40cb-a7f7-037fdec5acf2",
                                                "awe_job_state": "queued",
                                                "cell_id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                                                "creation_time": 1516653596610,
                                                "finished": 0,
                                                "job_id": "5a664c1ce4b0ace8f870f569",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "8a73d933-fbf1-48d6-804a-3f56b4368841",
                                                "status": [
                                                    "2018-01-22T20:39:56+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "8df7223e-83f2-42e2-aa2d-b4b797b2944b",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:39:56.847Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d7bb01ae-8e73-40cb-a7f7-037fdec5acf2",
                                                "awe_job_state": "queued",
                                                "cell_id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                                                "creation_time": 1516653596610,
                                                "finished": 0,
                                                "job_id": "5a664c1ce4b0ace8f870f569",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "8a73d933-fbf1-48d6-804a-3f56b4368841",
                                                "status": [
                                                    "2018-01-22T20:39:56+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:39:57.076Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d7bb01ae-8e73-40cb-a7f7-037fdec5acf2",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                                                "creation_time": 1516653596610,
                                                "exec_start_time": 1516653601411,
                                                "finish_time": 1516653629816,
                                                "finished": 1,
                                                "job_id": "5a664c1ce4b0ace8f870f569",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "NarrativeTest.example_report8e0d950c-f727-4acb-a51b-2c70fdb9e8f7",
                                                        "report_ref": "25022/13/1"
                                                    }
                                                ],
                                                "run_id": null,
                                                "status": [
                                                    "2018-01-22T20:40:29+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-25T00:24:05.044Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "NarrativeTest.example_report8e0d950c-f727-4acb-a51b-2c70fdb9e8f7",
                                        "report_ref": "25022/13/1",
                                        "report_window_line_height": "16"
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Example HTML Report",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a664c1ce4b0ace8f870f569": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 19 Mar 2018 20:38:53 GMT",
                                        "params": {
                                            "checkbox_input": 1,
                                            "text_input": "This is an HTML report. It's very small, but useful. Hello!"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "checkbox_input": 1,
                                "text_input": "This is an HTML report. It's very small, but useful. Hello!"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 22 Jan 2018 20:39:36 GMT",
                            "id": "3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/report_example/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Show an example HTML Report",
                            "title": "Example HTML Report"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/report_example\",\n    {\n        \"text_input\": \"This is an HTML report. It\\'s very small, but useful. Hello!\",\n        \"checkbox_input\": 1\n    },\n    tag=\"dev\",\n    version=\"be11b8565ec27d8d1df75b3f26862dbf4a738e5b\",\n    cell_id=\"3c312d8f-4f8e-4c4a-9a31-ad7bcda48ccf\",\n    run_id=\"8a73d933-fbf1-48d6-804a-3f56b4368841\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "b45261584ab5c5bd6c6efc0d9abf123377467a8f",
                                "id": "NarrativeTest/report_example",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "text_input",
                                                "target_property": "text_input"
                                            },
                                            {
                                                "input_parameter": "checkbox_input",
                                                "target_property": "checkbox_input"
                                            }
                                        ],
                                        "kb_service_method": "example_report",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "b45261584ab5c5bd6c6efc0d9abf123377467a8f"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [],
                                        "git_commit_hash": "b45261584ab5c5bd6c6efc0d9abf123377467a8f",
                                        "id": "NarrativeTest/report_example",
                                        "input_types": [],
                                        "module_name": "NarrativeTest",
                                        "name": "Example HTML Report",
                                        "namespace": "NarrativeTest",
                                        "output_types": [],
                                        "subtitle": "Show an example HTML Report",
                                        "tooltip": "Show an example HTML Report",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Some input test goes here",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "text_input",
                                            "optional": 1,
                                            "short_hint": "Add some text for your report",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Text Input"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Your report will show this being checked or not",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "checkbox_input",
                                            "optional": 0,
                                            "short_hint": "Show this off in your report",
                                            "ui_class": "parameter",
                                            "ui_name": "Checkbox Input"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                    "creation_time": 1516653410534,
                                    "exec_start_time": 1516653413033,
                                    "finish_time": 1516653441364,
                                    "finished": 1,
                                    "job_id": "5a664b62e4b0ace8f870f568",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "NarrativeTest.example_report1ceed2fa-aa79-47c0-8f5b-bb30eaa433a4",
                                            "report_ref": "25022/12/1"
                                        }
                                    ],
                                    "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                    "status": [
                                        "2018-01-22T20:37:21+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516653451534,
                                "launchState": {
                                    "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                    "event": "launched_job",
                                    "event_at": "2018-01-22T20:36:50.542631Z",
                                    "job_id": "5a664b62e4b0ace8f870f568",
                                    "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-22T20:36:50.131Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-22T20:36:50.674Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                                "awe_job_state": "queued",
                                                "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                                "creation_time": 1516653410534,
                                                "finished": 0,
                                                "job_id": "5a664b62e4b0ace8f870f568",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                                "status": [
                                                    "2018-01-22T20:36:50+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "05d6d4df-9d24-4529-a7c9-a92006cfdff6",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:36:50.778Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                                "creation_time": 1516653410534,
                                                "finished": 0,
                                                "job_id": "5a664b62e4b0ace8f870f568",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                                "status": [
                                                    "2018-01-22T20:36:50+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:36:51.001Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                                "creation_time": 1516653410534,
                                                "exec_start_time": 1516653413033,
                                                "finished": 0,
                                                "job_id": "5a664b62e4b0ace8f870f568",
                                                "job_state": "in-progress",
                                                "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                                "status": [
                                                    "2018-01-22T20:36:53+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:37:01.224Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                                "creation_time": 1516653410534,
                                                "exec_start_time": 1516653413033,
                                                "finish_time": 1516653441364,
                                                "finished": 0,
                                                "job_id": "5a664b62e4b0ace8f870f568",
                                                "job_state": "in-progress",
                                                "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                                "status": [
                                                    "2018-01-22T20:36:53+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:37:21.497Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "36aad25a-181f-4f36-b05f-3db3f547809e",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "57697412-eaf2-4dde-9251-20a7df813797",
                                                "creation_time": 1516653410534,
                                                "exec_start_time": 1516653413033,
                                                "finish_time": 1516653441364,
                                                "finished": 1,
                                                "job_id": "5a664b62e4b0ace8f870f568",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "NarrativeTest.example_report1ceed2fa-aa79-47c0-8f5b-bb30eaa433a4",
                                                        "report_ref": "25022/12/1"
                                                    }
                                                ],
                                                "run_id": "4137cb77-e87a-4a5f-a827-4da3538e8470",
                                                "status": [
                                                    "2018-01-22T20:37:21+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:37:31.534Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "NarrativeTest.example_report1ceed2fa-aa79-47c0-8f5b-bb30eaa433a4",
                                        "report_ref": "25022/12/1",
                                        "report_window_line_height": "16"
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Example HTML Report",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a664b62e4b0ace8f870f568": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 19 Mar 2018 20:38:53 GMT",
                                        "params": {
                                            "checkbox_input": 1,
                                            "text_input": "i am a report. hello!"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "checkbox_input": 1,
                                "text_input": "i am a report. hello!"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 22 Jan 2018 20:36:40 GMT",
                            "id": "57697412-eaf2-4dde-9251-20a7df813797",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/report_example/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Show an example HTML Report",
                            "title": "Example HTML Report"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/report_example\",\n    {\n        \"text_input\": \"i am a report. hello!\",\n        \"checkbox_input\": 1\n    },\n    tag=\"dev\",\n    version=\"b45261584ab5c5bd6c6efc0d9abf123377467a8f\",\n    cell_id=\"57697412-eaf2-4dde-9251-20a7df813797\",\n    run_id=\"4137cb77-e87a-4a5f-a827-4da3538e8470\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4fa11388bfaea2d912e62ffc24220f60c8acdda3",
                                "id": "NarrativeTest/report_example",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "text_input",
                                                "target_property": "text_input"
                                            },
                                            {
                                                "input_parameter": "checkbox_input",
                                                "target_property": "checkbox_input"
                                            }
                                        ],
                                        "kb_service_method": "example_report",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4fa11388bfaea2d912e62ffc24220f60c8acdda3"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [],
                                        "git_commit_hash": "4fa11388bfaea2d912e62ffc24220f60c8acdda3",
                                        "id": "NarrativeTest/report_example",
                                        "input_types": [],
                                        "module_name": "NarrativeTest",
                                        "name": "Example HTML Report",
                                        "namespace": "NarrativeTest",
                                        "output_types": [],
                                        "subtitle": "Show an example HTML Report",
                                        "tooltip": "Show an example HTML Report",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Some input test goes here",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "text_input",
                                            "optional": 1,
                                            "short_hint": "Add some text for your report",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Text Input"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Your report will show this being checked or not",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "checkbox_input",
                                            "optional": 0,
                                            "short_hint": "Show this off in your report",
                                            "ui_class": "parameter",
                                            "ui_name": "Checkbox Input"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                    "creation_time": 1516652284690,
                                    "exec_start_time": 1516652288828,
                                    "finish_time": 1516652336918,
                                    "finished": 1,
                                    "job_id": "5a6646fce4b0ace8f870f567",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "NarrativeTest.example_report87f0c12c-4cc3-4c1b-ac5d-1c77b8390f9d",
                                            "report_ref": "25022/11/1"
                                        }
                                    ],
                                    "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                    "status": [
                                        "2018-01-22T20:18:56+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516652345914,
                                "launchState": {
                                    "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                    "event": "launched_job",
                                    "event_at": "2018-01-22T20:18:04.698366Z",
                                    "job_id": "5a6646fce4b0ace8f870f567",
                                    "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-22T20:18:04.233Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-22T20:18:04.737Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                                "awe_job_state": "queued",
                                                "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                                "creation_time": 1516652284690,
                                                "finished": 0,
                                                "job_id": "5a6646fce4b0ace8f870f567",
                                                "job_state": "queued",
                                                "position": 2,
                                                "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                                "status": [
                                                    "2018-01-22T20:18:04+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "5325ccbf-d37e-4700-97a8-075239ba4c97",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:18:04.935Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                                "awe_job_state": "queued",
                                                "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                                "creation_time": 1516652284690,
                                                "finished": 0,
                                                "job_id": "5a6646fce4b0ace8f870f567",
                                                "job_state": "queued",
                                                "position": 2,
                                                "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                                "status": [
                                                    "2018-01-22T20:18:04+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:18:05.123Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                                "creation_time": 1516652284690,
                                                "exec_start_time": 1516652288828,
                                                "finished": 0,
                                                "job_id": "5a6646fce4b0ace8f870f567",
                                                "job_state": "in-progress",
                                                "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                                "status": [
                                                    "2018-01-22T20:18:08+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "token_id": "5325ccbf-d37e-4700-97a8-075239ba4c97",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:18:10.814Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                                "creation_time": 1516652284690,
                                                "exec_start_time": 1516652288828,
                                                "finished": 0,
                                                "job_id": "5a6646fce4b0ace8f870f567",
                                                "job_state": "in-progress",
                                                "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                                "status": [
                                                    "2018-01-22T20:18:08+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:18:15.343Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "59f63fba-a385-4860-9caf-d58f482d4705",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                                                "creation_time": 1516652284690,
                                                "exec_start_time": 1516652288828,
                                                "finish_time": 1516652336918,
                                                "finished": 1,
                                                "job_id": "5a6646fce4b0ace8f870f567",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "report_name": "NarrativeTest.example_report87f0c12c-4cc3-4c1b-ac5d-1c77b8390f9d",
                                                        "report_ref": "25022/11/1"
                                                    }
                                                ],
                                                "run_id": "b859541b-b246-405a-8e5a-5a26700ccf52",
                                                "status": [
                                                    "2018-01-22T20:18:56+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T20:19:05.914Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "NarrativeTest.example_report87f0c12c-4cc3-4c1b-ac5d-1c77b8390f9d",
                                        "report_ref": "25022/11/1",
                                        "report_window_line_height": "16"
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Example HTML Report",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a6646fce4b0ace8f870f567": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 19 Mar 2018 20:38:53 GMT",
                                        "params": {
                                            "checkbox_input": 1,
                                            "text_input": "i am a report. booga booga."
                                        }
                                    }
                                }
                            },
                            "params": {
                                "checkbox_input": 1,
                                "text_input": "i am a report. booga booga."
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 22 Jan 2018 20:17:49 GMT",
                            "id": "1eff7a02-b16a-4938-ac2a-09e2831820ce",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/report_example/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Show an example HTML Report",
                            "title": "Example HTML Report"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/report_example\",\n    {\n        \"text_input\": \"i am a report. booga booga.\",\n        \"checkbox_input\": 1\n    },\n    tag=\"dev\",\n    version=\"4fa11388bfaea2d912e62ffc24220f60c8acdda3\",\n    cell_id=\"1eff7a02-b16a-4938-ac2a-09e2831820ce\",\n    run_id=\"b859541b-b246-405a-8e5a-5a26700ccf52\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 9,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cac123b09271d200e018fbef52286b98e56daf42",
                                "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "import_type",
                                                "target_property": "import_type"
                                            },
                                            {
                                                "input_parameter": "fastq_fwd_staging_file_name",
                                                "target_property": "fastq_fwd_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "fastq_rev_staging_file_name",
                                                "target_property": "fastq_rev_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sra_staging_file_name",
                                                "target_property": "sra_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "interleaved",
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "import_reads_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cac123b09271d200e018fbef52286b98e56daf42"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "upload"
                                        ],
                                        "git_commit_hash": "cac123b09271d200e018fbef52286b98e56daf42",
                                        "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTQ/SRA File As Reads From Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                                        "tooltip": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                                        "ver": "0.1.18"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "FASTQ/FASTA"
                                            ],
                                            "description": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "FASTQ/FASTA",
                                                        "index": 0,
                                                        "value": "FASTQ/FASTA"
                                                    },
                                                    {
                                                        "display": "SRA",
                                                        "index": 1,
                                                        "value": "SRA"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "import_type",
                                            "optional": 0,
                                            "short_hint": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "ui_class": "parameter",
                                            "ui_name": "Import File Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_fwd_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Short read file containing a paired end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Forward/Left FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_rev_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Second short read file containing a paired end library in FASTA/FASTQ format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reverse/Right FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "SRA staing file path",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sra_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "SRA staing file path",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "SRA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads is interleaved",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "interleaved",
                                            "optional": 0,
                                            "short_hint": "Select if reads is interleaved",
                                            "ui_class": "parameter",
                                            "ui_name": "Interleaved"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseReadsViewer"
                                    }
                                },
                                "tag": "release",
                                "version": "0.1.18"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "01474be6-aca0-4d2d-b667-54c51972ebe9",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                    "creation_time": 1516315161003,
                                    "exec_start_time": 1516315166330,
                                    "finish_time": 1516315194794,
                                    "finished": 1,
                                    "job_id": "5a612218e4b0948e9dd05f59",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "25022/5/1",
                                            "report_name": "kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b",
                                            "report_ref": "25022/6/1"
                                        }
                                    ],
                                    "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7",
                                    "status": [
                                        "2018-01-18T22:39:54+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516315202682,
                                "launchState": {
                                    "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                    "event": "launched_job",
                                    "event_at": "2018-01-18T22:39:21.241134Z",
                                    "job_id": "5a612218e4b0948e9dd05f59",
                                    "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-18T22:39:20.743Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-18T22:39:21.247Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "01474be6-aca0-4d2d-b667-54c51972ebe9",
                                                "awe_job_state": "queued",
                                                "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                                "creation_time": 1516315161003,
                                                "finished": 0,
                                                "job_id": "5a612218e4b0948e9dd05f59",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7",
                                                "status": [
                                                    "2018-01-18T22:39:20+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "2ed0161b-e7cb-4f6d-9c8e-09803e62c1e9",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:39:21.436Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "01474be6-aca0-4d2d-b667-54c51972ebe9",
                                                "awe_job_state": "queued",
                                                "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                                "creation_time": 1516315161003,
                                                "finished": 0,
                                                "job_id": "5a612218e4b0948e9dd05f59",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7",
                                                "status": [
                                                    "2018-01-18T22:39:20+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:39:23.162Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "01474be6-aca0-4d2d-b667-54c51972ebe9",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                                "creation_time": 1516315161003,
                                                "exec_start_time": 1516315166330,
                                                "finished": 0,
                                                "job_id": "5a612218e4b0948e9dd05f59",
                                                "job_state": "in-progress",
                                                "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7",
                                                "status": [
                                                    "2018-01-18T22:39:26+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:39:32.327Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "01474be6-aca0-4d2d-b667-54c51972ebe9",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                                                "creation_time": 1516315161003,
                                                "exec_start_time": 1516315166330,
                                                "finish_time": 1516315194794,
                                                "finished": 1,
                                                "job_id": "5a612218e4b0948e9dd05f59",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "25022/5/1",
                                                        "report_name": "kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b",
                                                        "report_ref": "25022/6/1"
                                                    }
                                                ],
                                                "run_id": "c0915b0d-ecfd-4891-a142-c0d96c09d2b7",
                                                "status": [
                                                    "2018-01-18T22:39:54+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:40:02.682Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbaseReadsViewer",
                                    "params": {
                                        "obj_ref": "25022/5/1",
                                        "report_name": "kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b",
                                        "report_ref": "25022/6/1",
                                        "report_window_line_height": "16",
                                        "wsName": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import FASTQ/SRA File as Reads from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a612218e4b0948e9dd05f59": {
                                        "cell": {
                                            "created": true,
                                            "id": "3845f334-cfdd-4da6-965a-dc60ae316737"
                                        },
                                        "createdAt": "Thu, 18 Jan 2018 22:40:02 GMT",
                                        "params": {
                                            "fastq_fwd_staging_file_name": "small.forward.fq",
                                            "fastq_rev_staging_file_name": "",
                                            "import_type": "FASTQ/FASTA",
                                            "insert_size_mean": null,
                                            "insert_size_std_dev": null,
                                            "interleaved": 0,
                                            "name": "small.forward.fq_reads2",
                                            "read_orientation_outward": 0,
                                            "sequencing_tech": "Illumina",
                                            "single_genome": 1,
                                            "sra_staging_file_name": ""
                                        }
                                    }
                                }
                            },
                            "params": {
                                "fastq_fwd_staging_file_name": "small.forward.fq",
                                "fastq_rev_staging_file_name": "",
                                "import_type": "FASTQ/FASTA",
                                "insert_size_mean": null,
                                "insert_size_std_dev": null,
                                "interleaved": 0,
                                "name": "small.forward.fq_reads2",
                                "read_orientation_outward": 0,
                                "sequencing_tech": "Illumina",
                                "single_genome": 1,
                                "sra_staging_file_name": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 22:39:13 GMT",
                            "id": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fastq_sra_as_reads_from_staging/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                            "title": "Import FASTQ/SRA File As Reads From Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fastq_sra_as_reads_from_staging\",\n    {\n        \"import_type\": \"FASTQ/FASTA\",\n        \"fastq_fwd_staging_file_name\": \"small.forward.fq\",\n        \"fastq_rev_staging_file_name\": \"\",\n        \"sra_staging_file_name\": \"\",\n        \"sequencing_tech\": \"Illumina\",\n        \"name\": \"small.forward.fq_reads2\",\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0,\n        \"single_genome\": 1,\n        \"interleaved\": 0\n    },\n    tag=\"release\",\n    version=\"0.1.18\",\n    cell_id=\"2c23d3df-3d1d-4a4c-a55c-dc797d70c594\",\n    run_id=\"c0915b0d-ecfd-4891-a142-c0d96c09d2b7\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 11,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cac123b09271d200e018fbef52286b98e56daf42",
                                "id": "kb_uploadmethods/import_fasta_as_assembly_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "assembly_name",
                                                "target_property": "assembly_name"
                                            },
                                            {
                                                "input_parameter": "staging_file_subdir_path",
                                                "target_property": "staging_file_subdir_path"
                                            }
                                        ],
                                        "kb_service_method": "import_fasta_as_assembly_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cac123b09271d200e018fbef52286b98e56daf42"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "upload"
                                        ],
                                        "git_commit_hash": "cac123b09271d200e018fbef52286b98e56daf42",
                                        "id": "kb_uploadmethods/import_fasta_as_assembly_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import Fasta File As Assembly From Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Import A Staging Fasta File As Assembly Into Your Narrative",
                                        "tooltip": "Import A Staging Fasta File As Assembly Into Your Narrative",
                                        "ver": "0.1.18"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Recognized extensions for the FASTA input file are .fasta, .fna, or .fa",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "staging_file_subdir_path",
                                            "optional": 0,
                                            "short_hint": "File with DNA data (one or more sequences) in FASTA format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "FASTA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Assembly that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Assembly that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Assembly Object Name"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseNarrativeMethodInput",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "0.1.18"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "d0e80b00-0439-4f81-b11e-3709548b3ff0",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                    "creation_time": 1516316039629,
                                    "exec_start_time": 1516316045978,
                                    "finish_time": 1516316075375,
                                    "finished": 1,
                                    "job_id": "5a612587e4b0948e9dd05f5c",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "25022/7/1",
                                            "report_name": "kb_upload_mothods_report_fa129740-a73b-4243-a081-67c68d4b9432",
                                            "report_ref": "25022/8/1"
                                        }
                                    ],
                                    "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0",
                                    "status": [
                                        "2018-01-18T22:54:35+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516316081292,
                                "launchState": {
                                    "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                    "event": "launched_job",
                                    "event_at": "2018-01-18T22:53:59.863968Z",
                                    "job_id": "5a612587e4b0948e9dd05f5c",
                                    "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-18T22:53:59.292Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-18T22:53:59.870Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d0e80b00-0439-4f81-b11e-3709548b3ff0",
                                                "awe_job_state": "queued",
                                                "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                                "creation_time": 1516316039629,
                                                "finished": 0,
                                                "job_id": "5a612587e4b0948e9dd05f5c",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0",
                                                "status": [
                                                    "2018-01-18T22:53:59+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "37131702-f19c-4245-93dc-d06d33517f32",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:54:00.056Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d0e80b00-0439-4f81-b11e-3709548b3ff0",
                                                "awe_job_state": "queued",
                                                "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                                "creation_time": 1516316039629,
                                                "finished": 0,
                                                "job_id": "5a612587e4b0948e9dd05f5c",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0",
                                                "status": [
                                                    "2018-01-18T22:53:59+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:54:01.156Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d0e80b00-0439-4f81-b11e-3709548b3ff0",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                                "creation_time": 1516316039629,
                                                "exec_start_time": 1516316045978,
                                                "finished": 0,
                                                "job_id": "5a612587e4b0948e9dd05f5c",
                                                "job_state": "in-progress",
                                                "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0",
                                                "status": [
                                                    "2018-01-18T22:54:05+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:54:10.956Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "d0e80b00-0439-4f81-b11e-3709548b3ff0",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                                                "creation_time": 1516316039629,
                                                "exec_start_time": 1516316045978,
                                                "finish_time": 1516316075375,
                                                "finished": 1,
                                                "job_id": "5a612587e4b0948e9dd05f5c",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "25022/7/1",
                                                        "report_name": "kb_upload_mothods_report_fa129740-a73b-4243-a081-67c68d4b9432",
                                                        "report_ref": "25022/8/1"
                                                    }
                                                ],
                                                "run_id": "19f2fdf8-f106-4d91-971e-ed52cc4ed3f0",
                                                "status": [
                                                    "2018-01-18T22:54:35+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:54:41.292Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "obj_ref": "25022/7/1",
                                        "report_name": "kb_upload_mothods_report_fa129740-a73b-4243-a081-67c68d4b9432",
                                        "report_ref": "25022/8/1",
                                        "report_window_line_height": "16",
                                        "wsName": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import FASTA File as Assembly from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a612587e4b0948e9dd05f5c": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 19 Mar 2018 20:38:53 GMT",
                                        "params": {
                                            "assembly_name": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                            "staging_file_subdir_path": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "assembly_name": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                "staging_file_subdir_path": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 22:53:55 GMT",
                            "id": "b96e275a-6c45-4dae-a0d1-09785f4621a8",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fasta_as_assembly_from_staging/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import A Staging Fasta File As Assembly Into Your Narrative",
                            "title": "Import Fasta File As Assembly From Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fasta_as_assembly_from_staging\",\n    {\n        \"staging_file_subdir_path\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta\",\n        \"assembly_name\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly\"\n    },\n    tag=\"release\",\n    version=\"0.1.18\",\n    cell_id=\"b96e275a-6c45-4dae-a0d1-09785f4621a8\",\n    run_id=\"19f2fdf8-f106-4d91-971e-ed52cc4ed3f0\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 12,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "376efd14d584f6642a5ceeea33d3acd2d3c78b20",
                                "id": "kb_uploadmethods/import_fasta_as_assembly_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "assembly_name",
                                                "target_property": "assembly_name"
                                            },
                                            {
                                                "input_parameter": "staging_file_subdir_path",
                                                "target_property": "staging_file_subdir_path"
                                            }
                                        ],
                                        "kb_service_method": "import_fasta_as_assembly_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "376efd14d584f6642a5ceeea33d3acd2d3c78b20"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "376efd14d584f6642a5ceeea33d3acd2d3c78b20",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_fasta_as_assembly_from_staging&image_name=data-blue.png&tag=dev"
                                        },
                                        "id": "kb_uploadmethods/import_fasta_as_assembly_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTA File as Assembly from Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Import a FASTA file from your staging area into your Narrative as an Assembly data object",
                                        "tooltip": "Import a FASTA file from your staging area into your Narrative as an Assembly data object",
                                        "ver": "0.1.18"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Recognized extensions for the FASTA input file are .fasta, .fna, or .fa",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "staging_file_subdir_path",
                                            "optional": 0,
                                            "short_hint": "File with DNA data (one or more sequences) in FASTA format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "FASTA file path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "500"
                                            ],
                                            "description": "Contigs shorter than this value will be filtered out. Try larger value if upload fails.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "Contigs shorter than this length will be filtered out",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum contig length"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Assembly that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "assembly_name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Assembly that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Assembly object name"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseNarrativeMethodInput",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.1.18"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "b5c9fa71-cff3-4506-8835-833819494731",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                                    "creation_time": 1516321825103,
                                    "exec_start_time": 1516321827491,
                                    "finish_time": 1516321865000,
                                    "finished": 1,
                                    "job_id": "5a613c20e4b0948e9dd05f5d",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "25022/7/2",
                                            "report_name": "kb_upload_mothods_report_1b41d669-492e-41df-ba2e-de906fedacf8",
                                            "report_ref": "25022/9/1"
                                        }
                                    ],
                                    "run_id": null,
                                    "status": [
                                        "2018-01-19T00:31:05+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516638643713,
                                "launchState": {
                                    "cell_id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                                    "event": "launched_job",
                                    "event_at": "2018-01-19T00:30:24.169545Z",
                                    "job_id": "5a613c20e4b0948e9dd05f5d",
                                    "run_id": "96be7a37-045e-4ee1-81de-c8d0c7317c36"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-19T00:30:23.803Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-19T00:30:24.175Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b5c9fa71-cff3-4506-8835-833819494731",
                                                "awe_job_state": "queued",
                                                "cell_id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                                                "creation_time": 1516321825103,
                                                "finished": 0,
                                                "job_id": "5a613c20e4b0948e9dd05f5d",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "96be7a37-045e-4ee1-81de-c8d0c7317c36",
                                                "status": [
                                                    "2018-01-19T00:30:24+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "143a7121-93b4-448c-9a93-60bd7c8a107d",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-19T00:30:24.393Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b5c9fa71-cff3-4506-8835-833819494731",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                                                "creation_time": 1516321825103,
                                                "finished": 0,
                                                "job_id": "5a613c20e4b0948e9dd05f5d",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "96be7a37-045e-4ee1-81de-c8d0c7317c36",
                                                "status": [
                                                    "2018-01-19T00:30:24+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-19T00:30:26.186Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "b5c9fa71-cff3-4506-8835-833819494731",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                                                "creation_time": 1516321825103,
                                                "exec_start_time": 1516321827491,
                                                "finish_time": 1516321865000,
                                                "finished": 1,
                                                "job_id": "5a613c20e4b0948e9dd05f5d",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "25022/7/2",
                                                        "report_name": "kb_upload_mothods_report_1b41d669-492e-41df-ba2e-de906fedacf8",
                                                        "report_ref": "25022/9/1"
                                                    }
                                                ],
                                                "run_id": null,
                                                "status": [
                                                    "2018-01-19T00:31:05+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-22T16:30:43.713Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "obj_ref": "25022/7/2",
                                        "report_name": "kb_upload_mothods_report_1b41d669-492e-41df-ba2e-de906fedacf8",
                                        "report_ref": "25022/9/1",
                                        "report_window_line_height": "16",
                                        "wsName": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "dev"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import FASTA File as Assembly from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a613c20e4b0948e9dd05f5d": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Mon, 19 Mar 2018 20:38:53 GMT",
                                        "params": {
                                            "assembly_name": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                            "min_contig_length": 500,
                                            "staging_file_subdir_path": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "assembly_name": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                "min_contig_length": 500,
                                "staging_file_subdir_path": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 19 Jan 2018 00:30:20 GMT",
                            "id": "5a3448bc-2f22-4722-981e-a6ced9e648d5",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fasta_as_assembly_from_staging/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import a FASTA file from your staging area into your Narrative as an Assembly data object",
                            "title": "Import FASTA File as Assembly from Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fasta_as_assembly_from_staging\",\n    {\n        \"staging_file_subdir_path\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta\",\n        \"min_contig_length\": 500,\n        \"assembly_name\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly\"\n    },\n    tag=\"dev\",\n    version=\"376efd14d584f6642a5ceeea33d3acd2d3c78b20\",\n    cell_id=\"5a3448bc-2f22-4722-981e-a6ced9e648d5\",\n    run_id=\"96be7a37-045e-4ee1-81de-c8d0c7317c36\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 10,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 22:40:02 GMT",
                            "icon": "arrow-right",
                            "id": "3845f334-cfdd-4da6-965a-dc60ae316737",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "title": "Output from Import FASTQ/SRA File As Reads From Staging Area"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5a612218e4b0948e9dd05f59",
                            "parentCellId": "2c23d3df-3d1d-4a4c-a55c-dc797d70c594",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseReadsViewer",
                                "params": {
                                    "obj_ref": "25022/5/1",
                                    "report_name": "kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b",
                                    "report_ref": "25022/6/1",
                                    "report_window_line_height": "16",
                                    "wsName": "wjriehl:narrative_1502225097649"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-8befbd00-6a99-4035-a2d5-0c622ec6e5ed' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-8befbd00-6a99-4035-a2d5-0c622ec6e5ed'), {\n                \"data\": {\"report_window_line_height\": \"16\", \"obj_ref\": \"25022/5/1\", \"report_ref\": \"25022/6/1\", \"wsName\": \"wjriehl:narrative_1502225097649\", \"report_name\": \"kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseReadsViewer\",\n                \"cellId\":\"3845f334-cfdd-4da6-965a-dc60ae316737\",\n                \"title\":\"\",\n                \"time\":1516315202784\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 10,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseReadsViewer\",\n    {\n        \"report_window_line_height\": \"16\",\n        \"obj_ref\": \"25022/5/1\",\n        \"wsName\": \"wjriehl:narrative_1502225097649\",\n        \"report_ref\": \"25022/6/1\",\n        \"report_name\": \"kb_upload_mothods_report_53698979-1197-4f8c-945d-04d0315c818b\"\n    },\n    tag=\"release\",\n    cell_id=\"3845f334-cfdd-4da6-965a-dc60ae316737\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Mon, 08 Jan 2018 23:48:49 GMT",
                            "icon": "code",
                            "id": "b1a3e307-b01c-465b-8760-7ebde66525be",
                            "lastLoaded": "Mon, 08 Jan 2018 23:48:49 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "var x = [1, 2, 3, 4];\nvar val = x.reduce(function(acc, key) {\n    return acc + key;\n});\nconsole.log(val);",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "metadata": {},
                        "output_type": "display_data"
                    }
                ],
                "source": "%%javascript\nvar x = [1, 2, 3, 4];\nvar val = x.reduce(function(acc, key) {\n    return acc + key;\n});\nconsole.log(val);"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "cac123b09271d200e018fbef52286b98e56daf42",
                                "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "import_type",
                                                "target_property": "import_type"
                                            },
                                            {
                                                "input_parameter": "fastq_fwd_staging_file_name",
                                                "target_property": "fastq_fwd_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "fastq_rev_staging_file_name",
                                                "target_property": "fastq_rev_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sra_staging_file_name",
                                                "target_property": "sra_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "interleaved",
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "import_reads_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "cac123b09271d200e018fbef52286b98e56daf42"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "upload"
                                        ],
                                        "git_commit_hash": "cac123b09271d200e018fbef52286b98e56daf42",
                                        "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTQ/SRA File As Reads From Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                                        "tooltip": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                                        "ver": "0.1.18"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "FASTQ/FASTA"
                                            ],
                                            "description": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "FASTQ/FASTA",
                                                        "index": 0,
                                                        "value": "FASTQ/FASTA"
                                                    },
                                                    {
                                                        "display": "SRA",
                                                        "index": 1,
                                                        "value": "SRA"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "import_type",
                                            "optional": 0,
                                            "short_hint": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "ui_class": "parameter",
                                            "ui_name": "Import File Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_fwd_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Short read file containing a paired end library in FASTA/FASTQ format",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Forward/Left FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fastq_rev_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Second short read file containing a paired end library in FASTA/FASTQ format.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reverse/Right FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "SRA staing file path",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sra_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "SRA staing file path",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "SRA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads is interleaved",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "interleaved",
                                            "optional": 0,
                                            "short_hint": "Select if reads is interleaved",
                                            "ui_class": "parameter",
                                            "ui_name": "Interleaved"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseReadsViewer"
                                    }
                                },
                                "tag": "release",
                                "version": "0.1.18"
                            },
                            "exec": {
                                "jobState": {
                                    "awe_job_id": "62647e95-e3ad-4d5e-a910-14b56e47aa31",
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                    "creation_time": 1516314356957,
                                    "exec_start_time": 1516314361475,
                                    "finish_time": 1516314398028,
                                    "finished": 1,
                                    "job_id": "5a611ef4e4b0948e9dd05f58",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "25022/3/1",
                                            "report_name": "kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf",
                                            "report_ref": "25022/4/1"
                                        }
                                    ],
                                    "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb",
                                    "status": [
                                        "2018-01-18T22:26:38+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1516314398619,
                                "launchState": {
                                    "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                    "event": "launched_job",
                                    "event_at": "2018-01-18T22:25:57.191939Z",
                                    "job_id": "5a611ef4e4b0948e9dd05f58",
                                    "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb"
                                },
                                "log": [
                                    {
                                        "data": {
                                            "runId": "should be here"
                                        },
                                        "event": "execute-requested",
                                        "timestamp": "2018-01-18T22:25:56.109Z"
                                    },
                                    {
                                        "data": {
                                            "status": "launched_job"
                                        },
                                        "event": "launch-status",
                                        "timestamp": "2018-01-18T22:25:57.201Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "62647e95-e3ad-4d5e-a910-14b56e47aa31",
                                                "awe_job_state": "queued",
                                                "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                                "creation_time": 1516314356957,
                                                "finished": 0,
                                                "job_id": "5a611ef4e4b0948e9dd05f58",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb",
                                                "status": [
                                                    "2018-01-18T22:25:56+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "token_id": "40b1368d-43ce-48a8-8036-5c6e4ee57725",
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:25:57.430Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "62647e95-e3ad-4d5e-a910-14b56e47aa31",
                                                "awe_job_state": "queued",
                                                "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                                "creation_time": 1516314356957,
                                                "finished": 0,
                                                "job_id": "5a611ef4e4b0948e9dd05f58",
                                                "job_state": "queued",
                                                "position": 1,
                                                "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb",
                                                "status": [
                                                    "2018-01-18T22:25:56+0000",
                                                    "created",
                                                    null,
                                                    null,
                                                    null,
                                                    null,
                                                    null
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:25:59.557Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "62647e95-e3ad-4d5e-a910-14b56e47aa31",
                                                "awe_job_state": "in-progress",
                                                "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                                "creation_time": 1516314356957,
                                                "exec_start_time": 1516314361475,
                                                "finished": 0,
                                                "job_id": "5a611ef4e4b0948e9dd05f58",
                                                "job_state": "in-progress",
                                                "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb",
                                                "status": [
                                                    "2018-01-18T22:26:01+0000",
                                                    "started",
                                                    "running",
                                                    null,
                                                    null,
                                                    0,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:26:08.272Z"
                                    },
                                    {
                                        "data": {
                                            "jobState": {
                                                "awe_job_id": "62647e95-e3ad-4d5e-a910-14b56e47aa31",
                                                "canceled": 0,
                                                "cancelled": 0,
                                                "cell_id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                                                "creation_time": 1516314356957,
                                                "exec_start_time": 1516314361475,
                                                "finish_time": 1516314398028,
                                                "finished": 1,
                                                "job_id": "5a611ef4e4b0948e9dd05f58",
                                                "job_state": "completed",
                                                "result": [
                                                    {
                                                        "obj_ref": "25022/3/1",
                                                        "report_name": "kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf",
                                                        "report_ref": "25022/4/1"
                                                    }
                                                ],
                                                "run_id": "ac08bb6f-c052-45e0-a780-ae548341a6fb",
                                                "status": [
                                                    "2018-01-18T22:26:38+0000",
                                                    "complete",
                                                    "done",
                                                    null,
                                                    null,
                                                    1,
                                                    0
                                                ],
                                                "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                            }
                                        },
                                        "event": "job-status",
                                        "timestamp": "2018-01-18T22:26:38.619Z"
                                    }
                                ],
                                "outputWidgetInfo": {
                                    "name": "kbaseReadsViewer",
                                    "params": {
                                        "obj_ref": "25022/3/1",
                                        "report_name": "kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf",
                                        "report_ref": "25022/4/1",
                                        "report_window_line_height": "16",
                                        "wsName": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import FASTQ/SRA File as Reads from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5a611ef4e4b0948e9dd05f58": {
                                        "cell": {
                                            "created": true,
                                            "id": "781df0a8-e513-445d-abb8-7994bea9b49d"
                                        },
                                        "createdAt": "Thu, 18 Jan 2018 22:26:38 GMT",
                                        "params": {
                                            "fastq_fwd_staging_file_name": "small.forward.fq",
                                            "fastq_rev_staging_file_name": "",
                                            "import_type": "FASTQ/FASTA",
                                            "insert_size_mean": null,
                                            "insert_size_std_dev": null,
                                            "interleaved": 0,
                                            "name": "small.forward.fq_reads",
                                            "read_orientation_outward": 0,
                                            "sequencing_tech": "Illumina",
                                            "single_genome": 1,
                                            "sra_staging_file_name": ""
                                        }
                                    }
                                }
                            },
                            "params": {
                                "fastq_fwd_staging_file_name": "small.forward.fq",
                                "fastq_rev_staging_file_name": "",
                                "import_type": "FASTQ/FASTA",
                                "insert_size_mean": null,
                                "insert_size_std_dev": null,
                                "interleaved": 0,
                                "name": "small.forward.fq_reads",
                                "read_orientation_outward": 0,
                                "sequencing_tech": "Illumina",
                                "single_genome": 1,
                                "sra_staging_file_name": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 22:25:41 GMT",
                            "id": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fastq_sra_as_reads_from_staging/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import A FASTQ/SRA File As Reads Into Your Narrative",
                            "title": "Import FASTQ/SRA File As Reads From Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fastq_sra_as_reads_from_staging\",\n    {\n        \"import_type\": \"FASTQ/FASTA\",\n        \"fastq_fwd_staging_file_name\": \"small.forward.fq\",\n        \"fastq_rev_staging_file_name\": \"\",\n        \"sra_staging_file_name\": \"\",\n        \"sequencing_tech\": \"Illumina\",\n        \"name\": \"small.forward.fq_reads\",\n        \"insert_size_mean\": None,\n        \"insert_size_std_dev\": None,\n        \"read_orientation_outward\": 0,\n        \"single_genome\": 1,\n        \"interleaved\": 0\n    },\n    tag=\"release\",\n    version=\"0.1.18\",\n    cell_id=\"add988fa-6457-45d1-95b2-42e4dd6d0a4e\",\n    run_id=\"ac08bb6f-c052-45e0-a780-ae548341a6fb\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 22:26:38 GMT",
                            "icon": "arrow-right",
                            "id": "781df0a8-e513-445d-abb8-7994bea9b49d",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "title": "Output from Import FASTQ/SRA File As Reads From Staging Area"
                        },
                        "dataCell": {},
                        "outputCell": {
                            "jobId": "5a611ef4e4b0948e9dd05f58",
                            "parentCellId": "add988fa-6457-45d1-95b2-42e4dd6d0a4e",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseReadsViewer",
                                "params": {
                                    "obj_ref": "25022/3/1",
                                    "report_name": "kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf",
                                    "report_ref": "25022/4/1",
                                    "report_window_line_height": "16",
                                    "wsName": "wjriehl:narrative_1502225097649"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-d0f9fe25-9700-4828-99a1-89e60af3eb3c' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-d0f9fe25-9700-4828-99a1-89e60af3eb3c'), {\n                \"data\": {\"report_window_line_height\": \"16\", \"obj_ref\": \"25022/3/1\", \"report_ref\": \"25022/4/1\", \"wsName\": \"wjriehl:narrative_1502225097649\", \"report_name\": \"kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf\"},\n                \"type\":\"method\",\n                \"widget\":\"kbaseReadsViewer\",\n                \"cellId\":\"781df0a8-e513-445d-abb8-7994bea9b49d\",\n                \"title\":\"\",\n                \"time\":1516314398680\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 8,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseReadsViewer\",\n    {\n        \"report_window_line_height\": \"16\",\n        \"obj_ref\": \"25022/3/1\",\n        \"wsName\": \"wjriehl:narrative_1502225097649\",\n        \"report_ref\": \"25022/4/1\",\n        \"report_name\": \"kb_upload_mothods_report_c8760098-272d-4de0-a777-0c4cee6a0ebf\"\n    },\n    tag=\"release\",\n    cell_id=\"781df0a8-e513-445d-abb8-7994bea9b49d\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Mon, 08 Jan 2018 23:57:56 GMT",
                            "icon": "code",
                            "id": "ac574e9d-64ee-446d-a7d9-ddda9c43393d",
                            "lastLoaded": "Mon, 08 Jan 2018 23:57:56 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "console.log(/^\\d+$/.test('123s'));",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "metadata": {},
                        "output_type": "display_data"
                    }
                ],
                "source": "%%javascript\nconsole.log(/^\\d+$/.test('123s'));"
            },
            {
                "cell_type": "code",
                "execution_count": 12,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 09 Jan 2018 00:18:35 GMT",
                            "icon": "code",
                            "id": "c11b8527-ec86-40b7-9ced-8e82024e9abc",
                            "lastLoaded": "Tue, 09 Jan 2018 00:18:35 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "var badVersionValues = [0, -1, '-1', '0', 'abc', '12V', 'V12', '1v3', 5, 3, 77];\nvar pairs = badVersionValues.map(function(val) {\n    var passTest = (!(/^\\d+$/.test(val)) || val <= 0);\n    return [val, passTest];\n});\nconsole.log(pairs);",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "metadata": {},
                        "output_type": "display_data"
                    }
                ],
                "source": "%%javascript\nvar badVersionValues = [0, -1, '-1', '0', 'abc', '12V', 'V12', '1v3', 5, 3, 77];\nvar pairs = badVersionValues.map(function(val) {\n    var passTest = (!(/^\\d+$/.test(val)) || val <= 0);\n    return [val, passTest];\n});\nconsole.log(pairs);\n"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 09 Jan 2018 01:05:09 GMT",
                            "icon": "code",
                            "id": "47c2ec6b-2144-4b38-ba8f-8081eaea1e52",
                            "lastLoaded": "Tue, 09 Jan 2018 01:05:09 GMT",
                            "status": "new",
                            "title": "print('{}\\t{}'.format(app, out_widget))"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "for w in sorted(wm.widget_info['dev'].keys()):\n    print(w)\n    info = wm.widget_info['dev'][w]\n    params = info.get('params', {})\n    for p in params:\n        if 'allowed_types' in params[p]:\n            print('\\t{}'.format(params[p]['allowed_types']))\n\n\nwidgets_to_apps = dict()\nfor app in sm.app_specs['dev']:\n    spec = sm.app_specs['dev'][app]\n    out_widget = spec.get('widgets', {}).get('output', 'none')\n#     print('{}\\t{}'.format(app, out_widget))\n    if out_widget in widgets_to_apps:\n        widgets_to_apps[out_widget].append(app)\n    else:\n        widgets_to_apps[out_widget] = [app]"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 12 Jan 2018 20:33:13 GMT",
                            "icon": "code",
                            "id": "05d58d7c-c3c8-402e-ac39-26475464a37c",
                            "lastLoaded": "Fri, 12 Jan 2018 20:33:13 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "import socket\nimport json"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 12 Jan 2018 20:33:18 GMT",
                            "icon": "code",
                            "id": "a99d404d-5342-4446-b616-035ebe3f2b48",
                            "lastLoaded": "Fri, 12 Jan 2018 20:33:18 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "TCP_IP = 'localhost'\nTCP_PORT = 9000\nBUFFER_SIZE = 1024\nlog_msg = {\n    'type': 'narrative',\n    'operation': 'open',\n    'narrative': '25022/1',\n    'narr_version': '6',\n    'user': 'wjriehl'\n}"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:12:43 GMT",
                            "icon": "code",
                            "id": "d456933c-baf6-4121-a440-b7fcc8aa70ad",
                            "lastLoaded": "Wed, 17 Jan 2018 22:12:43 GMT",
                            "status": "new",
                            "title": "s = socket.socket() #socket.AF_INET, socket.SOCK_STREAM)"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "s = socket.socket() #socket.AF_INET, socket.SOCK_STREAM)\ns.connect((TCP_IP, TCP_PORT))\ns.sendall(json.dumps(log_msg) + '\\n')\ns.close()"
            },
            {
                "cell_type": "code",
                "execution_count": 14,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:12:43 GMT",
                            "icon": "code",
                            "id": "cd46f9df-5af7-4ecc-9278-a8c5b9522ac6",
                            "lastLoaded": "Wed, 17 Jan 2018 22:12:43 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "s.connect?"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:14:52 GMT",
                            "icon": "code",
                            "id": "894b670e-c9b3-4d5a-adfb-fb898447b3e8",
                            "lastLoaded": "Wed, 17 Jan 2018 22:14:52 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "health status index                         uuid                   pri rep docs.count docs.deleted store.size pri.store.size\nyellow open   logstash-bogolog-2018.01.17   3v1dos_bREGtQ6wGU1W0sg   5   1          1            0      6.7kb          6.7kb\nyellow open   logstash-narrative-2018.01.18 F_AOIMRiSSyu79wGNXef4A   5   1          2            0     15.3kb         15.3kb\nyellow open   logstash-narrative-2018.01.17 L8YZ7qVIRz2XewtOFDfcLg   5   1          2            0     15.3kb         15.3kb\n\n"
                    }
                ],
                "source": "import requests\nr = requests.get('http://localhost:9200/_cat/indices?v')\nprint(r.content)"
            },
            {
                "cell_type": "code",
                "execution_count": 44,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:22:09 GMT",
                            "icon": "code",
                            "id": "265dfb26-7e7e-4760-9f36-42983196a98a",
                            "lastLoaded": "Wed, 17 Jan 2018 22:22:09 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "'health status index                         uuid                   pri rep docs.count docs.deleted store.size pri.store.size\\nyellow open   logstash-bogolog-2018.01.17   3v1dos_bREGtQ6wGU1W0sg   5   1          1            0      6.7kb          6.7kb\\nyellow open   logstash-narrative-2018.01.17 L8YZ7qVIRz2XewtOFDfcLg   5   1          1            0        8kb            8kb\\n'"
                        },
                        "execution_count": 44,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "r.content"
            },
            {
                "cell_type": "code",
                "execution_count": 6,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:22:19 GMT",
                            "icon": "code",
                            "id": "f54e8b0e-8b9a-4948-9872-6d8a23ae7acc",
                            "lastLoaded": "Wed, 17 Jan 2018 22:22:19 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "{\n  \"took\" : 21,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 5,\n    \"successful\" : 5,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : 4,\n    \"max_score\" : 1.0,\n    \"hits\" : [\n      {\n        \"_index\" : \"logstash-narrative-2018.01.18\",\n        \"_type\" : \"narrative\",\n        \"_id\" : \"AWEGpeynNdNPtf5Aovh_\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"wjriehl\",\n          \"operation\" : \"open\",\n          \"@version\" : \"1\",\n          \"narrative\" : \"25022/1\",\n          \"host\" : \"gateway\",\n          \"type\" : \"narrative\",\n          \"@timestamp\" : \"2018-01-18T00:23:12.788Z\",\n          \"port\" : 46034,\n          \"narr_version\" : \"6\",\n          \"index\" : \"logstash-narrative-2018.01.18\"\n        }\n      },\n      {\n        \"_index\" : \"logstash-narrative-2018.01.18\",\n        \"_type\" : \"narrative\",\n        \"_id\" : \"AWEGt_RUNdNPtf5AoviC\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"wjriehl\",\n          \"narr_ver\" : 2,\n          \"operation\" : \"open\",\n          \"narrative\" : \"1234/1\",\n          \"@version\" : \"1\",\n          \"type\" : \"narrative\",\n          \"host\" : \"gateway\",\n          \"@timestamp\" : \"2018-01-18T00:42:54.395Z\",\n          \"port\" : 46042,\n          \"index\" : \"logstash-narrative-2018.01.18\"\n        }\n      },\n      {\n        \"_index\" : \"logstash-narrative-2018.01.18\",\n        \"_type\" : \"narrative\",\n        \"_id\" : \"AWEK6mLcNdNPtf5AoviE\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"narr_ver\" : 2,\n          \"host\" : \"gateway\",\n          \"type\" : \"narrative\",\n          \"@timestamp\" : \"2018-01-18T20:16:27.888Z\",\n          \"env\" : \"ci\",\n          \"user\" : \"wjriehl\",\n          \"operation\" : \"open\",\n          \"@version\" : \"1\",\n          \"narrative\" : \"5678/1\",\n          \"port\" : 46050,\n          \"index\" : \"logstash-narrative-2018.01.18\"\n        }\n      },\n      {\n        \"_index\" : \"logstash-narrative-2018.01.18\",\n        \"_type\" : \"narrative\",\n        \"_id\" : \"AWEGpUMbNdNPtf5Aovh-\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"user\" : \"wjriehl\",\n          \"operation\" : \"open\",\n          \"@version\" : \"1\",\n          \"narrative\" : \"25022/1\",\n          \"host\" : \"gateway\",\n          \"type\" : \"narrative\",\n          \"@timestamp\" : \"2018-01-18T00:22:29.243Z\",\n          \"port\" : 46026,\n          \"narr_version\" : \"6\",\n          \"index\" : \"logstash-narrative-2018.01.18\"\n        }\n      }\n    ]\n  }\n}\n\n"
                    }
                ],
                "source": "import requests\nr2 = requests.get('http://localhost:9200/logstash-narrative-2018.01.18/_search?q=*:*&pretty=1')\nprint(r2.content)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 17 Jan 2018 22:25:26 GMT",
                            "icon": "code",
                            "id": "b6ad93a2-eecd-4d4b-8761-c27836083c0f",
                            "lastLoaded": "Wed, 17 Jan 2018 22:25:26 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "u'localhost'"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.common.url_config import URLS\nURLS.log_host"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 00:35:39 GMT",
                            "icon": "code",
                            "id": "a4895e04-827b-4d79-bc72-cfd41ff5cdcc",
                            "lastLoaded": "Thu, 18 Jan 2018 00:35:39 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.common.kblogging import get_narrative_logger\nlogger = get_narrative_logger()"
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 00:41:03 GMT",
                            "icon": "code",
                            "id": "ac356ed7-5e3b-4c3b-89cf-700114a44932",
                            "lastLoaded": "Thu, 18 Jan 2018 00:41:03 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "logger.narrative_open(\"5678/1\", 2)"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 00:42:43 GMT",
                            "icon": "code",
                            "id": "e50e5e2a-5687-4b7d-b35a-b5680cdb9841",
                            "lastLoaded": "Thu, 18 Jan 2018 00:42:43 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "u'ci'"
                        },
                        "execution_count": 2,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.common.util import kbase_env\nkbase_env.env"
            },
            {
                "cell_type": "code",
                "execution_count": 41,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 18 Jan 2018 20:04:30 GMT",
                            "icon": "code",
                            "id": "22da0163-b7f8-436b-834c-7de38119c42b",
                            "lastLoaded": "Thu, 18 Jan 2018 20:04:30 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "import json\ncompounds_file = os.path.join(os.sep, \"Users\", \"wjriehl\", \"Projects\", \"kbase\", \"MaranasTools\", \"data\", \"modelseed_compounds.json\")\nwith open(compounds_file, \"r\") as infile:\n    compounds = json.loads(infile.read())\nkegg2MS = dict()\nms_cpds = dict()\nms_names2id = dict()\nfor cpd in compounds:\n    ms_cpds[cpd['id']] = cpd\n    for name in cpd.get('names', []):\n        ms_names2id[name.lower()] = cpd['id']\n    for sn in cpd.get('searchnames', []):\n        ms_names2id[sn.lower()] = cpd['id']\n    if \"kegg_aliases\" in cpd:\n        for ka in cpd[\"kegg_aliases\"]:\n            kegg2MS[ka] = cpd['id']"
            },
            {
                "cell_type": "code",
                "execution_count": 15,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 25 Jan 2018 21:21:19 GMT",
                            "icon": "code",
                            "id": "22892fc9-af01-4dc7-8b8e-3baba3b8783a",
                            "lastLoaded": "Thu, 25 Jan 2018 21:21:19 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "17600"
                        },
                        "execution_count": 15,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "with open(\"/Users/wjriehl/Projects/kbase/MaranasTools/data/kegg_compound.json\", \"r\") as infile:\n    kegg_cpds = json.loads(infile.read())\nlen(kegg_cpds.keys())"
            },
            {
                "cell_type": "code",
                "execution_count": 34,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 25 Jan 2018 21:33:38 GMT",
                            "icon": "code",
                            "id": "981a1bf1-d594-4279-936a-dd4d51ecc7d7",
                            "lastLoaded": "Thu, 25 Jan 2018 21:33:38 GMT",
                            "status": "new",
                            "title": "print(\"{}: {}\".format(key, kegg_cpds[key]))"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "835\n"
                    }
                ],
                "source": "num_notfound = 0\nfor key, val in kegg_cpds.iteritems():\n    if key not in kegg2MS:\n        num_notfound += 1\n#         print(\"{}: {}\".format(key, kegg_cpds[key]))\nprint(num_notfound)"
            },
            {
                "cell_type": "code",
                "execution_count": 35,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 25 Jan 2018 21:35:13 GMT",
                            "icon": "code",
                            "id": "f242dda2-9577-40c6-89b6-03036e2128b0",
                            "lastLoaded": "Thu, 25 Jan 2018 21:35:13 GMT",
                            "status": "new",
                            "title": "print(\"{}: {}\".format(key, kegg_cpds[key]))"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "C20748: (E)-4-(Trimethylammonio)but-2-enoyl-CoA\nC20356: Isooctadecanoic acid\nC20364: Erythorbic acid\nC20365: Decyl oleate\nC20367: 4-Nitro-6-oxohepta-2,4-dienedioate\nC20360: Sodium methallylsulfonate\nC20362: Ethyl maltol\nC20363: Ethylene carbonate\nC20368: trans,octacis-Decaprenylphospho-beta-D-ribofuranose\nC20369: trans,octacis-Decaprenylphospho-beta-D-erythro-pentofuranosid-2-ulose\nC21054: Olivose\nC20702: (8E,10S)-10-Hydroperoxyoctadeca-8-enoate\nC21061: N-Acetyl-D-talosamine\nC20703: (8E,10S,12Z)-10-Hydroperoxyoctadeca-8,12-dienoate\nC20700: (E,E)-4,8,12-Trimethyltrideca-1,3,7,11-tetraene\nC20705: 4-O-(beta-L-Arabinofuranosyl-(1->2)-beta-L-arabinofuranosyl-(1->2)-beta-L-arabinofuranosyl)-(2S,4S)-4-hydroxyproline\nC20704: (8E,10S,12Z,15Z)-10-Hydroperoxyoctadeca-8,12,15-trienoate\nC21009: N4-Aminopropylspermidine\nC20688: N1-Methylguanine in tRNA(Phe)\nC20863: 5'-Phospho-[mRNA]\nC20734: 3-O-[N-Acetyl-beta-D-galactosaminyl-(1->3)-N-acetyl-beta-D-glucosaminyl-(1->4)-alpha-D-mannosyl]-L-threonyl-[protein]\nC20914: C20914\nC21001: 2-O,3-Dimethylflaviolin\nC20388: 12(S)-HHT\nC20384: Bisnorbiotin\nC20382: Imidazol-2-one\nC20383: Mycophenolic acid O-acyl-glucuronide\nC20380: Mycophenolate\nC20591: Fusaproliferin\nC21039: N-Acetyl-D-allosamine\nC21037: D-Alluronic acid\nC21031: DNA 5-hydroxymethylcytosine\nC20968: 3-Hydroxy-3-(methylthio)propanoyl-CoA\nC20347: Rose bengal\nC20745: alpha-NADPH\nC20978: Glucoselysine\nC20479: (+)-epi-alpha-Bisabolol\nC20969: Carboxyphosphate\nC20964: Dapdiamide C\nC21041: Bacillosamine\nC20872: 3'-Methoxyflavone\nC20962: Dapdiamide A\nC20630: Fumitremorgin B\nC20631: (2S,3S)-3-Hydroxyasparagine\nC20982: 9-(Dimethylallyl)-5,10-dihydrophenazine-1-carboxylate\nC20635: Methyl (indol-3-yl)acetate\nC21059: D-Taluronic acid\nC21051: L-Idosamine\nC21050: L-Idose\nC21053: N-Glycolylmuramic acid\nC21056: N-Acetyl-L-rhamnosamine\nC20963: Dapdiamide B\nC20327: 2-Oxo-4-phenylbutyric acid\nC20826: Isovalerylcarnitine\nC20960: 3-Hydroxy-5-phosphonooxypentane-2,4-dione\nC20966: 3-{[(2E)-4-Amino-4-oxobut-2-enoyl]amino}-L-alanine\nC20961: N3-Fumaroyl-(S)-2,3-diaminopropanoate\nC20959: (4S)-4-Hydroxy-5-phosphonooxypentane-2,3-dione\nC20958: L-Alanyl-L-glutamate\nC20333: N2-Citryl-N6-acetyl-N6-hydroxy-L-lysine\nC21104: 2,5-Dichloro-p-benzoquinone\nC21103: 2,6-Dichloro-p-benzoquinone\nC07058: 13-cis-Retinoic acid\nC21072: Palmitoleoyl-CoA\nC21071: dTDP-3-O-methyl-4-oxo-2,6-dideoxy-L-mannose\nC21077: Delta7-Dafachronic acid\nC21076: Delta4-Dafachronic acid\nC21075: 5-(N-Methyl-4,5-dihydro-1H-pyrrol-2-yl)pyridin-2-ol\nC21074: dTDP-3-N,N-dimethylamino-4-oxo-2,3,6-trideoxy-L-allose\nC20304: S-(2-Chloroethyl)glutathione\nC21079: 5'-Dehydrouridine\nC21078: 2,6-Dimethyldeca-2,4,6,8-tetraenedial\nC20715: Protopanaxadiol\nC20714: 3-Oxodecanoate\nC20717: 4-Hydroxy-2,5-dimethylfuran-3(2H)-one\nC21014: [Protein]-pentosidine\nC21017: 2-(alpha-Hydroxypropyl)thiamine diphosphate\nC21016: Ophthalmate\nC21011: [Protein]-N(epsilon)-(carboxymethyl)lysine\nC21013: [Protein]-pyrraline\nC21012: [Protein]-N(epsilon)-(carboxyethyl)lysine\nC21019: 1-Acyl-2-[(12R)-12-hydroxyoleoyl]-sn-glycero-3-phosphocholine\nC21018: Enzyme N6-(S-propyldihydrolipoyl)lysine\nC20930: C18G peptide\nC20933: (9Z)-Hexadec-9-enoyl-KDO2-lipid IV(A)\nC20935: 2-5A\nC20937: Nitroxyl\nC20827: 3-Hydroxyisovalerate\nC21123: Aminobacteriohopanetriol\nC20823: C20823\nC20820: 2,3-Dihydrothienamycin\nC21122: Bacteriohopanetetrol cyclitol ether\nC20616: Aldono-1,5-lactone\nC20899: Furan-2,5-dicarbaldehyde\nC21129: (S)-2-Methylbutanoyl-[acp]\nC21005: 18-Hydroxyoleoyl-CoA\nC21000: (9Z,12Z)-Hexadeca-9,12-dienoyl-CoA\nC20698: 2-Aminoethyl diphenylborinate\nC21099: L-Arginyl-L-amino acid\nC21098: L-allo-Isoleucyl-[peptidyl-carrier protein]\nC21095: D-Glucaro-1,4-lactone\nC21094: 7,8-Dihydromonapterin 3'-triphosphate\nC21097: Peptidyl-carrier protein\nC21091: (2S,3R)-2,3-Dihydroxy-5-oxohexanedioate\nC21092: D-allo-Isoleucine\nC20984: 3-Linalylflaviolin\nC20699: 6''-O-Carbamoylkanamycin A\nC20613: GDP-beta-L-colitose\nC20526: 10,11-Epoxy-3-geranylgeranylindole\nC20919: Isotabtoxin\nC20918: Tabtoxinine-beta-lactam\nC20986: D-Ribose 2,5-bisphosphate\nC20913: C20913\nC20912: C20912\nC20911: C20911\nC20916: C20916\nC20915: C20915\nC21003: 7-O-Geranyl-2-O,3-dimethylflaviolin\nC20874: Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-gamma-D-glutamyl-L-lysyl-D-alanyl-D-serine\nC20877: Very-long-chain 3-oxoacyl-CoA\nC21130: Lovastatin acid\nC20873: UDPMurNAc(oyl-L-Ala-gamma-D-Glu-L-Lys-D-Ala-D-Ser)\nC20981: 5,10-Dihydrophenazine-1-carboxylate\nC20070: Penitrem A\nC20621: alpha-D-GalNAc-(1->3)-alpha-D-GalNAc-diphospho-ditrans,octacis-undecaprenol\nC20622: beta-D-Gal-(1->3)-alpha-D-GalNAc-(1->3)-alpha-D-GalNAc-diphospho-ditrans,octacis-undecaprenol\nC20627: CDP-2,3-bis-(O-phytanyl)-sn-glycerol\nC20999: (10E,12Z)-Hexadeca-10,12-dienoyl-CoA\nC20799: Grixazone B\nC20790: 7-Deoxyloganetin\nC20793: 3-Hydroxyoctanoate\nC20792: Oleoylethanolamide\nC20795: Penitrem C\nC20797: 2,3-Dihydroxypropane-1-sulfonate\nC20389: Lauryltrimethylaminium bromide\nC21116: Hydroxysqualene\nC21117: Adenosylhopane\nC20988: [N-(6-Aminohexanoyl)]n\nC20851: Dihydromonacolin L acid\nC20728: [CysO sulfur-carrier protein]-Gly-NH-CH2-C(O)SH\nC20726: Phenyl 5-phospho-alpha-D-ribofuranoside\nC20720: Desvancosaminyl-vancomycin\nC20722: 3-O-(alpha-D-Mannosyl)-L-threonyl-[protein]\nC21024: (4R,8E)-4-Hydroxysphing-8-enine ceramide\nC21025: (4R,8Z)-4-Hydroxysphing-8-enine ceramide\nC21029: (R)-3-Ureidoisobutyrate\nC20857: 2,7-Dihydroxy-5-methyl-1-naphthoate\nC20636: Deoxybrevianamide E\nC20519: Cyclo(L-leucyl-L-phenylalanyl)\nC20518: 2,3-Bis-(O-phytanyl)-sn-glycerol 1-phosphate\nC20517: Mycocyclosin\nC20516: Cyclo(L-tyrosyl-L-tyrosyl)\nC20515: Pulcherriminic acid\nC20514: Cyclo(L-leucyl-L-leucyl)\nC20513: 6-Hydroxytryprostatin B\nC20512: Tryprostatin B\nC20511: Glycyrrhetaldehyde\nC20581: cis-(Homo)2-aconitate\nC20852: 3alpha-Hydroxy-3,5-dihydromonacolin L acid\nC20856: 2-Hydroxy-5-methyl-1-naphthoate\nC20854: Monacolin J acid\nC20721: Chloroorienticin B\nC20853: Monacolin L acid\nC20483: (6R)-6beta-Hydroxy-1,4,5,6-tetrahydronicotinamide-adenine dinucleotide phosphate\nC20318: S-(1,2-Dichlorovinyl)thiol\nC20486: 7-Epizingiberene\nC20489: Pelargonidin 3-O-beta-D-sambubioside\nC20794: n-7 Unsaturated acyl-[acyl-carrier protein]\nC20796: N6-Dimethyladenine in rRNA\nC20488: D-beta-Phenylalanine\nC20955: 3-(Methylthio)acryloyl-CoA\nC20875: Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-gamma-D-glutamyl-L-lysyl-D-alanyl-D-lactate\nC20638: GDP-4-amino-4,6-dideoxy-alpha-D-mannose\nC20815: MM 4550\nC20837: Hydroxyepoxyicosatrienoate\nC20535: beta-PC-M6\nC20534: 12-Demethyl-11,12-dehydropaspaline\nC20536: Terpendole E\nC20531: 13-Desoxypaxilline\nC20530: Paspaline\nC20532: 20,21-Diprenylterpendole I\nC20759: Desulfo-A47934\nC20758: [Ribosomal protein S12]-3-methylthioaspartate\nC20755: 2-Thio-N6-dimethylallyladenine in tRNA\nC20754: 2-Thio-N6-L-threonylcarbamoyladenine in tRNA\nC20757: [Ribosomal protein S12]-3-thioaspartate\nC20756: [Ribosomal protein S12]-L-aspartate\nC20751: N6-L-Threonylcarbamoyladenine in tRNA\nC20753: 2-Methylthio-N6-dimethylallyladenine in tRNA\nC20752: 2-Methylthio-N6-L-threonylcarbamoyladenine in tRNA\nC20579: Cyclopeptine\nC20578: Tulipalin A\nC20571: alpha-1,5-L-Arabinotriose\nC20570: alpha-1,5-L-Arabinobiose\nC20573: Aldotetraouronic acid\nC20572: alpha-1,5-L-Arabinotetraose\nC20577: 6-Tuliposide A\nC20576: Kunzeaol\nC20287: 2-Acetoxyamino-1-methyl-6-phenylimidazo[4,5-b]pyridine\nC20286: 2-Hydroxyamino-1-methyl-6-phenylimidazo[4,5-b]pyridine\nC20285: 4-Acetylaminobiphenyl\nC20284: Benzenediazonium\nC20283: 1-(3,4-Dihydroxyphenylazo)-2-naphthol\nC20282: 1-(4-Hydroxyphenylazo)-naphthalene-2,6-diol\nC20280: 1-Phenylazo-2,6-dihydroxynaphthalene\nC20892: 3-(5-Oxoisoxazolin-2-yl)-L-alanine\nC20706: 4-O-(beta-L-Arabinofuranosyl)-(2S,4S)-4-hydroxyproline\nC20949: LysW-L-glutamyl 5-phosphate\nC20707: 26-Desgluco-avenacoside B\nC21114: (4Z)-Hexadec-4-enoyl-[acyl-carrier protein]\nC21115: (6Z)-Hexadec-6-enoyl-[acyl-carrier protein]\nC21118: Ribosylhopane\nC21119: Bacteriohopanetetrol\nC20922: Cembrene C\nC20923: (R)-Nephthenol\nC20924: (1S,4E,8E,12E)-2,2,5,9,13-Pentamethylcyclopentadeca-4,8,12-trien-1-ol\nC20385: Tetranorbiotin\nC20553: Paspalicine\nC20552: Terpendole K\nC20551: Lolitrem B\nC20550: Lolitrem E\nC20801: 3-Hydroxy-5-methyl-L-tyrosine\nC20800: 3-Methyl-L-tyrosine\nC20555: Aflatrem\nC20554: Paspalinine\nC20558: alpha-PC-M6\nC20809: (R)-2-Methylpyrrolidine\nC20808: 2-Methyl-1-pyrroline\nC20920: Tabtoxinine-delta-lactam\nC20739: Neopikromycin\nC20738: 6-Geranylgeranyl-2,3-dimethylbenzene-1,4-diol\nC20731: Penitrem B\nC20730: [Protein]-FMN-L-Threonine\nC20735: N-Acyl-aromatic-L-amino acid\nC20562: N-[(7,8-Dihydropterin-6-yl)methyl]-4-(beta-D-ribofuranosyl)aniline 5'-phosphate\nC21035: L-Altrosamine\nC20440: alpha-D-Ribose 1,2-cyclic phosphate 5-phosphate\nC21034: L-Altruronic acid\nC20563: Brevianamide F\nC21032: L-Altrose\nC21030: (R)-Methylmalonate semialdehyde\nC20560: N1-(3-Aminopropyl)agmatine\nC20926: gamma-Glutamyltyramine\nC20448: 5-Hydroxymethyl-2-furoate\nC21033: 6-Deoxy-L-altrose\nC20596: Penitrem D\nC20845: (4S,5R)-4,5,6-Trihydroxy-2-iminohexanoate\nC20828: 3-Methylcrotonylglycine\nC20825: Seminolipid\nC20824: 3-Nitrobenzanthrone\nC20822: C20822\nC20821: C20821\nC20948: LysW-L-glutamate\nC20942: Bacilysin\nC20944: Ipsdienone\nC20501: (1'S,5'R)-5'-Hydroxyaverantin\nC20798: 2-Hydroxy-3-oxopropane-1-sulfonate\nC20849: UDP-2-acetamido-3-dehydro-2-deoxy-alpha-D-glucopyranose\nC20848: (R)-Mevalonate 3,5-bisphosphate\nC20841: 2-Hydroxy-7-methoxy-5-methyl-1-naphthoate\nC20840: (25S)-3-Oxocholest-4-en-26-oyl-CoA\nC20843: N5-Phenyl-L-glutamine\nC20842: 2-Hydroxy-7-methoxy-5-methyl-1-naphthoyl-CoA\nC20844: (2Z,4S,5R)-2-Amino-4,5,6-trihydroxyhex-2-enoate\nC20847: (R)-Mevalonate 3-phosphate\nC20846: 3-Oxo-3-ureidoisobutyrate\nC20422: alpha-D-Ribose 1-methylphosphonate 5-triphosphate\nC21090: Isocaprenoyl-CoA\nC20637: 5-[[(4,7-Dihydroxy-2-oxo-2H-1-benzopyran-3-yl)amino]carbonyl]-4-methyl-1H-pyrrole-3-carboxylate\nC20608: (S)-2-Chloropropanoate\nC20979: Glucoselysine-6-phosphate\nC20471: Anthocyanidin 3-O-sophoroside\nC20472: Anthocyanidin 3-O-[2-O-(4-coumaroyl)-alpha-L-rhamnosyl-(1->6)-beta-D-glucoside]\nC20474: Anthocyanidin 5-O-beta-D-glucoside 3-O-beta-D-sambubioside\nC20476: Delta6-Protoilludene\nC20477: (-)-alpha-Isocomene\nC20478: (E)-2-epi-beta-Caryophyllene\nC20603: (3S)-3-Hydroxy-L-enduracididine\nC20602: L-Enduracididine\nC20601: Janthitrem C\nC20600: Janthitrem B\nC20442: Dermatan 2,4-sulfate\nC20607: Tryprostatin A\nC20970: Angiotensin A\nC21107: 4-(beta-D-Ribofuranosyl)phenol 5'-phosphate\nC21105: 5-Chloro-2-hydroxy-p-benzoquinone\nC21102: 5'-Deoxyinosine\nC21101: Protein N(omega)-phospho-L-arginine\nC20878: Very-long-chain (3R)-3-hydroxyacyl-CoA\nC20973: Angiotensin (5-7)\nC20522: Dihydrourocanate\nC20520: Albonoursin\nC20521: Cyclo[(Z)-alpha,beta-didehydrophenylalanyl-L-leucyl]\nC20561: 21,22-Diprenylpaxilline\nC20390: N-Acetyl-alpha-D-glucosaminyl-diphospho-trans,octacis-decaprenol\nC20642: 1-Archaetidyl-1D-myo-inositol 3-phosphate\nC20862: 5'-(N7-Methyl 5'-triphosphoguanosine)-(2'-O-methyl-purine-ribonucleotide)-(2'-O-methyl-ribonucleotide)-[mRNA]\nC20867: Avideoxycholate\nC20865: 3beta,12alpha-Dihydroxy-5beta-cholanoate\nC20864: 5'-Triphospho-[mRNA]\nC20868: Cygnocholate\nC20319: Hydronitroxide radical\nC20649: 7-[(3S)-(3-Amino-3-carboxypropyl)]wyosine in tRNA(Phe)\nC20695: all-trans-10'-Apo-beta-carotenal\nC20595: 20,21-Diprenylterpendole C\nC20458: tRNA(Ala) hypoxanthine\nC20678: 26-Deglucoprotodioscin\nC20676: Short-chain trans-2,3-dehydroacyl-CoA\nC20674: N7-Methylguanosine\nC20675: Short-chain acyl-CoA\nC20672: GDP-4-acetamido-4,6-dideoxy-alpha-D-mannose\nC20673: N-Isovaleryl-L-homoserine lactone\nC20670: 2-Amino-5-chloromuconate 6-semialdehyde\nC20987: 3-Sulfinopropanoyl-CoA\nC20980: 3-Methoxy-5-methyl-1-naphthoate\nC20418: N,N'-Diacetyllegionaminate\nC20419: CMP-N,N'-diacetyllegionaminate\nC20412: 3,22-Dimethyl-1,2,23,24-tetradehydro-2,3,22,23-tetrahydrosqualene\nC20410: 4-Dimethylallyl-L-abrine\nC20411: 3-Methyl-1,2-didehydro-2,3-dihydrosqualene\nC20416: alpha-L-Rhamnopyranosyl-(1->3)-N-acetyl-alpha-D-glucosaminyl-diphospho-trans,octacis-decaprenol\nC20417: 2,4-Dihydroxy-6-pentylbenzoate\nC20415: dTDP-4-acetamido-4,6-dideoxy-alpha-D-galactose\nC20983: 4-O-Dimethylallyl-L-tyrosine\nC21049: N-Acetyl-D-gulosamine\nC20470: 1-O-Vanilloyl-beta-D-glucose\nC20473: Anthocyanidin 3-O-[2-O-(4-coumaroyl)-alpha-L-rhamnosyl-(1->6)-beta-D-glucoside] 5-O-beta-D-glucoside\nC20420: tritrans,heptacis-Undecaprenyl phosphate\nC20876: Very-long-chain acyl-CoA\nC20870: 3-(Methylthio)propanoyl-CoA\nC20871: 3'-Hydroxyflavone\nC20993: S-(L-Histidin-5-yl)-L-cysteine S-oxide\nC20590: beta-Ergocryptine\nC20889: D-Galactaro-1,5-lactone\nC20888: Cellobionate\nC20882: Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-D-glutamyl-LL-2,6-diaminopimeloyl-(glycyl)-D-alanyl-D-lactate\nC21096: L-allo-Isoleucine\nC20941: L-Anticapsin\nC20658: O-Acetyl-ADP-ribose\nC20659: 7-[(3S)-3-Amino-3-(methoxycarbonyl)propyl]wyosine in tRNA(Phe)\nC20652: 7-[(3S)-3-Amino-3-carboxypropyl]-4-demethylwyosine in tRNA(Phe)\nC20654: 3-Benzylmalic acid\nC20655: Aldopyranose\nC20737: 6-Geranylgeranyl-2-methylbenzene-1,4-diol\nC20653: 2-Benzylmalic acid\nC20434: 20-Methyl-21,22-didehydro-20,21-dihydrobotryococcene\nC20435: 3,20-Dimethyl-1,2,21,22-tetradehydro-2,3,20,21-tetrahydrobotryococcene\nC20430: (+)-Larreatricin\nC20431: (+)-3'-Hydroxylarreatricin\nC20433: 3-Methyl-1,2-didehydro-2,3-dihydrobotryococcene\nC20439: NBMPR\nC20376: 3-Ketopimeloyl-[acp] methyl ester\nC20374: Enoylglutaryl-[acp] methyl ester\nC20378: Enoylpimeloyl-[acp] methyl ester\nC20559: 4-(beta-D-Ribofuranosyl)aniline 5'-phosphate\nC20303: Chloroethylene oxide\nC20619: beta-D-Glc-(1->3)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC20359: UDP-2-acetamido-3-amino-2,3-dideoxy-alpha-D-glucuronate\nC20358: Caloxetate trisodium\nC20351: 2'-Deamino-2'-hydroxy-6'-dehydroparomamine\nC20352: trans,octacis-Decaprenylphospho-beta-D-ribofuranose 5-phosphate\nC20355: Glyceryl tri(2-ethylhexanoate)\nC20716: Protopanaxatriol\nC20975: 8-Demethyl-8-(2-O-methyl-alpha-L-rhamnosyl)tetracenomycin C\nC20855: 22-Hydroxydocosahexaenoate\nC20977: 8-Demethyl-8-(2,3,4-tri-O-methyl-alpha-L-rhamnosyl)tetracenomycin C\nC20945: Erythrodiol\nC20634: O-Methyl anthranilate\nC20639: O-Ureido-L-serine\nC20976: 8-Demethyl-8-(2,3-di-O-methyl-alpha-L-rhamnosyl)tetracenomycin C\nC20496: Delphinidin 3,7-di-O-beta-D-glucoside\nC20495: Pelargonidin 3,7-di-O-beta-D-glucoside\nC20498: 4-Acetamido-4,6-dideoxy-alpha-D-galactosyl-(1->4)-N-acetyl-beta-D-mannosaminuronosyl-(1->4)-N-acetyl-alpha-D-glucosaminyl-diphospho-ditrans,octacis-undecaprenol\nC20971: Alamandine\nC20373: 3-Hydroxyglutaryl-[acp] methyl ester\nC20372: 3-Ketoglutaryl-[acp] methyl ester\nC20371: Ecgonone methyl ester\nC20370: trans,octacis-Decaprenylphospho-beta-D-arabinofuranose\nC20377: 3-Hydroxypimeloyl-[acp] methyl ester\nC20375: Glutaryl-[acp] methyl ester\nC20379: Chanoclavine-I aldehyde\nC20972: Angiotensin (5-8)\nC21067: D-Arabinofuranose\nC21020: (2'R)-2'-Hydroxyphytoceramide\nC21021: (2'R)-2'-Hydroxydihydroceramide\nC21022: (4E,8E)-Sphing-4,8-dienine ceramide\nC21023: (4E,8E,10E)-Sphinga-4,8,10-trienine ceramide\nC21026: Iminoarginine\nC21027: N-Acetylmuramic acid alpha-1-phosphate\nC21028: (R)-5,6-Dihydrothymine\nC20683: Long-chain acyl-[acyl-carrier protein]\nC20680: 2-Dehydro-3-deoxy-L-galactonate\nC20689: 15-Demethylaclacinomycin T\nC20682: dTDP-alpha-D-fucofuranose\nC20772: 3-[(1-Carboxyvinyl)oxy]benzoate\nC20690: 1D-myo-Inositol 1,5-bis(diphosphate) 2,3,4,6-tetrakisphosphate\nC20771: (+/-)-Pavine\nC20718: 4-Hydroxy-5-methyl-2-methylenefuran-3(2H)-one\nC20618: beta-D-Gal-(1->4)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC21058: 6-Deoxy-D-talose\nC20464: Isochavicol\nC20860: Triglucosyldiacylglycerol\nC20866: Alloavicholate\nC20869: UDPMurNAc(oyl-L-Ala-gamma-D-Glu-L-Lys-D-Ala-D-Lac)\nC21052: N-Acetyl-L-idosamine\nC20341: Disodium malate\nC20273: gamma-Muurolene\nC20395: UDP-2-acetamido-2-deoxy-alpha-D-ribo-hex-3-uluronate\nC20648: Adenine in rRNA\nC21048: D-Gulosamine\nC21042: D-glycero-D-manno-Heptose\nC21043: L-glycero-D-manno-Heptose\nC21046: N-Acetyl-L-fucosamine\nC21047: D-Guluronic acid\nC21044: 3-Deoxy-lyxo-heptulosaric acid\nC21045: D-Digitoxose\nC20337: Alizarin cyanin green\nC20315: (Z)-2-Methylpropanal oxime\nC20331: beta-Carotene-15,15'-epoxide\nC20317: S-(1,2-Dichlorovinyl)-L-cysteine\nC17688: Aluminum acetoacetate\nC20985: 2-Sulfotrehalose\nC17815: Civetol\nC20564: Fumitremorgin A\nC21038: D-Allosamine\nC20605: 12alpha,13alpha-Dihydroxyfumitremorgin C\nC21036: N-Acetyl-L-altrosamine\nC20904: 2-Iminopropanoate\nC20316: 4-Nitrosobiphenyl\nC21064: 6-Deoxy-6-sulfo-D-glucono-1,5-lactone\nC21066: D-Galactofuranose\nC21060: D-Talosamine\nC20446: tRNA 7-aminomethyl-7-carbaguanine\nC20947: (Z)-Icos-5-enoyl-CoA\nC20957: L-Alanyl-D-glutamate\nC20956: alpha-D-Sedoheptulopyranose 7-phosphate\nC20953: 3-[(4R)-4-Hydroxycyclohexa-1,5-dien-1-yl]-2-oxopropanoate\nC20732: Mycothiol S-conjugate\nC20951: LysW-L-ornithine\nC20950: LysW-L-glutamate 5-semialdehyde\nC20481: cis-Abienol\nC20480: Valerena-4,7(11)-diene\nC20482: (6R)-6beta-Hydroxy-1,4,5,6-tetrahydronicotinamide-adenine dinucleotide\nC20485: (4S)-4-Hydroxy-2-oxoglutarate\nC20487: L-beta-Phenylalanine\nC20886: UDP-N-acetylmuramoyl-L-alanyl-gamma-D-glutamyl-LL-2,6-diaminopimelate\nC21010: N4-Bis(aminopropyl)spermidine\nC20880: UDP-N-acetylmuramoyl-L-alanyl-D-glutamyl-LL-2,6-diaminopimeloyl-D-alanyl-D-lactate\nC20628: 2,3-Bis-(O-phytanyl)-sn-glycero-1-phospho-L-serine\nC21088: L-Altarate\nC21086: (3E)-3-[(1R,5R,6S)-5-Hydroxy-7-oxabicyclo[4.1.0]heptan-2-ylidene]-2-oxopropanoate\nC21087: 3-[(1R,2S,5R,6S)-5-Hydroxy-7-oxabicyclo[4.1.0]heptan-2-yl]-2-oxopropanoate\nC21085: 3-[(1E,4R)-4-Hydroxycyclohex-2-en-1-ylidene]-2-oxopropanoate\nC21080: 7-Hydroxydodecanoate\nC20677: N-(4-Coumaroyl)-L-homoserine lactone\nC21015: gamma-L-Glutamyl-L-2-aminobutyrate\nC20908: Dermatan 4-sulfate\nC20909: Dermatan 4,6-sulfate\nC20905: 2-Iminobutanoate\nC20906: Galactosylglucosyldiacylglycerol\nC20907: Chondroitin 4,6-sulfate\nC20900: 5-(Dihydroxymethyl)furan-2-carbaldehyde\nC20901: 5-(Dihydroxymethyl)furan-2-carboxylate\nC20903: 3,6-Anhydro-L-galactonate\nC21065: 7,8-Dihydroxanthopterin\nC20612: GDP-4-dehydro-3,6-dideoxy-alpha-D-mannose\nC21063: Ketodeoxyoctonic acid\nC21068: [5-(aminomethyl)furan-3-yl]methyl phosphate\nC21069: [5-(aminomethyl)furan-3-yl]methyl diphosphate\nC20272: alpha-Muurolene\nC20413: 3,5,7-Trioxododecanoyl-CoA\nC20896: D-Galactaro-1,4-lactone\nC20894: beta-Citraurin\nC20893: 3-(5-Oxoisoxazolin-4-yl)-L-alanine\nC20620: N-Acetyl-alpha-D-galactosaminyl-diphospho-ditrans,octacis-undecaprenol\nC20623: Caldariellaquinol\nC20593: beta-Paxitriol\nC20625: alpha-L-Fuc-(1->2)-beta-D-Gal-(1->3)-alpha-D-GalNAc-(1->3)-alpha-D-GalNAc-diphospho-ditrans,octacis-undecaprenol\nC20329: Abieta-7,13-dien-18,18-diol\nC20783: Propane\nC20780: Ginsenoside F1\nC20781: 2,4-Diketo-3-deoxy-L-fuconate\nC20786: Eleutheroside E\nC20784: ADP-5-ethyl-4-methylthiazole-2-carboxylate\nC20785: Eleutheroside A\nC20527: Emindole SB\nC20525: 3-Geranylgeranylindole\nC20528: Terpendole B\nC20529: 14,15-Epoxyemindole SB\nC20626: alpha-D-Gal-(1->3)-(alpha-L-Fuc-(1->2))-beta-D-Gal-(1->3)-alpha-D-GalNAc-(1->3)-alpha-D-GalNAc-diphospho-ditrans,octacis-undecaprenol\nC21124: IPA imine\nC21121: Bacteriohopanetetrol-glucosamine\nC21120: Bacteriohopanetetrol-acetylglucosamine\nC20629: 8-Demethylnovobiocic acid\nC20954: (5-Formylfuran-3-yl)methyl phosphate\nC20710: (4R,5R)-4,5-Dihydroxycyclohexa-1(6),2-diene-1-carboxylate\nC20895: (2S,3S)-3-Methylphenylalanine\nC20712: (S)-Laudanine\nC20921: N1-Acetyl-tabtoxinine-beta-lactam\nC20927: Sulfazecin\nC20289: N-Hydroxy-IQ\nC20288: N-Sulfonyloxy-PhIP\nC20928: MM 42842\nC20450: 2,5-Furandicarboxylate\nC20500: (1'S,5'S)-5'-Hydroxyaverantin\nC20503: 1'-Hydroxyversicolorone\nC20509: 2'-Dehydrokanamycin A\nC20925: L-Alanyl-gamma-D-glutamyl-meso-2,6-diaminoheptanedioate\nC21108: Dihydromonacolin L-[acyl-carrier protein]\nC20891: Isoxazolin-5-one\nC20719: Vancomycin aglycone\nC20929: 3alpha-Hydroxy-3-aminoacylmonobactamic acid\nC21070: (4-{4-[2-(gamma-L-glutamylamino)ethyl]phenoxymethyl}furan-2-yl)methanamine\nC20910: L-4-Hydroxyphenylglycyl-L-arginine\nC20749: 4-Trimethylammoniobutanoyl-CoA\nC20746: (3R)-Citramalyl-CoA\nC20747: (R)-Malyl-CoA\nC20744: alpha-NADH\nC20742: 2'-Phospho-cyclic ADP-ribose\nC20743: Protein N6-acetyl-L-lysine\nC20740: Novapikromyin\nC20741: Novamethymycin\nC20917: Tabtoxin\nC20298: Arsenic (III)\nC20568: beta-L-Arabinofuranosyl-(1->2)-beta-L-arabinofuranose\nC20290: N-Acetoxy-IQ\nC20291: N-Hydroxy-MeIQx\nC20293: N-Acetoxy-MeIQx\nC20294: Chromium (V)\nC20295: Chromium (IV)\nC20296: Arsenic (V)\nC20565: Cyclic di-3',5'-adenylate\nC20992: Juvenile hormone I acid\nC21006: 18-Hydroxylinoleoyl-CoA\nC18738: BHC\nC20727: Kaempferol 3-O-beta-D-xyloside\nC20887: beta-D-Mannosyl-1,4-N-acetyl-D-glucosamine\nC20881: Undecaprenyl-diphospho-N-acetylmuramoyl-(N-acetylglucosamine)-L-alanyl-D-glutamyl-LL-2,6-diaminopimeloyl-D-alanyl-D-Lactate\nC20306: Methyldiazohydroxide\nC20492: Pelargonidin 5-O-beta-D-glucoside 3-O-beta-D-sambubioside\nC20493: Cyanidin 5-O-beta-D-glucoside 3-O-beta-D-sambubioside\nC20491: Delphinidin 3-O-beta-D-sambubioside\nC20691: 4-Demethylwyosine in tRNA(Phe)\nC20497: N-Acetyl-beta-D-mannosaminuronosyl-(1->4)-N-acetyl-alpha-D-glucosaminyl-diphospho-ditrans,octacis-undecaprenol\nC20597: Penitrem E\nC20338: 2-Octyl dodecanol\nC20336: Alphazurine FG\nC20334: 1,2,6-Hexanetriol\nC20594: 20,21-Diprenylterpendole J\nC20592: Moniliformin\nC20768: UDP-2-acetamido-2,6-dideoxy-beta-L-talose\nC20760: 20-Oxo-5-O-beta-mycaminosyltylactone\nC20761: alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-[alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)]n-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC20762: 3-O-Phospho-alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-[alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)]n-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC20763: 3-O-Methylphospho-alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-[alpha-D-Man-(1->2)-alpha-D-Man-(1->2)-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)]n-alpha-D-Man-(1->3)-alpha-D-Man-(1->3)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC20764: Phytyl phosphate\nC20766: dTDP-N-hydroxy-beta-L-evernosamine\nC20767: dTDP-2,3,6-trideoxy-3-C-methyl-4-O-methyl-3-nitroso-beta-L-arabino-hexopyranose\nC20816: Deacetylepithienamycin F\nC20545: Terpendole J\nC20546: Terpendole C\nC20813: OA-6129 A\nC20542: 13-Desoxyterpendole I\nC20599: Pennigritrem\nC20548: Lolitriol\nC20549: Lolitrem J\nC20819: C20819\nC20598: Penitrem F\nC20301: alpha-Hydroxy-NDMA\nC20641: L-Threonylcarbamoyladenylate\nC20817: C20817\nC20814: OA-6129 C\nC20810: (3S)-3-Amino-3-(3-chloro-4-hydroxyphenyl)propanoyl-[peptidyl-carrier protein SgcC2]\nC20640: Cyclic GMP-AMP\nC20543: Terpendole I\nC20934: 3-Deoxy-D-glycero-D-galacto-non-2-ulosonic acid\nC20936: pppA2'p5'A2'p5'A\nC20818: C20818\nC20708: Robenacoxib\nC20709: Diosgenin 3-O-beta-D-glucopyranoside\nC20830: 6-Deoxy-6-sulfo-D-fructose\nC20831: 6-Deoxy-6-sulfo-D-fructose 1-phosphate\nC20832: Hydroperoxyicosatetraenoate\nC20833: Oxoicosatetraenoate\nC20834: Cyclooctat-9-en-7-ol\nC20839: (25S)-3-Oxocholest-4-en-26-oate\nC20776: N-Acetylaspartylglutamylglutamate\nC20494: Delphinidin 5-O-beta-D-glucoside 3-O-beta-D-sambubioside\nC20879: Very-long-chain trans-2,3-dehydroacyl-CoA\nC20996: (14E)-Hexadec-14-enoyl-CoA\nC20651: O-Ureido-D-serine\nC20609: 2-Chloroacrylate\nC20723: 3-O-[N-Acetyl-beta-D-glucosaminyl-(1->4)-alpha-D-mannosyl]-L-threonyl-[protein]\nC20770: N-Methylpavine\nC20990: 6-Aminohexanoate cyclic oligomer\nC20696: 13-Apo-beta-carotenone\nC20729: [CysO sulfur-carrier protein]-Gly-NH-CH2-C(O)-S-L-cysteine\nC20588: Tetrabromophenol blue\nC20589: 6-Phospho-D-glucosaminate\nC20858: Protein N5-methyl-L-glutamine\nC20859: Galactosyl-1-alkyl-2-acylglycerol\nC20580: [tRNA(Ile2)]-2-agmatinylcytidine34\nC20582: cis-(Homo)3-aconitate\nC20584: Lolicine A\nC20585: Lolicine B\nC20586: Terpendole G\nC20587: Paspaline B\nC20995: gamma-L-Glutamyl-S-(hercyn-2-yl)-L-cysteine S-oxide\nC20974: 8-Demethyl-8-alpha-L-rhamnosyltetracenomycin C\nC20617: beta-D-Gal-(1->3)-alpha-D-GlcNAc-diphospho-ditrans,octacis-undecaprenol\nC20533: Lolitrem K\nC20443: 5-Hydroxymethylfurfuryl alcohol\nC20305: 1,2-Dichloroethanol\nC20302: Methyldiazonium ion\nC17692: 2-epi-5-epi-Valiolone 7-phosphate\nC17693: 5-epi-Valiolone 7-phosphate\nC21007: 5,6,7,8-Tetrahydromonapterin\nC20775: beta-Citryl-L-glutamate\nC20774: UDP-N-acetyl-beta-L-fucosamine\nC20991: 1,2-Diacyl-3-O-[beta-D-galactosyl-(1->6)-beta-D-galactosyl]-sn-glycerol\nC20457: 6,8-Dimethyl-6,7,8,9-tetradehydroergoline\nC20997: (14Z)-Hexadec-14-enoyl-CoA\nC20687: (S)-(2,4-Dichlorophenoxy)propanoate\nC20686: (S)-2-(4-Chloro-2-methylphenoxy)propanoate\nC20685: (R)-(2,4-Dichlorophenoxy)propanoate\nC20684: O-Carbamoyladenylate\nC20469: Cyanidin 3,7-di-O-beta-D-glucoside\nC20468: Cyanidin 3-O-(beta-D-xylosyl-(1->2)-beta-D-galactoside)\nC20467: Anthocyanidin 3-O-beta-D-sambubioside\nC20466: 2,3-Bis-O-(geranylgeranyl)-sn-glycero-1-phospho-L-serine\nC20463: Purine deoxyribonucleoside\nC20462: 5,7-Dihydroxy-2-methyl-4H-chromen-4-one\nC20461: Anthocyanidin 3-O-[6-O-(4-hydroxycinnamoyl)-beta-D-glucoside]\nC20460: Cyanidin 3-O-[6-O-(6-O-4-hydroxycinnamoyl-beta-D-glucosyl)-2-O-beta-D-xylosyl-beta-D-galactoside]\nC20994: S-(Hercyn-2-yl)-L-cysteine S-oxide\nC20451: tRNA hypoxanthine\nC20998: (11Z)-Hexadec-11-enoyl-CoA\nC20805: 3-Hydroxy-5-methyl-1-naphthoate\nC20807: 3-Hydroxy-L-phenylalanine\nC20806: omega-Hydroxyphylloquinone\nC20803: 5-Methyl-1-naphthoate\nC20802: (4S)-4-Hydroxy-L-isoleucine\nC20459: tRNA(Ala) adenine\nC20490: Cyanidin 3-O-beta-D-sambubioside\nC20940: L-Dihydroanticapsin\nC20943: (R)-Ipsdienol\nC20668: 3-Dehydro-D-glucose 6-phosphate\nC20664: (-)-Bornyl diphosphate\nC20667: 15-Oxo-beta-bilirubin\nC20666: 5-Oxo-delta-bilirubin\nC20661: 7-(2-Hydroxy-3-amino-3-carboxypropyl)wyosine in tRNA(Phe)\nC20660: Wybutosine in tRNA(Phe)\nC20663: L-Histidine-[translation elongation factor 2]\nC20662: Hydroxywybutosine in tRNA(Phe)\nC21073: dTDP-3-N,N-dimethylamino-2,3,6-trideoxy-4-keto-D-glucose\nC20409: 6,8-Dimethyl-6,7-didehydroergoline\nC20408: Festuclavine\nC20403: 1-Deoxy-11beta-hydroxypentalenate\nC20270: Copal-8-ol diphosphate\nC20271: [(1R)-2,2,3-Trimethyl-5-oxocyclopent-3-enyl]acetate\nC20387: Biotin sulfone\nC20946: Oleanolic aldehyde\nC20765: dTDP-beta-L-evernosamine\nC20348: Lissamine rhodamine B\nC20349: Quinoline yellow WS\nC20342: Isobutylparaben\nC20343: Isopropylparaben\nC20340: L-Ascorbic acid, 6-octadecanoate\nC20346: C.I. Acid red 33\nC20344: New coccine\nC21002: 6-Linalyl-2-O,3-dimethylflaviolin\nC20647: N1-Methyladenine in rRNA\nC20281: 1-(4-Hydroxyphenylazo)-2-naphthol\nC20646: (3S)-2-Oxo-3-phenylbutanoate\nC20645: Methyl benzoate\nC20644: 2-Amino-4,5-dihydroxy-6-oxo-7-(phosphonooxy)heptanoate\nC17880: Cryptocyanin\nC20604: Fumitremorgin C\nC20777: Gypenoside LXXV\nC20423: alpha-D-Ribose 1-methylphosphonate 5-phosphate\nC20421: N,N'-Diacetyl-alpha-D-bacillosaminyldiphospho-tritrans,heptacis-undecaprenol\nC20427: N-Acetyl-D-galactosaminyl-alpha-(1->3)-N,N'-diacetyl-alpha-D-bacillosaminyldiphospho-tritrans,heptacis-undecaprenol\nC20426: Mycorradicin\nC20425: beta-Cyclocitral\n684\n"
                    }
                ],
                "source": "num_notfound = 0\nfor key, val in kegg_cpds.iteritems():\n    if key not in kegg2MS:\n        if val.lower() not in ms_names2id:\n            print(\"{}: {}\".format(key, kegg_cpds[key]))\n            num_notfound += 1\nprint(num_notfound)"
            },
            {
                "cell_type": "code",
                "execution_count": 37,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 25 Jan 2018 21:37:13 GMT",
                            "icon": "code",
                            "id": "de6bfc54-52e0-48ad-9ecc-f9ea67144301",
                            "lastLoaded": "Thu, 25 Jan 2018 21:37:13 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "def kegg_cpd_to_kbase_cpd(kegg_cpd):\n    if kegg_cpd in kegg2MS:\n        return kegg2MS[kegg_cpd]\n    elif kegg_cpds[kegg_cpd] in ms_names2id:\n        return ms_names2id[kegg_name]\n    else:\n        return None"
            },
            {
                "cell_type": "code",
                "execution_count": 45,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:03:53 GMT",
                            "icon": "code",
                            "id": "38ad8aaa-92fb-482b-8a78-d58aa8092fd6",
                            "lastLoaded": "Fri, 26 Jan 2018 15:03:53 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "u'cpd00086'"
                        },
                        "execution_count": 45,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "kegg_cpd_to_kbase_cpd('C00100')"
            },
            {
                "cell_type": "code",
                "execution_count": 46,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:04:50 GMT",
                            "icon": "code",
                            "id": "47623b73-6308-450e-902e-c25763dc04bc",
                            "lastLoaded": "Fri, 26 Jan 2018 15:04:50 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "Variable                Type        Data/Info\n---------------------------------------------\nJobManager              type        <class 'biokbase.narrativ<...>s.jobmanager.JobManager'>\ncompounds               list        n=27692\ncompounds_file          str         /Users/wjriehl/Projects/k<...>/modelseed_compounds.json\ncpd                     dict        n=23\ninfile                  file        <closed file '/Users/wjri<...> mode 'r' at 0x116302030>\njson                    module      <module 'json' from '/Sys<...>on2.7/json/__init__.pyc'>\nka                      unicode     C01046\nkegg2MS                 dict        n=17543\nkegg_cpd_to_kbase_cpd   function    <function kegg_cpd_to_kbase_cpd at 0x1087b82a8>\nkegg_cpds               dict        n=17600\nkey                     unicode     C17464\nms_cpds                 dict        n=27692\nms_names2id             dict        n=87084\nname                    unicode     NMG\nnum_notfound            int         684\nos                      module      <module 'os' from '/Users<...>nv/lib/python2.7/os.pyc'>\nsn                      unicode     nmg\nval                     unicode     Nupharamine\n"
                    }
                ],
                "source": "whos"
            },
            {
                "cell_type": "code",
                "execution_count": 47,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:08:21 GMT",
                            "icon": "code",
                            "id": "917c8583-bb22-4cef-bb2f-d27ed1c9dac3",
                            "lastLoaded": "Fri, 26 Jan 2018 15:08:21 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "u'Propanoyl-CoA'"
                        },
                        "execution_count": 47,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "kegg_cpds['C00100']"
            },
            {
                "cell_type": "code",
                "execution_count": 48,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:08:35 GMT",
                            "icon": "code",
                            "id": "f60bbd10-148e-47aa-b3cf-ac50d6ca90dc",
                            "lastLoaded": "Fri, 26 Jan 2018 15:08:35 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'abbreviation': u'ppcoa',\n u'bigg_aliases': [u'ppcoa'],\n u'charge': u'-3',\n u'deltag': u'-784.21',\n u'deltagerr': u'3.54855',\n u'formula': u'C24H37N7O17P3S',\n u'groups': [u'WCH3:3',\n  u'WCH2W:7',\n  u'RWCHdblW:2',\n  u'RWCHWW:4',\n  u'WketoneW:3',\n  u'TWWCdblW:2',\n  u'WWCHW:1',\n  u'RWCdblWW:1',\n  u'WWCWW:1',\n  u'WNH2:1',\n  u'RWdblNW:3',\n  u'RWWNW:1',\n  u'PrimOH:2',\n  u'prim_phos:1',\n  u'WPO4nW:1',\n  u'mid_phos:1',\n  u'RWOW:1',\n  u'amide:2',\n  u'WNHW:2',\n  u'WSW:1',\n  u'smide:1',\n  u'Origin:1',\n  u'HeteroAromatic:2'],\n u'id': u'cpd00086',\n u'inchikey': u'QAQREVBBADEHPA-IEXPHMLFSA-J',\n u'is_cofactor': u'0',\n u'is_core': u'1',\n u'is_obsolete': u'0',\n u'kegg_aliases': [u'C00100'],\n u'mass': u'820',\n u'metacyc_aliases': [u'PROPIONYL-COA'],\n u'name': u'Propionyl-CoA',\n u'names': [u'Propanoyl-CoA',\n  u'Propionyl coenzyme A',\n  u'Propionyl-CoA',\n  u'n-propionyl-CoA',\n  u'propanoyl-CoA',\n  u'propionyl-CoA',\n  u'propionyl-coenzyme A'],\n u'pka': [u'26:2.01', u'22:1.46', u'30:2.62', u'38:12.78', u'23:6.72'],\n u'pkb': [u'9:-3.48', u'17:3.94', u'8:-9.18', u'38:-3.77'],\n u'search_inchi': u'InChI=1S/C24H40N7O17P3S/c1-4-15(33)52-8-7-26-14(32)5-6-27-22(36)19(35)24(2,3)10-45-51(42,43)48-50(40,41)44-9-13-18(47-49(37,38)39)17(34)23(46-13)31-12-30-16-20(25)28-11-29-21(16)31/h11-13,17-19,23,34-35H,4-10H2,1-3H3,(H,26,32)(H,27,36)(H,40,41)(H,42,43)(H2,25,28,29)(H2,37,38,39)/t13-,17-,18-,19+,23-/m1/s1',\n u'searchnames': [u'npropionylcoa',\n  u'propanoylcoa',\n  u'propionylcoa',\n  u'propionylcoenzymea'],\n u'smiles': u'CCC(=O)SCCN=C([O-])CCN=C([O-])C(O)C(C)(C)COP(=O)(O)OP(=O)(O)OCC1OC(n2cnc3c(N)ncnc32)C(O)C1OP(=O)([O-])[O-]',\n u'source': u'ModelSEED',\n u'structure': u'InChI=1S/C24H40N7O17P3S/c1-4-15(33)52-8-7-26-14(32)5-6-27-22(36)19(35)24(2,3)10-45-51(42,43)48-50(40,41)44-9-13-18(47-49(37,38)39)17(34)23(46-13)31-12-30-16-20(25)28-11-29-21(16)31/h11-13,17-19,23,34-35H,4-10H2,1-3H3,(H,26,32)(H,27,36)(H,40,41)(H,42,43)(H2,25,28,29)(H2,37,38,39)/p-4/t13-,17-,18-,19+,23-/m1/s1'}"
                        },
                        "execution_count": 48,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ms_cpds['cpd00086']"
            },
            {
                "cell_type": "code",
                "execution_count": 49,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:08:57 GMT",
                            "icon": "code",
                            "id": "787586a8-7fcc-4eab-bfb9-63514189e381",
                            "lastLoaded": "Fri, 26 Jan 2018 15:08:57 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'copy_source_inaccessible': 0,\n u'created': u'2018-01-19T00:30:50+0000',\n u'creator': u'wjriehl',\n u'data': {u'assembly_id': u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly',\n  u'base_counts': {u'A': 659017, u'C': 1127624, u'G': 1127109, u'T': 657108},\n  u'contigs': {u'dvu:1': {u'contig_id': u'dvu:1',\n    u'description': u'',\n    u'gc_content': 0.63143,\n    u'length': 3570858,\n    u'md5': u'575f1fe94f7b2378cb5cfeea13fbc87a',\n    u'name': u'dvu:1'}},\n  u'dna_size': 3570858,\n  u'fasta_handle_info': {u'handle': {u'file_name': u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta.filtered.fa',\n    u'hid': u'KBH_237281',\n    u'id': u'5fb55ac8-fbd0-4566-ac04-ff99180ba40d',\n    u'remote_md5': u'd54ad1798e1a1550ba8ba693a38bf9ea',\n    u'type': u'shock',\n    u'url': u'https://ci.kbase.us/services/shock-api'},\n   u'node_file_name': u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta.filtered.fa',\n   u'shock_id': u'5fb55ac8-fbd0-4566-ac04-ff99180ba40d',\n   u'size': 3630380},\n  u'fasta_handle_ref': u'KBH_237281',\n  u'gc_content': 0.63143,\n  u'md5': u'12b876ac629bbf83dad31c321df32393',\n  u'num_contigs': 1,\n  u'type': u'Unknown'},\n u'epoch': 1516321850756,\n u'extracted_ids': {u'handle': [u'KBH_237281']},\n u'info': [7,\n  u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly',\n  u'KBaseGenomeAnnotations.Assembly-6.0',\n  u'2018-01-19T00:30:50+0000',\n  2,\n  u'wjriehl',\n  25022,\n  u'wjriehl:narrative_1502225097649',\n  u'62ef23323e3e4d1db3bbb6ae2ff8bd1d',\n  853,\n  {u'GC content': u'0.63143',\n   u'MD5': u'12b876ac629bbf83dad31c321df32393',\n   u'N Contigs': u'1',\n   u'Size': u'3570858'}],\n u'orig_wsid': 25022,\n u'path': [u'25022/7/2'],\n u'provenance': [{u'custom': {},\n   u'description': u'KBase SDK method run via the KBase Execution Engine',\n   u'epoch': 1516321828000,\n   u'external_data': [],\n   u'input_ws_objects': [],\n   u'method': u'import_fasta_as_assembly_from_staging',\n   u'method_params': [{u'assembly_name': u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly',\n     u'min_contig_length': 500,\n     u'staging_file_subdir_path': u'Desulfovibrio_vulgaris_Hildenborough_C1.fasta',\n     u'workspace_name': u'wjriehl:narrative_1502225097649'}],\n   u'resolved_ws_objects': [],\n   u'service': u'kb_uploadmethods',\n   u'service_ver': u'1.0.10',\n   u'subactions': [{u'code_url': u'https://github.com/kbaseapps/kb_uploadmethods',\n     u'commit': u'376efd14d584f6642a5ceeea33d3acd2d3c78b20',\n     u'name': u'kb_uploadmethods',\n     u'ver': u'1.0.10'},\n    {u'code_url': u'https://github.com/kbaseapps/DataFileUtil',\n     u'commit': u'c4733f9c81bcc8228c63ceeb2c0540df9e61153e',\n     u'name': u'DataFileUtil',\n     u'ver': u'0.0.21-release'},\n    {u'code_url': u'https://github.com/kbaseapps/AssemblyUtil',\n     u'commit': u'2b9b53d852190c94996e620d4754ca6aa98c0cb4',\n     u'name': u'AssemblyUtil',\n     u'ver': u'1.0.6-release'}],\n   u'time': u'2018-01-19T00:30:28+0000'}],\n u'refs': []}"
                        },
                        "execution_count": 49,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ws = biokbase.narrative.clients.get('workspace')\nws.get_objects2({'objects': [{'ref': '25022/7/2'}]})['data'][0]"
            },
            {
                "cell_type": "code",
                "execution_count": 50,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:26:31 GMT",
                            "icon": "code",
                            "id": "e3af33b5-7296-4032-bd82-4bfacf5c82b8",
                            "lastLoaded": "Fri, 26 Jan 2018 15:26:31 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "model = ws.get_objects2({'objects': [{'ref': '25022/14/2'}]})['data'][0]['data']"
            },
            {
                "cell_type": "code",
                "execution_count": 53,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:29:48 GMT",
                            "icon": "code",
                            "id": "a30f17cc-f6ee-481c-814b-77970fb2f748",
                            "lastLoaded": "Fri, 26 Jan 2018 15:29:48 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'aliases': [],\n u'direction': u'<',\n u'gapfill_data': {},\n u'id': u'rxn12008_c0',\n u'modelReactionProteins': [{u'complex_ref': u'6/5/1/complexes/id/mscpx.1',\n   u'modelReactionProteinSubunits': [{u'feature_refs': [u'2968/4/1/features/id/kb|g.220339.CDS.1894',\n      u'2968/4/1/features/id/kb|g.220339.CDS.3163'],\n     u'note': u'',\n     u'optionalSubunit': 0,\n     u'role': u'Octaprenyl diphosphate synthase (EC 2.5.1.90)',\n     u'triggering': 1}],\n   u'note': u''}],\n u'modelReactionReagents': [{u'coefficient': 1,\n   u'modelcompound_ref': u'~/modelcompounds/id/cpd00113_c0'},\n  {u'coefficient': 1,\n   u'modelcompound_ref': u'~/modelcompounds/id/cpd02590_c0'},\n  {u'coefficient': -1,\n   u'modelcompound_ref': u'~/modelcompounds/id/cpd02557_c0'},\n  {u'coefficient': -1,\n   u'modelcompound_ref': u'~/modelcompounds/id/cpd00012_c0'}],\n u'modelcompartment_ref': u'~/modelcompartments/id/c0',\n u'name': u'rxn12008_c0',\n u'probability': 0,\n u'protons': 0,\n u'reaction_ref': u'6/4/1/reactions/id/rxn12008'}"
                        },
                        "execution_count": 53,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "model['modelreactions'][0]"
            },
            {
                "cell_type": "code",
                "execution_count": 54,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:30:05 GMT",
                            "icon": "code",
                            "id": "cafede6f-8082-4011-9195-ae959e81fc1d",
                            "lastLoaded": "Fri, 26 Jan 2018 15:30:05 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'aliases': [],\n u'charge': -2,\n u'compound_ref': u'6/4/1/compounds/id/cpd00113',\n u'formula': u'C5H10O7P2',\n u'id': u'cpd00113_c0',\n u'modelcompartment_ref': u'~/modelcompartments/id/c0',\n u'name': u'Isopentenyldiphosphate_c0'}"
                        },
                        "execution_count": 54,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "model['modelcompounds'][0]"
            },
            {
                "cell_type": "code",
                "execution_count": 55,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 26 Jan 2018 15:36:55 GMT",
                            "icon": "code",
                            "id": "0d50f40f-e99c-4c6e-ae3c-7f7db0f99e34",
                            "lastLoaded": "Fri, 26 Jan 2018 15:36:55 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "[u'gapfilledcandidates',\n u'gapfillings',\n u'name',\n u'source',\n u'modelcompounds',\n u'gapgens',\n u'biomasses',\n u'template_refs',\n u'modelcompartments',\n u'quantopts',\n u'genome_ref',\n u'type',\n u'source_id',\n u'__VERSION__',\n u'template_ref',\n u'id',\n u'modelreactions']"
                        },
                        "execution_count": 55,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "model.keys()"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Sat, 03 Feb 2018 00:54:46 GMT",
                            "icon": "code",
                            "id": "50dc1fe9-fd63-48d0-a872-c0c4323edcf2",
                            "lastLoaded": "Sat, 03 Feb 2018 00:54:46 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "covstats.txt  stats.tsv\r\n"
                    }
                ],
                "source": "ls"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "collapsed": true,
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 21 Feb 2018 20:02:09 GMT",
                            "icon": "code",
                            "id": "a9bf152b-d692-42ac-a9aa-1624fb867ea1",
                            "lastLoaded": "Wed, 21 Feb 2018 20:02:09 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "stats_file = \"stats.tsv\"\nstats_data = list()  # gonna make a list of lists because i hate myself\nwith open(stats_file, \"r\") as f:\n    lines = f.readlines()\n    header = lines.pop(0)\n    \n    for line in lines:\n        stats_data.append(line.strip().split(\"\\t\"))\n    for i in range(len(stats_data[0])):\n        "
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 26 Sep 2018 21:27:36 GMT",
                            "icon": "code",
                            "id": "366fc463-e6d1-4702-a610-a48dfbf5e779",
                            "lastLoaded": "Wed, 26 Sep 2018 21:27:36 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "[[1,\n  u'Narrative.1549049089634',\n  u'KBaseNarrative.Narrative-4.0',\n  u'2019-02-01T19:25:01+0000',\n  3,\n  u'wjriehl',\n  40215,\n  u'wjriehl:narrative_1549049089634',\n  u'd2c61a56ad70b785df79db015de137c5',\n  2740,\n  None]]"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ws = biokbase.narrative.clients.get('workspace')\nws.list_objects({'ids': [40215]})"
            },
            {
                "cell_type": "code",
                "execution_count": 15,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 26 Sep 2018 21:50:32 GMT",
                            "icon": "code",
                            "id": "db090780-6bf0-477d-b5a3-f4f096058b9a",
                            "lastLoaded": "Wed, 26 Sep 2018 21:50:32 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "[40215,\n u'wjriehl:narrative_1549049089634',\n u'wjriehl',\n u'2019-02-01T22:31:30+0000',\n 1,\n u'a',\n u'n',\n u'unlocked',\n {u'cell_count': u'1',\n  u'is_temporary': u'false',\n  u'narrative': u'1',\n  u'narrative_nice_name': u'Totes Brokes',\n  u'searchtags': u'narrative'}]"
                        },
                        "execution_count": 15,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ws.get_workspace_info({'id': 40215})"
            },
            {
                "cell_type": "code",
                "execution_count": 23,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 01 Feb 2019 22:11:42 GMT",
                            "icon": "code",
                            "id": "d474d27a-f661-4a23-8aa6-1009da518fc7",
                            "lastLoaded": "Fri, 01 Feb 2019 22:11:42 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "[u'info', u'orig_wsid', u'creator', u'refs', u'provenance', u'created', u'epoch', u'copy_source_inaccessible', u'path', u'copied', u'data', u'extracted_ids']\n"
                    },
                    {
                        "data": {
                            "text/plain": "[2,\n u'rhodoModel',\n u'KBaseFBA.FBAModel-13.0',\n u'2019-02-01T22:32:26+0000',\n 2,\n u'wjriehl',\n 40215,\n u'wjriehl:narrative_1549049089634',\n u'3cbcac6de065ee04a941f3c0f86366aa',\n 1267550,\n {u'Genome': u'2968/4/1',\n  u'Name': u'Rhodobacter CACIA 14H1',\n  u'Number biomasses': u'1',\n  u'Number compartments': u'2',\n  u'Number compounds': u'1048',\n  u'Number gapfills': u'0',\n  u'Number gapgens': u'0',\n  u'Number reactions': u'1002',\n  u'Source': u'KBase',\n  u'Source ID': u'kb|g.220339.fbamdl',\n  u'Type': u'GenomeScale'}]"
                        },
                        "execution_count": 23,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "d = ws.get_objects2({'objects': [{'ref': \"40215/2\"}]})\nprint(d['data'][0].keys())\nd['data'][0]['info']"
            },
            {
                "cell_type": "code",
                "execution_count": 25,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 01 Feb 2019 22:46:55 GMT",
                            "icon": "code",
                            "id": "8dc0d81b-b438-4467-ab80-9a8083a88065",
                            "lastLoaded": "Fri, 01 Feb 2019 22:46:55 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'infos': [[1,\n   u'Narrative.1549049089634',\n   u'KBaseNarrative.Narrative-4.0',\n   u'2019-02-01T20:22:43+0000',\n   5,\n   u'wjriehl',\n   40215,\n   u'wjriehl:narrative_1549049089634',\n   u'5b1b0cdb9987b3e5d2ac8bfd6c11ad48',\n   3141,\n   {u'creator': u'wjriehl',\n    u'data_dependencies': u'[]',\n    u'description': u'',\n    u'format': u'ipynb',\n    u'is_temporary': u'false',\n    u'job_info': u'{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}',\n    u'jupyter.markdown': u'1',\n    u'name': u'Totes Brokes',\n    u'type': u'KBaseNarrative.Narrative',\n    u'ws_name': u'wjriehl:narrative_1549049089634'}]],\n u'paths': [[u'40215/1/5']]}"
                        },
                        "execution_count": 25,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ws.get_object_info3({'objects': [{'ref': '40215/1'}], 'includeMetadata': 1})"
            },
            {
                "cell_type": "code",
                "execution_count": 17,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 26 Sep 2018 21:54:43 GMT",
                            "icon": "code",
                            "id": "c34bc17f-f7dd-456a-8ccf-dd95498b865f",
                            "lastLoaded": "Wed, 26 Sep 2018 21:54:43 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "ws.alter_workspace_metadata({'wsi': {'id': 40215}, 'new': {'narrative': '2'}})"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "09b94c39b2fab79962a8d978aa15a424342defe4",
                                "id": "kb_trimmomatic/run_trimmomatic",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "input_ws"
                                            },
                                            {
                                                "input_parameter": "input_reads_ref",
                                                "target_property": "input_reads_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "output_reads_name",
                                                "target_property": "output_reads_name"
                                            },
                                            {
                                                "input_parameter": "translate_to_phred33",
                                                "target_property": "translate_to_phred33"
                                            },
                                            {
                                                "input_parameter": "adapter_clip",
                                                "target_property": "adapter_clip"
                                            },
                                            {
                                                "input_parameter": "sliding_window",
                                                "target_property": "sliding_window"
                                            },
                                            {
                                                "input_parameter": "leading_min_quality",
                                                "target_property": "leading_min_quality"
                                            },
                                            {
                                                "input_parameter": "trailing_min_quality",
                                                "target_property": "trailing_min_quality"
                                            },
                                            {
                                                "input_parameter": "crop_length",
                                                "target_property": "crop_length"
                                            },
                                            {
                                                "input_parameter": "head_crop_length",
                                                "target_property": "head_crop_length"
                                            },
                                            {
                                                "input_parameter": "min_length",
                                                "target_property": "min_length"
                                            }
                                        ],
                                        "kb_service_method": "runTrimmomatic",
                                        "kb_service_name": "kb_trimmomatic",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "09b94c39b2fab79962a8d978aa15a424342defe4"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "psdehal",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "reads"
                                        ],
                                        "git_commit_hash": "09b94c39b2fab79962a8d978aa15a424342defe4",
                                        "icon": {
                                            "url": "img?method_id=kb_trimmomatic/run_trimmomatic&image_name=trimmomatic-pink.png&tag=release"
                                        },
                                        "id": "kb_trimmomatic/run_trimmomatic",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseAssembly.SingleEndLibrary",
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseRNASeq.RNASeqSampleSet",
                                            "KBaseSets.ReadsSet"
                                        ],
                                        "module_name": "kb_trimmomatic",
                                        "name": "Trimmomatic - Read Trimming - v0.36",
                                        "namespace": "kb_trimmomatic",
                                        "output_types": [
                                            "KBaseFile.PairedEndLibrary",
                                            "KBaseFile.SingleEndLibrary",
                                            "KBaseSets.ReadsSet"
                                        ],
                                        "subtitle": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                                        "tooltip": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                                        "ver": "1.2.9"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "description": "",
                                            "id": "adapter_clip",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "adapterFa",
                                                "seed_mismatches",
                                                "palindrome_clip_threshold",
                                                "simple_clip_threshold"
                                            ],
                                            "short_hint": "Configure if you wish to remove standard adapters",
                                            "ui_name": "Adapter clipping options",
                                            "with_border": 0
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "description": "",
                                            "id": "sliding_window",
                                            "optional": 0,
                                            "parameter_ids": [
                                                "sliding_window_size",
                                                "sliding_window_min_quality"
                                            ],
                                            "short_hint": "Configure quality window options",
                                            "ui_name": "Sliding window options",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The read library or read library set for which you want to trim.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_reads_ref",
                                            "optional": 0,
                                            "short_hint": "The read library or read library set to examine",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseRNASeq.RNASeqSampleSet",
                                                    "KBaseSets.ReadsSet",
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary",
                                                    "KBaseAssembly.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read library (or Set) object <font color=red>*</font>"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Base name for output read library or read library set object",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_reads_name",
                                            "optional": 0,
                                            "short_hint": "Base name for output read library or read library set object",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSets.ReadsSet",
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseFile.SingleEndLibrary"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output library (or Set) name <font color=red>*</font>"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).  Does nothing if already phred33.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "no",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "yes",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "translate_to_phred33",
                                            "optional": 1,
                                            "short_hint": "Modernize and standardize phred64 (Illumina <= 1.7) read quality encoding format to phred33 (Sanger, 454, SRA, Illumina >= 1.8).",
                                            "ui_class": "parameter",
                                            "ui_name": "Translate quality encoding from phred64 to phred33"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The reference adapter sequences.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "TruSeq3-PE",
                                                        "value": "TruSeq3-PE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq2-PE",
                                                        "value": "TruSeq2-PE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq3-PE-2",
                                                        "value": "TruSeq3-PE-2.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq3-SE",
                                                        "value": "TruSeq3-SE.fa"
                                                    },
                                                    {
                                                        "display": "TruSeq2-SE",
                                                        "value": "TruSeq2-SE.fa"
                                                    },
                                                    {
                                                        "display": "NexteraPE-PE",
                                                        "value": "NexteraPE-PE.fa"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "adapterFa",
                                            "optional": 1,
                                            "short_hint": "The reference sequences for trimming.",
                                            "ui_class": "parameter",
                                            "ui_name": "Adapters"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2"
                                            ],
                                            "description": "Specifies the maximum mismatch count which will still allow a full match to be performed.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "seed_mismatches",
                                            "optional": 1,
                                            "short_hint": "Maximum mismatch count which will still allow a full match.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Seed mismatches"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "30"
                                            ],
                                            "description": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "palindrome_clip_threshold",
                                            "optional": 1,
                                            "short_hint": "Specifies how accurate the match between the two 'adapter ligated' reads must be for PE palindrome read alignment.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Palindrome clip threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "simple_clip_threshold",
                                            "optional": 1,
                                            "short_hint": "Specifies how accurate the match between any adapter etc. sequence must be against a read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Simple clip threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "4"
                                            ],
                                            "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sliding_window_size",
                                            "optional": 1,
                                            "short_hint": "Specifies the number of bases to average across.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Sliding window size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "15"
                                            ],
                                            "description": "Perform a sliding window trimming, cutting once the average quality within the window falls below a threshold. By considering multiple bases, a single poor quality base will not cause the removal of high quality data later in the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "sliding_window_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the average quality required.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Sliding window minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Removes bases regardless of quality from the end of the read, so that the read has maximally the specified length after this step has been performed. Steps performed after CROP might of course further shorten the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "crop_length",
                                            "optional": 1,
                                            "short_hint": "The number of bases to keep, from the start of the read (e.g. tail crop 10 bases from a 150 base read: enter \"140\").",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Post Tail Crop length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Removes the specified number of bases, regardless of quality, from the beginning of the read.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "head_crop_length",
                                            "optional": 1,
                                            "short_hint": "The number of bases to remove from the start of the read (e.g. head crop 10 bases: enter \"10\").",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Head crop length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "3"
                                            ],
                                            "description": "Remove low quality bases from the beginning. As long as a base has a value below this threshold the base is removed and the next base will be investigated.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "leading_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum quality required to keep a base at start of read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Leading minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "3"
                                            ],
                                            "description": "Remove low quality bases from the end. As long as a base has a value below this threshold the base is removed and the next base (which as trimmomatic is starting from the 3  prime end would be base preceding the just removed base) will be investigated. This approach can be used removing the special illumina  low quality segment  regions (which are marked with quality score of 2), but we recommend Sliding Window or MaxInfo instead.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "trailing_min_quality",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum quality required to keep a base at end of read.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Trailing minimum quality"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "36"
                                            ],
                                            "description": "This module removes reads that fall below the specified minimal length. Reads removed by this step will be counted and included in the \"dropped reads\" count presented in the trimmomatic summary.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_length",
                                            "optional": 1,
                                            "short_hint": "Specifies the minimum length of reads to be kept.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum read length"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.9"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "d4566711-419b-47cc-b146-be53e276ed37",
                                    "child_jobs": [],
                                    "creation_time": 1544467171849,
                                    "error": {
                                        "code": -32000,
                                        "error": "Traceback (most recent call last):\n  File \"/kb/module/bin/../lib/kb_trimmomatic/kb_trimmomaticServer.py\", line 95, in _call_method\n    result = method(ctx, *params)\n  File \"/kb/module/lib/kb_trimmomatic/kb_trimmomaticImpl.py\", line 551, in runTrimmomatic\n    report_info = report.create_extended_report(reportObj)\n  File \"/kb/module/lib/KBaseReport/KBaseReportClient.py\", line 163, in create_extended_report\n    job_state = self._check_job(job_id)\n  File \"/kb/module/lib/KBaseReport/KBaseReportClient.py\", line 44, in _check_job\n    return self._client._check_job('KBaseReport', job_id)\n  File \"/kb/module/lib/KBaseReport/baseclient.py\", line 216, in _check_job\n    return self._call(self.url, service + '._check_job', [job_id])\n  File \"/kb/module/lib/KBaseReport/baseclient.py\", line 183, in _call\n    raise ServerError(**err['error'])\nServerError: Server error: -32000. KBaseReport parameter validation errors:\n{u'direct_html_index': ['unknown field']}You parameters were:\n{u'direct_html': u'',\n u'direct_html_index': 0,\n u'direct_html_link_index': 0,\n u'file_links': [],\n u'html_links': [{u'label': u'small.forward.fq_reads2_trimmed HTML',\n                  u'name': u'small.forward.fq_reads2_trimmed.html',\n                  u'shock_id': u'60da8abf-899d-424a-bc4a-c5cb8438c2cf'}],\n u'html_window_height': 220,\n u'message': u'',\n u'objects_created': [{u'description': u'Trimmed Reads',\n                       u'ref': u'25022/17/1'}],\n u'report_object_name': u'kb_trimmomatic_report_697301aa-f62d-42db-88e0-1fa400c161a5',\n u'workspace_name': u'wjriehl:narrative_1502225097649'}\nTraceback (most recent call last):\n  File \"/kb/module/bin/../lib/KBaseReport/KBaseReportServer.py\", line 95, in _call_method\n    result = method(ctx, *params)\n  File \"/kb/module/lib/KBaseReport/KBaseReportImpl.py\", line 196, in create_extended_report\n    params = validate_extended_report_params(params)\n  File \"/kb/module/lib/KBaseReport/utils/validation_utils.py\", line 76, in validate_extended_report_params\n    raise TypeError(_format_errors(validator.errors, params))\nTypeError: KBaseReport parameter validation errors:\n{u'direct_html_index': ['unknown field']}You parameters were:\n{u'direct_html': u'',\n u'direct_html_index': 0,\n u'direct_html_link_index': 0,\n u'file_links': [],\n u'html_links': [{u'label': u'small.forward.fq_reads2_trimmed HTML',\n                  u'name': u'small.forward.fq_reads2_trimmed.html',\n                  u'shock_id': u'60da8abf-899d-424a-bc4a-c5cb8438c2cf'}],\n u'html_window_height': 220,\n u'message': u'',\n u'objects_created': [{u'description': u'Trimmed Reads',\n                       u'ref': u'25022/17/1'}],\n u'report_object_name': u'kb_trimmomatic_report_697301aa-f62d-42db-88e0-1fa400c161a5',\n u'workspace_name': u'wjriehl:narrative_1502225097649'}\n\n",
                                        "message": "KBaseReport parameter validation errors:\n{u'direct_html_index': ['unknown field']}You parameters were:\n{u'direct_html': u'',\n u'direct_html_index': 0,\n u'direct_html_link_index': 0,\n u'file_links': [],\n u'html_links': [{u'label': u'small.forward.fq_reads2_trimmed HTML',\n                  u'name': u'small.forward.fq_reads2_trimmed.html',\n                  u'shock_id': u'60da8abf-899d-424a-bc4a-c5cb8438c2cf'}],\n u'html_window_height': 220,\n u'message': u'',\n u'objects_created': [{u'description': u'Trimmed Reads',\n                       u'ref': u'25022/17/1'}],\n u'report_object_name': u'kb_trimmomatic_report_697301aa-f62d-42db-88e0-1fa400c161a5',\n u'workspace_name': u'wjriehl:narrative_1502225097649'}",
                                        "name": "Server error"
                                    },
                                    "exec_start_time": 1544467196102,
                                    "finish_time": 1544467293702,
                                    "finished": 1,
                                    "job_id": "5c0eb2dde4b0028b4add7097",
                                    "job_state": "suspend",
                                    "run_id": "f6848da5-9273-4424-97e5-374485908675",
                                    "status": [
                                        "2018-12-10T18:41:33+0000",
                                        "error",
                                        "KBaseReport parameter validation errors:\n{u'direct_html_index': ['unknown field']}You parameters were:\n{u'direct_html': u'',\n u'direct_html_index': 0,\n u'direct_html_link_index': 0,\n u'file_links':...",
                                        null,
                                        null,
                                        1,
                                        1
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1549049151930,
                                "launchState": {
                                    "cell_id": "d4566711-419b-47cc-b146-be53e276ed37",
                                    "event": "launched_job",
                                    "event_at": "2018-12-10T18:39:31.986995Z",
                                    "job_id": "5c0eb2dde4b0028b4add7097",
                                    "run_id": "f6848da5-9273-4424-97e5-374485908675"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "error",
                                    "stage": "running"
                                }
                            },
                            "newAppName": "Trim Reads with Trimmomatic - v0.36",
                            "outdated": true,
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "adapter_clip": null,
                                "crop_length": null,
                                "head_crop_length": 0,
                                "input_reads_ref": "small.forward.fq_reads2",
                                "leading_min_quality": 3,
                                "min_length": 36,
                                "output_reads_name": "small.forward.fq_reads2_trimmed",
                                "sliding_window": {
                                    "sliding_window_min_quality": 15,
                                    "sliding_window_size": 4
                                },
                                "trailing_min_quality": 3,
                                "translate_to_phred33": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 10 Dec 2018 18:37:00 GMT",
                            "id": "d4566711-419b-47cc-b146-be53e276ed37",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_trimmomatic/run_trimmomatic/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Trim paired- or single-end Illumina reads with Trimmomatic.",
                            "title": "Trimmomatic - Read Trimming - v0.36"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_trimmomatic/run_trimmomatic\",\n    {\n        \"input_reads_ref\": \"small.forward.fq_reads2\",\n        \"output_reads_name\": \"small.forward.fq_reads2_trimmed\",\n        \"translate_to_phred33\": \"1\",\n        \"adapter_clip\": None,\n        \"sliding_window\": {\n            \"sliding_window_size\": 4,\n            \"sliding_window_min_quality\": 15\n        },\n        \"crop_length\": None,\n        \"head_crop_length\": 0,\n        \"leading_min_quality\": 3,\n        \"trailing_min_quality\": 3,\n        \"min_length\": 36\n    },\n    tag=\"release\",\n    version=\"1.2.9\",\n    cell_id=\"d4566711-419b-47cc-b146-be53e276ed37\",\n    run_id=\"f6848da5-9273-4424-97e5-374485908675\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "1a4bad9a-7eb3-46ad-b65b-220671cea76a",
                                    "child_jobs": [],
                                    "creation_time": 1551811334135,
                                    "exec_start_time": 1551811354793,
                                    "finish_time": 1551811875724,
                                    "finished": 1,
                                    "job_id": "5c7ec2ff279b8f28b2bcd8ad",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_checkM_report_6c83cbf9-e6ff-4cad-a39d-aae13010425f",
                                            "report_ref": "25022/19/1"
                                        }
                                    ],
                                    "run_id": "fa33d0ee-723f-46b3-a974-919b80a0d014",
                                    "status": [
                                        "2019-03-05T18:51:15+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1553024137762,
                                "launchState": {
                                    "cell_id": "1a4bad9a-7eb3-46ad-b65b-220671cea76a",
                                    "event": "launched_job",
                                    "event_at": "2019-03-05T18:42:11.179139Z",
                                    "job_id": "5c7ec2ff279b8f28b2bcd8ad",
                                    "run_id": "fa33d0ee-723f-46b3-a974-919b80a0d014"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_checkM_report_6c83cbf9-e6ff-4cad-a39d-aae13010425f",
                                        "report_ref": "25022/19/1",
                                        "report_window_line_height": "36"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c7d7584279b8f28b2bcd887": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 05 Mar 2019 18:41:32 GMT",
                                        "params": {
                                            "input_ref": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                            "reduced_tree": "1",
                                            "save_all_plots": "1"
                                        }
                                    },
                                    "5c7ec2ff279b8f28b2bcd8ad": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Tue, 19 Mar 2019 19:35:37 GMT",
                                        "params": {
                                            "input_ref": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                            "reduced_tree": "1",
                                            "save_all_plots": "1"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_ref": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Mon, 04 Mar 2019 18:59:08 GMT",
                            "id": "1a4bad9a-7eb3-46ad-b65b-220671cea76a",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"1a4bad9a-7eb3-46ad-b65b-220671cea76a\",\n    run_id=\"fa33d0ee-723f-46b3-a974-919b80a0d014\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                "id": "kb_Msuite/run_checkM_lineage_wf",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_ref",
                                                "target_property": "input_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "reduced_tree",
                                                "target_property": "reduced_tree"
                                            },
                                            {
                                                "input_parameter": "save_all_plots",
                                                "target_property": "save_plots_dir"
                                            }
                                        ],
                                        "kb_service_method": "run_checkM_lineage_wf",
                                        "kb_service_name": "kb_Msuite",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "36",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan",
                                            "qzhang",
                                            "msneddon",
                                            "dparks"
                                        ],
                                        "categories": [
                                            "active",
                                            "communities",
                                            "assembly"
                                        ],
                                        "git_commit_hash": "4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a",
                                        "icon": {
                                            "url": "img?method_id=kb_Msuite/run_checkM_lineage_wf&image_name=checkm-green.png&tag=release"
                                        },
                                        "id": "kb_Msuite/run_checkM_lineage_wf",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseMetagenomes.BinnedContigs",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.AssemblySet"
                                        ],
                                        "module_name": "kb_Msuite",
                                        "name": "Assess Genome Quality with CheckM - v1.0.8",
                                        "namespace": "kb_Msuite",
                                        "output_types": [],
                                        "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "tooltip": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assess the genome quality based on sequence in an Assembly, AssemblySet, Genome, GenomeSet, or in each bin of BinnedContig data.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_ref",
                                            "optional": 0,
                                            "short_hint": "Input can be an Assembly, AssemblySet, Genome, GenomeSet, or BinnedContigs object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMetagenomes.BinnedContigs",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseSets.AssemblySet",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input Assembly, Genome, or BinnedContigs"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "reduced tree",
                                                        "index": 0,
                                                        "value": "1"
                                                    },
                                                    {
                                                        "display": "full tree",
                                                        "index": 1,
                                                        "value": "0"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "reduced_tree",
                                            "optional": 0,
                                            "short_hint": "Reduced tree is faster, full tree may offer improved performance",
                                            "ui_class": "parameter",
                                            "ui_name": "Reference Tree"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "discard",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "save",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_all_plots",
                                            "optional": 0,
                                            "short_hint": "If selected, creates a downloadable zip file of all the generated plots",
                                            "ui_class": "parameter",
                                            "ui_name": "Save all plots"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "40a212fd-8c88-4792-990d-b22170362950",
                                    "child_jobs": [],
                                    "creation_time": 1553297283256,
                                    "exec_start_time": 1553297304038,
                                    "finish_time": 1553297862709,
                                    "finished": 1,
                                    "job_id": "5c956f7a279b8f28b2bcd981",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_checkM_report_09f8c877-401c-4350-bef4-98c7f4e8bc2f",
                                            "report_ref": "25022/20/1"
                                        }
                                    ],
                                    "run_id": "c7760d45-c54b-4e2b-8c6f-588829e26d8f",
                                    "status": [
                                        "2019-03-22T23:37:42+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1560372731228,
                                "launchState": {
                                    "cell_id": "40a212fd-8c88-4792-990d-b22170362950",
                                    "event": "launched_job",
                                    "event_at": "2019-03-22T23:28:03.296038Z",
                                    "job_id": "5c956f7a279b8f28b2bcd981",
                                    "run_id": "c7760d45-c54b-4e2b-8c6f-588829e26d8f"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_checkM_report_09f8c877-401c-4350-bef4-98c7f4e8bc2f",
                                        "report_ref": "25022/20/1",
                                        "report_window_line_height": "36"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c956f7a279b8f28b2bcd981": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Wed, 12 Jun 2019 20:52:11 GMT",
                                        "params": {
                                            "input_ref": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                            "reduced_tree": "1",
                                            "save_all_plots": "1"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_ref": "Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly",
                                "reduced_tree": "1",
                                "save_all_plots": "1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 22 Mar 2019 22:37:19 GMT",
                            "id": "40a212fd-8c88-4792-990d-b22170362950",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_Msuite/run_checkM_lineage_wf/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Runs the CheckM lineage workflow to assess the genome quality of isolates, single cells, or genome bins from metagenome assemblies",
                            "title": "Assess Genome Quality with CheckM - v1.0.8"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_Msuite/run_checkM_lineage_wf\",\n    {\n        \"input_ref\": \"Desulfovibrio_vulgaris_Hildenborough_C1.fasta_assembly\",\n        \"reduced_tree\": \"1\",\n        \"save_all_plots\": \"1\"\n    },\n    tag=\"release\",\n    version=\"1.2.2\",\n    cell_id=\"40a212fd-8c88-4792-990d-b22170362950\",\n    run_id=\"c7760d45-c54b-4e2b-8c6f-588829e26d8f\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 22 Mar 2019 22:56:48 GMT",
                            "icon": "code",
                            "id": "70c5c7ed-4095-4e76-b2cc-668ce23eb34c",
                            "lastLoaded": "Fri, 22 Mar 2019 22:56:48 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/html": "\n            <table class=\"table table-bordered table-striped table-condensed\">\n                <tr>\n                    <th>Id</th>\n                    <th>Name</th>\n                    <th>Submitted</th>\n                    <th>Submitted By</th>\n                    <th>Status</th>\n                    <th>Run Time</th>\n                    <th>Complete Time</th>\n                </tr>\n                \n                <tr>\n                    <td>5a611ef4e4b0948e9dd05f58</td>\n                    <td>kb_uploadmethods/import_fastq_sra_as_reads_from_staging</td>\n                    <td>2018-01-18 22:25:56</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:36</td>\n                    <td>2018-01-18 22:26:38</td>\n                </tr>\n                \n                <tr>\n                    <td>5a612218e4b0948e9dd05f59</td>\n                    <td>kb_uploadmethods/import_fastq_sra_as_reads_from_staging</td>\n                    <td>2018-01-18 22:39:21</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:28</td>\n                    <td>2018-01-18 22:39:54</td>\n                </tr>\n                \n                <tr>\n                    <td>5a612587e4b0948e9dd05f5c</td>\n                    <td>kb_uploadmethods/import_fasta_as_assembly_from_staging</td>\n                    <td>2018-01-18 22:53:59</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:29</td>\n                    <td>2018-01-18 22:54:35</td>\n                </tr>\n                \n                <tr>\n                    <td>5a613c20e4b0948e9dd05f5d</td>\n                    <td>kb_uploadmethods/import_fasta_as_assembly_from_staging</td>\n                    <td>2018-01-19 00:30:25</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:37</td>\n                    <td>2018-01-19 00:31:05</td>\n                </tr>\n                \n                <tr>\n                    <td>5a66172ae4b0ace8f870f559</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 16:54:02</td>\n                    <td>wjriehl</td>\n                    <td>suspend</td>\n                    <td>0:00:08</td>\n                    <td>2018-01-22 16:54:13</td>\n                </tr>\n                \n                <tr>\n                    <td>5a6617c5e4b0ace8f870f55a</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 16:56:37</td>\n                    <td>wjriehl</td>\n                    <td>suspend</td>\n                    <td>0:00:08</td>\n                    <td>2018-01-22 16:56:50</td>\n                </tr>\n                \n                <tr>\n                    <td>5a661835e4b0ace8f870f55b</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 16:58:29</td>\n                    <td>wjriehl</td>\n                    <td>suspend</td>\n                    <td>0:00:37</td>\n                    <td>2018-01-22 16:59:10</td>\n                </tr>\n                \n                <tr>\n                    <td>5a663784e4b0ace8f870f564</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 19:12:04</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:34</td>\n                    <td>2018-01-22 19:12:43</td>\n                </tr>\n                \n                <tr>\n                    <td>5a663afde4b0ace8f870f565</td>\n                    <td>eapearson_TestRichReports/generate_report</td>\n                    <td>2018-01-22 19:26:53</td>\n                    <td>wjriehl</td>\n                    <td>suspend</td>\n                    <td>0:00:15</td>\n                    <td>2018-01-22 19:27:13</td>\n                </tr>\n                \n                <tr>\n                    <td>5a6646fce4b0ace8f870f567</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 20:18:04</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:48</td>\n                    <td>2018-01-22 20:18:56</td>\n                </tr>\n                \n                <tr>\n                    <td>5a664b62e4b0ace8f870f568</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 20:36:50</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:28</td>\n                    <td>2018-01-22 20:37:21</td>\n                </tr>\n                \n                <tr>\n                    <td>5a664c1ce4b0ace8f870f569</td>\n                    <td>NarrativeTest/report_example</td>\n                    <td>2018-01-22 20:39:56</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:28</td>\n                    <td>2018-01-22 20:40:29</td>\n                </tr>\n                \n                <tr>\n                    <td>5c0eb2dde4b0028b4add7097</td>\n                    <td>kb_trimmomatic/run_trimmomatic</td>\n                    <td>2018-12-10 18:39:31</td>\n                    <td>wjriehl</td>\n                    <td>suspend</td>\n                    <td>0:01:37</td>\n                    <td>2018-12-10 18:41:33</td>\n                </tr>\n                \n                <tr>\n                    <td>5c7d7584279b8f28b2bcd887</td>\n                    <td>kb_Msuite/run_checkM_lineage_wf</td>\n                    <td>2019-03-04 18:59:22</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:09:38</td>\n                    <td>2019-03-04 19:09:25</td>\n                </tr>\n                \n                <tr>\n                    <td>5c7ec2ff279b8f28b2bcd8ad</td>\n                    <td>kb_Msuite/run_checkM_lineage_wf</td>\n                    <td>2019-03-05 18:42:14</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:08:40</td>\n                    <td>2019-03-05 18:51:15</td>\n                </tr>\n                \n                <tr>\n                    <td>5c9144e2279b8f28b2bcd958</td>\n                    <td>NarrativeTest/introspect_job</td>\n                    <td>2019-03-19 19:37:15</td>\n                    <td>wjriehl</td>\n                    <td>completed</td>\n                    <td>0:00:11</td>\n                    <td>2019-03-19 20:17:27</td>\n                </tr>\n                \n                <tr>\n                    <td>5c9563b3279b8f28b2bcd97f</td>\n                    <td>kb_Msuite/run_checkM_lineage_wf</td>\n                    <td>2019-03-22 22:37:48</td>\n                    <td>wjriehl</td>\n                    <td>queued</td>\n                    <td>Not started</td>\n                    <td>Incomplete</td>\n                </tr>\n                \n            </table>\n            ",
                            "text/plain": "<IPython.core.display.HTML object>"
                        },
                        "execution_count": 3,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "JobManager().list_jobs()"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 23 Jul 2019 21:41:25 GMT",
                            "icon": "code",
                            "id": "7088b27e-0195-4f7a-9aea-76e3bcc90853",
                            "lastLoaded": "Tue, 23 Jul 2019 21:41:25 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "ws = biokbase.narrative.clients.get('workspace')"
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 23 Jul 2019 21:41:44 GMT",
                            "icon": "code",
                            "id": "c11df78f-8fbd-43ae-9ff7-1ac4f33c3dca",
                            "lastLoaded": "Tue, 23 Jul 2019 21:41:44 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'infos': [[29,\n   u'rhodo.art.jgi.reads',\n   u'KBaseFile.PairedEndLibrary-2.0',\n   u'2019-07-23T22:42:44+0000',\n   4,\n   u'wjriehl',\n   25022,\n   u'wjriehl:narrative_1502225097649',\n   u'de8a03fefb60abe573225cf03a42887b',\n   542,\n   {u'read_count': u'386108',\n    u'read_size': u'100',\n    u'sequencing_tech': u'Illumina',\n    u'source.project_id': u'9000009',\n    u'source.source': u'JGI',\n    u'source.source_id': u'91eec603067c014b2c664ec9',\n    u'strain.genus': u'Rhodobacter',\n    u'strain.species': u'sp.',\n    u'strain.strain': u'CACIA14H1'}],\n  [28,\n   u'rhodobacter.art.q10.PE.reads',\n   u'KBaseFile.PairedEndLibrary-2.0',\n   u'2019-07-23T22:42:43+0000',\n   1,\n   u'wjriehl',\n   25022,\n   u'wjriehl:narrative_1502225097649',\n   u'997a75309bf763aad577df56cad4bfd9',\n   746,\n   {u'sequencing_tech': u'Illumina', u'single_genome': u'1'}]],\n u'paths': [[u'25022/29/4'], [u'25022/28/1']]}"
                        },
                        "execution_count": 4,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "ws.get_object_info3({\"objects\": [{\"ref\": \"25022/29\"}, {\"ref\": \"25022/28\"}], \"includeMetadata\": 1})"
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "4c0579bec5aa606f5e42cf29d920872d34ea5b52",
                                "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "import_type",
                                                "target_property": "import_type"
                                            },
                                            {
                                                "input_parameter": "fastq_fwd_staging_file_name",
                                                "target_property": "fastq_fwd_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "fastq_rev_staging_file_name",
                                                "target_property": "fastq_rev_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sra_staging_file_name",
                                                "target_property": "sra_staging_file_name"
                                            },
                                            {
                                                "input_parameter": "sequencing_tech",
                                                "target_property": "sequencing_tech"
                                            },
                                            {
                                                "input_parameter": "name",
                                                "target_property": "name"
                                            },
                                            {
                                                "input_parameter": "single_genome",
                                                "target_property": "single_genome"
                                            },
                                            {
                                                "input_parameter": "interleaved",
                                                "target_property": "interleaved"
                                            },
                                            {
                                                "input_parameter": "insert_size_mean",
                                                "target_property": "insert_size_mean"
                                            },
                                            {
                                                "input_parameter": "insert_size_std_dev",
                                                "target_property": "insert_size_std_dev"
                                            },
                                            {
                                                "input_parameter": "read_orientation_outward",
                                                "target_property": "read_orientation_outward"
                                            }
                                        ],
                                        "kb_service_method": "import_reads_from_staging",
                                        "kb_service_name": "kb_uploadmethods",
                                        "kb_service_output_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "wsName"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "obj_ref"
                                                ],
                                                "target_property": "obj_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "4c0579bec5aa606f5e42cf29d920872d34ea5b52"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "tgu2"
                                        ],
                                        "categories": [
                                            "inactive",
                                            "reads",
                                            "upload"
                                        ],
                                        "git_commit_hash": "4c0579bec5aa606f5e42cf29d920872d34ea5b52",
                                        "icon": {
                                            "url": "img?method_id=kb_uploadmethods/import_fastq_sra_as_reads_from_staging&image_name=data-pink.png&tag=release"
                                        },
                                        "id": "kb_uploadmethods/import_fastq_sra_as_reads_from_staging",
                                        "input_types": [],
                                        "module_name": "kb_uploadmethods",
                                        "name": "Import FASTQ/SRA File as Reads from Staging Area",
                                        "namespace": "kb_uploadmethods",
                                        "output_types": [],
                                        "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "tooltip": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                                        "ver": "1.0.29"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "FASTQ/FASTA"
                                            ],
                                            "description": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "FASTQ/FASTA",
                                                        "index": 0,
                                                        "value": "FASTQ/FASTA"
                                                    },
                                                    {
                                                        "display": "SRA",
                                                        "index": 1,
                                                        "value": "SRA"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "import_type",
                                            "optional": 0,
                                            "short_hint": "Import file type ['FASTQ/FASTA' or 'SRA']",
                                            "ui_class": "parameter",
                                            "ui_name": "Import File Type"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "ftp_staging",
                                                "multiselection": 0,
                                                "service_params": null
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "fastq_fwd_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Short read file containing a paired end library in FASTA/FASTQ format",
                                            "ui_class": "parameter",
                                            "ui_name": "Forward/Left FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Valid file extensions for FASTA: .fasta, .fna, .fa   Valid file extensions for FASTQ: .fastq, .fnq, .fq; Compressed files (containing files with vaild extentions): .zip, .gz, .bz2, .tar.gz, .tar.bz2",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "ftp_staging",
                                                "multiselection": 0,
                                                "service_params": null
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "fastq_rev_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "Second short read file containing a paired end library in FASTA/FASTQ format.",
                                            "ui_class": "parameter",
                                            "ui_name": "Reverse/Right FASTA/FASTQ File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "SRA staing file path",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "ftp_staging",
                                                "multiselection": 0,
                                                "service_params": null
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "sra_staging_file_name",
                                            "optional": 1,
                                            "short_hint": "SRA staing file path",
                                            "ui_class": "parameter",
                                            "ui_name": "SRA File Path"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "Illumina"
                                            ],
                                            "description": "The name of the sequencing technology used to create the reads file",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Illumina",
                                                        "index": 0,
                                                        "value": "Illumina"
                                                    },
                                                    {
                                                        "display": "PacBio CLR",
                                                        "index": 1,
                                                        "value": "PacBio CLR"
                                                    },
                                                    {
                                                        "display": "PacBio CCS",
                                                        "index": 2,
                                                        "value": "PacBio CCS"
                                                    },
                                                    {
                                                        "display": "IonTorrent",
                                                        "index": 3,
                                                        "value": "IonTorrent"
                                                    },
                                                    {
                                                        "display": "NanoPore",
                                                        "index": 4,
                                                        "value": "NanoPore"
                                                    },
                                                    {
                                                        "display": "Unknown",
                                                        "index": 5,
                                                        "value": "Unknown"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "sequencing_tech",
                                            "optional": 0,
                                            "short_hint": "The name of the sequencing technology used to create the reads file",
                                            "ui_class": "parameter",
                                            "ui_name": "Sequencing Technology"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Provide a name for the Reads object that will be created by this importer",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "name",
                                            "optional": 0,
                                            "short_hint": "Provide a name for the Reads object that will be created by this importer",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Object Name"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_genome",
                                            "optional": 0,
                                            "short_hint": "Select if the reads are from a single genome, leave blank if from a metagenome",
                                            "ui_class": "parameter",
                                            "ui_name": "Single Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads file is interleaved",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "interleaved",
                                            "optional": 0,
                                            "short_hint": "Select if reads file is interleaved",
                                            "ui_class": "parameter",
                                            "ui_name": "Interleaved"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Select if reads in a pair point outward",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "read_orientation_outward",
                                            "optional": 1,
                                            "short_hint": "Select if reads in a pair point outward",
                                            "ui_class": "parameter",
                                            "ui_name": "Reads Orientation Outward"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The standard deviation of insert lengths",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_std_dev",
                                            "optional": 1,
                                            "short_hint": "The standard deviation of insert lengths",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "St. Dev. of Insert Size"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The mean (average) insert length",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "insert_size_mean",
                                            "optional": 1,
                                            "short_hint": "The mean (average) insert length",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Mean Insert Size"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.0.29"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "5d033bfc-1c0b-4b9e-9aef-dff552215c79",
                                    "child_jobs": [],
                                    "creation_time": 1563921958108,
                                    "exec_start_time": 1563921971599,
                                    "finish_time": 1563922461657,
                                    "finished": 1,
                                    "job_id": "5d378e1daa5a4d298c5dc668",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "obj_ref": "25022/30/1",
                                            "report_name": "kb_sra_upload_report_fdf10dfe-4c80-4515-923a-263556c8f3e9",
                                            "report_ref": "25022/31/1"
                                        }
                                    ],
                                    "run_id": "ac1e8352-248d-4aaa-bdd9-76ef80fbac91",
                                    "status": [
                                        "2019-07-23T22:54:21+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1564172241138,
                                "launchState": {
                                    "cell_id": "5d033bfc-1c0b-4b9e-9aef-dff552215c79",
                                    "event": "launched_job",
                                    "event_at": "2019-07-23T22:45:58.215253Z",
                                    "job_id": "5d378e1daa5a4d298c5dc668",
                                    "run_id": "ac1e8352-248d-4aaa-bdd9-76ef80fbac91"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "obj_ref": "25022/30/1",
                                        "report_name": "kb_sra_upload_report_fdf10dfe-4c80-4515-923a-263556c8f3e9",
                                        "report_ref": "25022/31/1",
                                        "report_window_line_height": "16",
                                        "wsName": "wjriehl:narrative_1502225097649"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Import FASTQ/SRA File as Reads from Staging Area",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5d378e1daa5a4d298c5dc668": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 26 Jul 2019 20:17:21 GMT",
                                        "params": {
                                            "fastq_fwd_staging_file_name": "small.forward.fq",
                                            "fastq_rev_staging_file_name": "small.reverse.fq",
                                            "import_type": "FASTQ/FASTA",
                                            "insert_size_mean": null,
                                            "insert_size_std_dev": null,
                                            "interleaved": 1,
                                            "name": "small_pe_reads",
                                            "read_orientation_outward": 0,
                                            "sequencing_tech": "Illumina",
                                            "single_genome": 1,
                                            "sra_staging_file_name": ""
                                        }
                                    }
                                }
                            },
                            "params": {
                                "fastq_fwd_staging_file_name": "small.forward.fq",
                                "fastq_rev_staging_file_name": "small.reverse.fq",
                                "import_type": "FASTQ/FASTA",
                                "insert_size_mean": null,
                                "insert_size_std_dev": null,
                                "interleaved": 1,
                                "name": "small_pe_reads",
                                "read_orientation_outward": 0,
                                "sequencing_tech": "Illumina",
                                "single_genome": 1,
                                "sra_staging_file_name": ""
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 23 Jul 2019 22:45:09 GMT",
                            "id": "5d033bfc-1c0b-4b9e-9aef-dff552215c79",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_uploadmethods/import_fastq_sra_as_reads_from_staging/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Import a FASTQ/SRA file into your Narrative as a Reads data object",
                            "title": "Import FASTQ/SRA File as Reads from Staging Area"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_uploadmethods/import_fastq_sra_as_reads_from_staging\",\n    {\n        \"import_type\": \"FASTQ/FASTA\",\n        \"fastq_fwd_staging_file_name\": \"small.forward.fq\",\n        \"fastq_rev_staging_file_name\": \"small.reverse.fq\",\n        \"sra_staging_file_name\": \"\",\n        \"sequencing_tech\": \"Illumina\",\n        \"name\": \"small_pe_reads\",\n        \"single_genome\": 1,\n        \"interleaved\": 1,\n        \"read_orientation_outward\": 0,\n        \"insert_size_std_dev\": None,\n        \"insert_size_mean\": None\n    },\n    tag=\"release\",\n    version=\"1.0.29\",\n    cell_id=\"5d033bfc-1c0b-4b9e-9aef-dff552215c79\",\n    run_id=\"ac1e8352-248d-4aaa-bdd9-76ef80fbac91\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "e0a0f9df50bb6765db40f6949b18c7a016610801",
                                "id": "kb_SPAdes/run_metaSPAdes",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "read_libraries",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "output_contigset_name"
                                            },
                                            {
                                                "input_parameter": "min_contig_length",
                                                "target_property": "min_contig_length"
                                            },
                                            {
                                                "input_parameter": "kmer_sizes",
                                                "target_property": "kmer_sizes"
                                            },
                                            {
                                                "input_parameter": "skip_error_correction",
                                                "target_property": "skip_error_correction"
                                            },
                                            {
                                                "constant_value": "metagenomic",
                                                "target_property": "dna_source"
                                            }
                                        ],
                                        "kb_service_method": "run_metaSPAdes",
                                        "kb_service_name": "kb_SPAdes",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "SPAdes_result"
                                            },
                                            {
                                                "input_parameter": "read_libraries",
                                                "target_property": "input_read_libraries"
                                            },
                                            {
                                                "input_parameter": "output_contigset_name",
                                                "target_property": "input_output_contigset_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "e0a0f9df50bb6765db40f6949b18c7a016610801"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "gaprice",
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "assembly",
                                            "communities"
                                        ],
                                        "git_commit_hash": "e0a0f9df50bb6765db40f6949b18c7a016610801",
                                        "icon": {
                                            "url": "img?method_id=kb_SPAdes/run_metaSPAdes&image_name=metaspades-blue.png&tag=release"
                                        },
                                        "id": "kb_SPAdes/run_metaSPAdes",
                                        "input_types": [
                                            "KBaseAssembly.PairedEndLibrary",
                                            "KBaseFile.PairedEndLibrary"
                                        ],
                                        "module_name": "kb_SPAdes",
                                        "name": "Assemble with metaSPAdes - v3.12.0",
                                        "namespace": "kb_SPAdes",
                                        "output_types": [
                                            "KBaseGenomeAnnotations.Assembly"
                                        ],
                                        "subtitle": "Assemble metagenomic reads using the SPAdes assembler.",
                                        "tooltip": "Assemble metagenomic reads using the SPAdes assembler.",
                                        "ver": "1.2.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "read_libraries",
                                            "optional": 0,
                                            "short_hint": "The libraries of reads to be assembled",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFile.PairedEndLibrary",
                                                    "KBaseAssembly.PairedEndLibrary"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Read library"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "SPAdes.contigs"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_contigset_name",
                                            "optional": 0,
                                            "short_hint": "The name under which the resulting ContigSet will be saved in the Narrative",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Assembly"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output ContigSet"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "2000"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "min_contig_length",
                                            "optional": 0,
                                            "short_hint": "The shortest contig to accept in the resulting assembly object",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 300,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum Contig Length"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                "33",
                                                "55",
                                                "77",
                                                "99",
                                                "127"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "kmer_sizes",
                                            "optional": 1,
                                            "short_hint": "K-mer sizes, Default values: 33, 55, 77, 99, 127 (all values must be odd, less than 128 and\nlisted in ascending order). In the absence of these values, K values are automatically selected.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "K-mer Sizes"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "skip_error_correction",
                                            "optional": 1,
                                            "short_hint": "Assembly only (No Error Correction)",
                                            "ui_class": "parameter",
                                            "ui_name": "Assembly only (No Error Correction)"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "release",
                                "version": "1.2.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "editing",
                                    "params": "incomplete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "kmer_sizes": [],
                                "min_contig_length": 2000,
                                "output_contigset_name": "SPAdes.contigs",
                                "read_libraries": null,
                                "skip_error_correction": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 23 Jul 2019 22:36:26 GMT",
                            "id": "4768261b-0e49-4e67-b236-b2d69460885e",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_SPAdes/run_metaSPAdes/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Assemble metagenomic reads using the SPAdes assembler.",
                            "title": "Assemble with metaSPAdes - v3.12.0"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": ""
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 23 Jul 2019 21:42:18 GMT",
                            "icon": "code",
                            "id": "5047490e-3820-4986-bcfe-5bc9543164f0",
                            "lastLoaded": "Tue, 23 Jul 2019 21:42:18 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": ""
            },
            {
                "cell_type": "code",
                "execution_count": 5,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "f6f8088e846831fc94a0b0806d7a769dfaccf836",
                                "id": "fba_tools/edit_media",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "compounds_to_add",
                                                "target_property": "compounds_to_add"
                                            },
                                            {
                                                "input_parameter": "compounds_to_change",
                                                "target_property": "compounds_to_change"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "media_output_id",
                                                "target_property": "media_output_id"
                                            },
                                            {
                                                "input_parameter": "compounds_to_remove",
                                                "target_property": "compounds_to_remove"
                                            },
                                            {
                                                "input_parameter": "pH_data",
                                                "target_property": "pH_data"
                                            },
                                            {
                                                "input_parameter": "temperature",
                                                "target_property": "temperature"
                                            },
                                            {
                                                "input_parameter": "isDefined",
                                                "target_property": "isDefined"
                                            },
                                            {
                                                "input_parameter": "type",
                                                "target_property": "type"
                                            }
                                        ],
                                        "kb_service_method": "edit_media",
                                        "kb_service_name": "fba_tools",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "constant_value": "KBaseBiochem.Media",
                                                "target_property": "type"
                                            },
                                            {
                                                "input_parameter": "media_output_id",
                                                "target_property": "obj"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "f6f8088e846831fc94a0b0806d7a769dfaccf836"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry@mcs.anl.gov"
                                        ],
                                        "categories": [
                                            "active",
                                            "metabolic_modeling"
                                        ],
                                        "git_commit_hash": "f6f8088e846831fc94a0b0806d7a769dfaccf836",
                                        "id": "fba_tools/edit_media",
                                        "input_types": [
                                            "KBaseBiochem.Media"
                                        ],
                                        "module_name": "fba_tools",
                                        "name": "Edit Media",
                                        "namespace": "fba_tools",
                                        "output_types": [
                                            "KBaseBiochem.Media"
                                        ],
                                        "subtitle": "Edit an existing media formulation.",
                                        "tooltip": "Edit an existing media formulation.",
                                        "ver": "1.7.5"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "",
                                            "id": "compounds_to_change",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "change_id",
                                                "change_concentration",
                                                "change_minflux",
                                                "change_maxflux"
                                            ],
                                            "short_hint": "Compounds to change in media",
                                            "ui_name": "Compounds to change in media",
                                            "with_border": 0
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "",
                                            "id": "compounds_to_add",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "add_id",
                                                "add_concentration",
                                                "add_minflux",
                                                "add_maxflux"
                                            ],
                                            "short_hint": "Compounds to add to media",
                                            "ui_name": "Compounds to add to media",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_id",
                                            "optional": 0,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Media to edit"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_output_id",
                                            "optional": 0,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output media ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "ID of compound to change",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "change_id",
                                            "optional": 1,
                                            "short_hint": "ID of compound to change",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "parameter_id": "media_id",
                                                    "path_to_subdata": [
                                                        "mediacompounds"
                                                    ],
                                                    "selection_id": "compound_ref",
                                                    "subdata_included": [
                                                        "mediacompounds/[*]/compound_ref"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compound ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Compounds to remove",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "compounds_to_remove",
                                            "optional": 1,
                                            "short_hint": "Compounds to remove",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "parameter_id": "media_id",
                                                    "path_to_subdata": [
                                                        "mediacompounds"
                                                    ],
                                                    "selection_id": "compound_ref",
                                                    "subdata_included": [
                                                        "mediacompounds/[*]/compound_ref"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compounds to remove"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.001"
                                            ],
                                            "description": "Concentration in mmol",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_concentration",
                                            "optional": 1,
                                            "short_hint": "Concentration in mmol",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Concentration"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "-100"
                                            ],
                                            "description": "Min flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_minflux",
                                            "optional": 1,
                                            "short_hint": "Min flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "100"
                                            ],
                                            "description": "Max flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_maxflux",
                                            "optional": 1,
                                            "short_hint": "Max flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Max flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "ID of compound to add",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_id",
                                            "optional": 0,
                                            "short_hint": "ID of compound to add",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compound ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.001"
                                            ],
                                            "description": "Concentration in mmol",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_concentration",
                                            "optional": 0,
                                            "short_hint": "Concentration in mmol",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Concentration"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "-100"
                                            ],
                                            "description": "Min flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_minflux",
                                            "optional": 0,
                                            "short_hint": "Min flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "100"
                                            ],
                                            "description": "Max flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_maxflux",
                                            "optional": 0,
                                            "short_hint": "Max flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Max flux"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "pH of media",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "pH_data",
                                            "optional": 1,
                                            "short_hint": "pH of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "pH"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Temperature of media",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "temperature",
                                            "optional": 1,
                                            "short_hint": "Temperature of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Temperature"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "unknown"
                                            ],
                                            "description": "Type of media",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Unknown",
                                                        "index": 0,
                                                        "value": "unknown"
                                                    },
                                                    {
                                                        "display": "Biolog",
                                                        "index": 1,
                                                        "value": "biolog"
                                                    },
                                                    {
                                                        "display": "Undefined",
                                                        "index": 2,
                                                        "value": "undefined"
                                                    },
                                                    {
                                                        "display": "Defined",
                                                        "index": 3,
                                                        "value": "defined"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "type",
                                            "optional": 1,
                                            "short_hint": "Type of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Type of media"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Check if media is defined",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "isDefined",
                                            "optional": 0,
                                            "short_hint": "Check if media is defined",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Defined media"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTabTable"
                                    }
                                },
                                "tag": "release",
                                "version": "1.7.5"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "86540c7d-41e8-4273-b773-c9f31719312f",
                                    "child_jobs": [],
                                    "creation_time": 1568141910051,
                                    "error": {
                                        "code": -32603,
                                        "error": "Can't use string (\"123b993e-d3fd-11e9-9019-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use at /kb/module/bin/../lib/KBaseReport/KBaseReportClient.pm line 451.\n",
                                        "message": "Can't use string (\"123b993e-d3fd-11e9-9019-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use",
                                        "name": "JSONRPCError"
                                    },
                                    "exec_start_time": 1568141934754,
                                    "finish_time": 1568141956141,
                                    "finished": 1,
                                    "job_id": "5d77f24caa5a4d298c5dc983",
                                    "job_state": "suspend",
                                    "run_id": "d85b9e84-b4ff-4f0e-a91a-e9ed29766918",
                                    "status": [
                                        "2019-09-10T18:59:16+0000",
                                        "error",
                                        "Can't use string (\"123b993e-d3fd-11e9-9019-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use",
                                        null,
                                        null,
                                        1,
                                        1
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1568141960973,
                                "launchState": {
                                    "cell_id": "86540c7d-41e8-4273-b773-c9f31719312f",
                                    "event": "launched_job",
                                    "event_at": "2019-09-10T18:58:30.129876Z",
                                    "job_id": "5d77f24caa5a4d298c5dc983",
                                    "run_id": "d85b9e84-b4ff-4f0e-a91a-e9ed29766918"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "error",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "compounds_to_add": [],
                                "compounds_to_change": [
                                    {
                                        "change_concentration": 0.001,
                                        "change_id": [
                                            "6/4/1/compounds/id/cpd00001"
                                        ],
                                        "change_maxflux": 1100,
                                        "change_minflux": -1100
                                    }
                                ],
                                "compounds_to_remove": [],
                                "isDefined": 1,
                                "media_id": "ArgonneLBMedia",
                                "media_output_id": "ArgonneLBMedia_extra_h2o",
                                "pH_data": null,
                                "temperature": null,
                                "type": "unknown"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Sep 2019 18:57:53 GMT",
                            "id": "86540c7d-41e8-4273-b773-c9f31719312f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/fba_tools/edit_media/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Edit an existing media formulation.",
                            "title": "Edit Media"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"fba_tools/edit_media\",\n    {\n        \"media_id\": \"ArgonneLBMedia\",\n        \"media_output_id\": \"ArgonneLBMedia_extra_h2o\",\n        \"compounds_to_change\": [{\n            \"change_id\": [\"6/4/1/compounds/id/cpd00001\"],\n            \"change_concentration\": 0.001,\n            \"change_minflux\": -1100,\n            \"change_maxflux\": 1100\n        }],\n        \"compounds_to_remove\": [],\n        \"compounds_to_add\": [],\n        \"pH_data\": None,\n        \"temperature\": None,\n        \"type\": \"unknown\",\n        \"isDefined\": 1\n    },\n    tag=\"release\",\n    version=\"1.7.5\",\n    cell_id=\"86540c7d-41e8-4273-b773-c9f31719312f\",\n    run_id=\"d85b9e84-b4ff-4f0e-a91a-e9ed29766918\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 6,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Sep 2019 18:59:22 GMT",
                            "icon": "database",
                            "id": "252517ed-ef4c-4525-bd2b-61a5e511c273",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseBiochem.Media-4.2",
                            "title": "ArgonneLBMedia_extra_h2o"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "b75d480cce5c948c27bb2019cd4b4474",
                                "id": 38,
                                "metadata": {
                                    "Is Defined": "1",
                                    "Is Minimal": "0",
                                    "Name": "ArgonneLBMedia_extra_h2o",
                                    "Number compounds": "65",
                                    "Source ID": "ArgonneLBMedia_FIXED"
                                },
                                "name": "ArgonneLBMedia_extra_h2o",
                                "obj_id": "ws.25022.obj.38",
                                "ref": "25022/38/1",
                                "ref_path": null,
                                "saveDate": "2019-09-10T18:59:09.000Z",
                                "save_date": "2019-09-10T18:59:09+0000",
                                "saved_by": "wjriehl",
                                "size": 6568,
                                "type": "KBaseBiochem.Media-4.2",
                                "typeMajorVersion": "4",
                                "typeMinorVersion": "2",
                                "typeModule": "KBaseBiochem",
                                "typeName": "Media",
                                "version": 1,
                                "ws": "wjriehl:narrative_1502225097649",
                                "ws_id": 25022,
                                "wsid": 25022
                            },
                            "upas": {
                                "obj": "[25022]/38/1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-5f318df2-9c87-4b3d-bab3-edcbb4f22f82' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-5f318df2-9c87-4b3d-bab3-edcbb4f22f82'), {\n                \"upas\": {\"obj\": \"25022/38/1\"},\n                \"data\": {\"type\": \"KBaseBiochem.Media\", \"obj\": \"ArgonneLBMedia_extra_h2o\", \"ws\": \"wjriehl:narrative_1502225097649\"},\n                \"type\": \"viewer\",\n                \"widget\": \"kbaseTabTable\",\n                \"cellId\": \"252517ed-ef4c-4525-bd2b-61a5e511c273\",\n                \"title\": \"ArgonneLBMedia_extra_h2o\",\n                \"time\": 1568141962360\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 6,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"25022/38/1\",\n    cell_id=\"252517ed-ef4c-4525-bd2b-61a5e511c273\",\n    title=\"ArgonneLBMedia_extra_h2o\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 4,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Tue, 10 Sep 2019 18:57:49 GMT",
                            "icon": "database",
                            "id": "d2ebbcae-512c-4cfd-9dbd-5c2840247160",
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:15 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseBiochem.Media-1.0",
                            "title": "ArgonneLBMedia"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "8927c6efb3021f86593024995a9db438",
                                "id": 37,
                                "metadata": {},
                                "name": "ArgonneLBMedia",
                                "obj_id": "ws.25022.obj.37",
                                "ref": "25022/37/1",
                                "ref_path": null,
                                "saveDate": "2019-09-10T18:57:37.000Z",
                                "save_date": "2019-09-10T18:57:37+0000",
                                "saved_by": "wjriehl",
                                "size": 6535,
                                "type": "KBaseBiochem.Media-1.0",
                                "typeMajorVersion": "1",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseBiochem",
                                "typeName": "Media",
                                "version": 1,
                                "ws": "wjriehl:narrative_1502225097649",
                                "ws_id": 25022,
                                "wsid": 25022
                            },
                            "upas": {
                                "obj": "[25022]/37/1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-7922fe04-f7fa-4fa6-9ce4-d5711b7e7144' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-7922fe04-f7fa-4fa6-9ce4-d5711b7e7144'), {\n                \"upas\": {\"obj\": \"25022/37/1\"},\n                \"data\": {\"type\": \"KBaseBiochem.Media\", \"obj\": \"ArgonneLBMedia\", \"ws\": \"wjriehl:narrative_1502225097649\"},\n                \"type\": \"viewer\",\n                \"widget\": \"kbaseTabTable\",\n                \"cellId\": \"d2ebbcae-512c-4cfd-9dbd-5c2840247160\",\n                \"title\": \"ArgonneLBMedia\",\n                \"time\": 1568141869246\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 4,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"25022/37/1\",\n    cell_id=\"d2ebbcae-512c-4cfd-9dbd-5c2840247160\",\n    title=\"ArgonneLBMedia\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 7,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "f6f8088e846831fc94a0b0806d7a769dfaccf836",
                                "id": "fba_tools/edit_media",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "compounds_to_add",
                                                "target_property": "compounds_to_add"
                                            },
                                            {
                                                "input_parameter": "compounds_to_change",
                                                "target_property": "compounds_to_change"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "media_output_id",
                                                "target_property": "media_output_id"
                                            },
                                            {
                                                "input_parameter": "compounds_to_remove",
                                                "target_property": "compounds_to_remove"
                                            },
                                            {
                                                "input_parameter": "pH_data",
                                                "target_property": "pH_data"
                                            },
                                            {
                                                "input_parameter": "temperature",
                                                "target_property": "temperature"
                                            },
                                            {
                                                "input_parameter": "isDefined",
                                                "target_property": "isDefined"
                                            },
                                            {
                                                "input_parameter": "type",
                                                "target_property": "type"
                                            }
                                        ],
                                        "kb_service_method": "edit_media",
                                        "kb_service_name": "fba_tools",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "constant_value": "KBaseBiochem.Media",
                                                "target_property": "type"
                                            },
                                            {
                                                "input_parameter": "media_output_id",
                                                "target_property": "obj"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "f6f8088e846831fc94a0b0806d7a769dfaccf836"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry@mcs.anl.gov"
                                        ],
                                        "categories": [
                                            "active",
                                            "metabolic_modeling"
                                        ],
                                        "git_commit_hash": "f6f8088e846831fc94a0b0806d7a769dfaccf836",
                                        "id": "fba_tools/edit_media",
                                        "input_types": [
                                            "KBaseBiochem.Media"
                                        ],
                                        "module_name": "fba_tools",
                                        "name": "Edit Media",
                                        "namespace": "fba_tools",
                                        "output_types": [
                                            "KBaseBiochem.Media"
                                        ],
                                        "subtitle": "Edit an existing media formulation.",
                                        "tooltip": "Edit an existing media formulation.",
                                        "ver": "1.7.5"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameter_groups": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "",
                                            "id": "compounds_to_change",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "change_id",
                                                "change_concentration",
                                                "change_minflux",
                                                "change_maxflux"
                                            ],
                                            "short_hint": "Compounds to change in media",
                                            "ui_name": "Compounds to change in media",
                                            "with_border": 0
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "description": "",
                                            "id": "compounds_to_add",
                                            "optional": 1,
                                            "parameter_ids": [
                                                "add_id",
                                                "add_concentration",
                                                "add_minflux",
                                                "add_maxflux"
                                            ],
                                            "short_hint": "Compounds to add to media",
                                            "ui_name": "Compounds to add to media",
                                            "with_border": 0
                                        }
                                    ],
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_id",
                                            "optional": 0,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Media to edit"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_output_id",
                                            "optional": 0,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output media ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "ID of compound to change",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "change_id",
                                            "optional": 1,
                                            "short_hint": "ID of compound to change",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "parameter_id": "media_id",
                                                    "path_to_subdata": [
                                                        "mediacompounds"
                                                    ],
                                                    "selection_id": "compound_ref",
                                                    "subdata_included": [
                                                        "mediacompounds/[*]/compound_ref"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compound ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Compounds to remove",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "compounds_to_remove",
                                            "optional": 1,
                                            "short_hint": "Compounds to remove",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "parameter_id": "media_id",
                                                    "path_to_subdata": [
                                                        "mediacompounds"
                                                    ],
                                                    "selection_id": "compound_ref",
                                                    "subdata_included": [
                                                        "mediacompounds/[*]/compound_ref"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compounds to remove"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.001"
                                            ],
                                            "description": "Concentration in mmol",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_concentration",
                                            "optional": 1,
                                            "short_hint": "Concentration in mmol",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Concentration"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "-100"
                                            ],
                                            "description": "Min flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_minflux",
                                            "optional": 1,
                                            "short_hint": "Min flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "100"
                                            ],
                                            "description": "Max flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "change_maxflux",
                                            "optional": 1,
                                            "short_hint": "Max flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Max flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "ID of compound to add",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_id",
                                            "optional": 0,
                                            "short_hint": "ID of compound to add",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Compound ID"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.001"
                                            ],
                                            "description": "Concentration in mmol",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_concentration",
                                            "optional": 0,
                                            "short_hint": "Concentration in mmol",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Concentration"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "-100"
                                            ],
                                            "description": "Min flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_minflux",
                                            "optional": 0,
                                            "short_hint": "Min flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Min flux"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "100"
                                            ],
                                            "description": "Max flux in mmol/gm CDW hr",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "add_maxflux",
                                            "optional": 0,
                                            "short_hint": "Max flux in mmol/gm CDW hr",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Max flux"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "pH of media",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "pH_data",
                                            "optional": 1,
                                            "short_hint": "pH of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "pH"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Temperature of media",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "temperature",
                                            "optional": 1,
                                            "short_hint": "Temperature of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Temperature"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "unknown"
                                            ],
                                            "description": "Type of media",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Unknown",
                                                        "index": 0,
                                                        "value": "unknown"
                                                    },
                                                    {
                                                        "display": "Biolog",
                                                        "index": 1,
                                                        "value": "biolog"
                                                    },
                                                    {
                                                        "display": "Undefined",
                                                        "index": 2,
                                                        "value": "undefined"
                                                    },
                                                    {
                                                        "display": "Defined",
                                                        "index": 3,
                                                        "value": "defined"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "type",
                                            "optional": 1,
                                            "short_hint": "Type of media",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Type of media"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Check if media is defined",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "isDefined",
                                            "optional": 0,
                                            "short_hint": "Check if media is defined",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Defined media"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTabTable"
                                    }
                                },
                                "tag": "release",
                                "version": "1.7.5"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cell_id": "7d1f0e5b-f9de-48cb-86db-f12bea2e416c",
                                    "child_jobs": [],
                                    "creation_time": 1568142113414,
                                    "error": {
                                        "code": -32603,
                                        "error": "Can't use string (\"8af9c99a-d3fd-11e9-b53a-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use at /kb/module/bin/../lib/KBaseReport/KBaseReportClient.pm line 451.\n",
                                        "message": "Can't use string (\"8af9c99a-d3fd-11e9-b53a-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use",
                                        "name": "JSONRPCError"
                                    },
                                    "exec_start_time": 1568142138354,
                                    "finish_time": 1568142158898,
                                    "finished": 1,
                                    "job_id": "5d77f318aa5a4d298c5dc984",
                                    "job_state": "suspend",
                                    "run_id": "91bb38f3-ce50-4ba2-8f8f-3b6d90369633",
                                    "status": [
                                        "2019-09-10T19:02:38+0000",
                                        "error",
                                        "Can't use string (\"8af9c99a-d3fd-11e9-b53a-02ac07f2\"...) as an ARRAY ref while \"strict refs\" in use",
                                        null,
                                        null,
                                        1,
                                        1
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://ci.kbase.us/services/userandjobstate/"
                                },
                                "jobStateUpdated": 1569432621397,
                                "launchState": {
                                    "cell_id": "7d1f0e5b-f9de-48cb-86db-f12bea2e416c",
                                    "event": "launched_job",
                                    "event_at": "2019-09-10T19:01:53.496893Z",
                                    "job_id": "5d77f318aa5a4d298c5dc984",
                                    "run_id": "91bb38f3-ce50-4ba2-8f8f-3b6d90369633"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "error",
                                    "stage": "running"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "compounds_to_add": [
                                    {
                                        "add_concentration": 0.001,
                                        "add_id": "cpd00025",
                                        "add_maxflux": 100,
                                        "add_minflux": -100
                                    }
                                ],
                                "compounds_to_change": [],
                                "compounds_to_remove": [],
                                "isDefined": 1,
                                "media_id": "ArgonneLBMedia_extra_h2o",
                                "media_output_id": "ArgonneLBMedia_plus_cpd00025",
                                "pH_data": null,
                                "temperature": null,
                                "type": "unknown"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Tue, 10 Sep 2019 19:01:04 GMT",
                            "id": "7d1f0e5b-f9de-48cb-86db-f12bea2e416c",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/fba_tools/edit_media/release"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Edit an existing media formulation.",
                            "title": "Edit Media"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"fba_tools/edit_media\",\n    {\n        \"media_id\": \"ArgonneLBMedia_extra_h2o\",\n        \"media_output_id\": \"ArgonneLBMedia_plus_cpd00025\",\n        \"compounds_to_change\": [],\n        \"compounds_to_remove\": [],\n        \"compounds_to_add\": [{\n            \"add_id\": \"cpd00025\",\n            \"add_concentration\": 0.001,\n            \"add_minflux\": -100,\n            \"add_maxflux\": 100\n        }],\n        \"pH_data\": None,\n        \"temperature\": None,\n        \"type\": \"unknown\",\n        \"isDefined\": 1\n    },\n    tag=\"release\",\n    version=\"1.7.5\",\n    cell_id=\"7d1f0e5b-f9de-48cb-86db-f12bea2e416c\",\n    run_id=\"91bb38f3-ce50-4ba2-8f8f-3b6d90369633\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 36,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 25 Sep 2019 17:30:27 GMT",
                            "icon": "code",
                            "id": "84ef11ee-5c71-4e2d-a105-8e045a4f3728",
                            "lastLoaded": "Wed, 25 Sep 2019 17:30:27 GMT",
                            "status": "new",
                            "subtitle": "python",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [],
                "source": "import requests\nr = requests.post(\"https://ci.kbase.us/services/ws\", json={\"id\": \"12345\", \"version\": \"1.1\", \"method\": \"Workspace.get_permissions_mass\", \"params\": [{\"workspaces\": [{\"id\": 25023}]}]}, headers={\"Authorization\": os.environ[\"KB_AUTH_TOKEN\"]})"
            },
            {
                "cell_type": "code",
                "execution_count": 37,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 25 Sep 2019 17:31:24 GMT",
                            "icon": "code",
                            "id": "4a9b5c09-dbd7-491c-82cf-1ae411a0375f",
                            "lastLoaded": "Wed, 25 Sep 2019 17:31:24 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "text/plain": "{u'error': {u'code': -32500,\n  u'error': u'us.kbase.workspace.database.exceptions.NoSuchWorkspaceException: Workspace 25023 is deleted\\n\\tat us.kbase.workspace.database.mongo.MongoWorkspaceDB.resolveWorkspaces(MongoWorkspaceDB.java:1035)\\n\\tat us.kbase.workspace.database.mongo.MongoWorkspaceDB.resolveWorkspaces(MongoWorkspaceDB.java:1010)\\n\\tat us.kbase.workspace.database.mongo.MongoWorkspaceDB.resolveWorkspaces(MongoWorkspaceDB.java:998)\\n\\tat us.kbase.workspace.database.Workspace.getPermissions(Workspace.java:564)\\n\\tat us.kbase.workspace.database.Workspace.getPermissions(Workspace.java:531)\\n\\tat us.kbase.workspace.kbase.WorkspaceServerMethods.getPermissions(WorkspaceServerMethods.java:326)\\n\\tat us.kbase.workspace.WorkspaceServer.getPermissionsMass(WorkspaceServer.java:507)\\n\\tat sun.reflect.GeneratedMethodAccessor129.invoke(Unknown Source)\\n\\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\\n\\tat java.lang.reflect.Method.invoke(Method.java:498)\\n\\tat us.kbase.common.service.JsonServerServlet.processRpcCall(JsonServerServlet.java:610)\\n\\tat us.kbase.common.service.JsonServerServlet.doPost(JsonServerServlet.java:463)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:661)\\n\\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:742)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:52)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)\\n\\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)\\n\\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:199)\\n\\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)\\n\\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:470)\\n\\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:140)\\n\\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:80)\\n\\tat org.apache.catalina.valves.AbstractAccessLogValve.invoke(AbstractAccessLogValve.java:624)\\n\\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:87)\\n\\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:342)\\n\\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:799)\\n\\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:66)\\n\\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:861)\\n\\tat org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1698)\\n\\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)\\n\\tat org.apache.tomcat.util.net.AbstractEndpoint.processSocket(AbstractEndpoint.java:934)\\n\\tat org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.completed(Nio2Endpoint.java:627)\\n\\tat org.apache.tomcat.util.net.Nio2Endpoint$Nio2SocketWrapper$4.completed(Nio2Endpoint.java:605)\\n\\tat sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126)\\n\\tat sun.nio.ch.Invoker$2.run(Invoker.java:218)\\n\\tat sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112)\\n\\tat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\\n\\tat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\\n\\tat java.lang.Thread.run(Thread.java:748)\\n',\n  u'message': u'Workspace 25023 is deleted',\n  u'name': u'JSONRPCError'},\n u'id': u'12345',\n u'version': u'1.1'}"
                        },
                        "execution_count": 37,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "r.json()"
            },
            {
                "cell_type": "code",
                "execution_count": 34,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 25 Sep 2019 17:31:34 GMT",
                            "icon": "code",
                            "id": "602dc20f-b18f-49cf-83ca-a233d759e953",
                            "lastLoaded": "Wed, 25 Sep 2019 17:31:34 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "name": "stdout",
                        "output_type": "stream",
                        "text": "Variable      Type                   Data/Info\n----------------------------------------------\nJobManager    type                   <class 'biokbase.narrativ<...>s.jobmanager.JobManager'>\njm            JobManager             <biokbase.narrative.jobs.<...>object at 0x7f3e32b43f50>\njob_id        str                    5d77f318aa5a4d298c5dc984\njob_service   NarrativeJobService    <biokbase.NarrativeJobSer<...>object at 0x7f3e30918190>\nos            module                 <module 'os' from '/kb/ru<...>me/lib/python2.7/os.pyc'>\nparams        list                   n=2\nperms         dict                   n=1\nr             Response               <Response [200]>\nrequests      module                 <module 'requests' from '<...>s/requests/__init__.pyc'>\nw             int                    25018\nws            Workspace              <biokbase.workspace.clien<...>object at 0x7f3e30918450>\nws_ids        list                   n=2\n"
                    }
                ],
                "source": "whos"
            },
            {
                "cell_type": "code",
                "execution_count": 35,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Wed, 25 Sep 2019 17:32:41 GMT",
                            "icon": "code",
                            "id": "4b39ec97-6f26-4f4b-94cc-946584cd1288",
                            "lastLoaded": "Wed, 25 Sep 2019 17:32:41 GMT",
                            "status": "new",
                            "title": "Code Cell"
                        },
                        "codeCell": {
                            "userSettings": {
                                "showCodeInputArea": true
                            }
                        },
                        "type": "code"
                    }
                },
                "outputs": [
                    {
                        "ename": "ServerError",
                        "evalue": "JSONRPCError: -32500. There is no job 5d7821f9e4b08a85517210e8 viewable by user wjriehl\nus.kbase.common.service.ServerException: There is no job 5d7821f9e4b08a85517210e8 viewable by user wjriehl\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCallStatic(JsonClientCaller.java:409)\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCall(JsonClientCaller.java:326)\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCall(JsonClientCaller.java:295)\n\tat us.kbase.userandjobstate.UserAndJobStateClient.getJobStatus(UserAndJobStateClient.java:613)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJobCondor(SDKMethodRunner.java:917)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJob(SDKMethodRunner.java:744)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.checkJob(NarrativeJobServiceServer.java:647)\n\tat jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat us.kbase.common.service.JsonServerServlet.processRpcCall(JsonServerServlet.java:610)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.processRpcCall(NarrativeJobServiceServer.java:225)\n\tat us.kbase.common.service.JsonServerServlet.doPost(JsonServerServlet.java:463)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:857)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1242)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:503)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:364)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n",
                        "output_type": "error",
                        "traceback": [
                            "\u001b[0;31m\u001b[0m",
                            "\u001b[0;31mServerError\u001b[0mTraceback (most recent call last)",
                            "\u001b[0;32m<ipython-input-35-f2b3e3f65ec4>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m()\u001b[0m\n\u001b[1;32m      1\u001b[0m \u001b[0mjob_id\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;34m'5d7821f9e4b08a85517210e8'\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m      2\u001b[0m \u001b[0mjob_service\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mbiokbase\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mnarrative\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mclients\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mget\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m\"job_service\"\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m----> 3\u001b[0;31m \u001b[0mjob_service\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mcheck_job\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mjob_id\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[0;32m/kb/runtime/lib/python2.7/site-packages/biokbase-0.0.1-py2.7.egg/biokbase/NarrativeJobService/NarrativeJobServiceClient.pyc\u001b[0m in \u001b[0;36mcheck_job\u001b[0;34m(self, job_id, context)\u001b[0m\n\u001b[1;32m    277\u001b[0m         return self._client.call_method(\n\u001b[1;32m    278\u001b[0m             \u001b[0;34m'NarrativeJobService.check_job'\u001b[0m\u001b[0;34m,\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 279\u001b[0;31m             [job_id], self._service_ver, context)\n\u001b[0m\u001b[1;32m    280\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    281\u001b[0m     \u001b[0;32mdef\u001b[0m \u001b[0mlist_job_statuses\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mself\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mworkspace_id\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m=\u001b[0m\u001b[0mNone\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                            "\u001b[0;32m/kb/runtime/lib/python2.7/site-packages/biokbase-0.0.1-py2.7.egg/biokbase/NarrativeJobService/baseclient.pyc\u001b[0m in \u001b[0;36mcall_method\u001b[0;34m(self, service_method, args, service_ver, context)\u001b[0m\n\u001b[1;32m    266\u001b[0m         \u001b[0murl\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_get_service_url\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mservice_method\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mservice_ver\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    267\u001b[0m         \u001b[0mcontext\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_set_up_context\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mservice_ver\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 268\u001b[0;31m         \u001b[0;32mreturn\u001b[0m \u001b[0mself\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0m_call\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0murl\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mservice_method\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0margs\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mcontext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m",
                            "\u001b[0;32m/kb/runtime/lib/python2.7/site-packages/biokbase-0.0.1-py2.7.egg/biokbase/NarrativeJobService/baseclient.pyc\u001b[0m in \u001b[0;36m_call\u001b[0;34m(self, url, method, params, context)\u001b[0m\n\u001b[1;32m    181\u001b[0m                 \u001b[0merr\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mjson\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    182\u001b[0m                 \u001b[0;32mif\u001b[0m \u001b[0;34m'error'\u001b[0m \u001b[0;32min\u001b[0m \u001b[0merr\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m--> 183\u001b[0;31m                     \u001b[0;32mraise\u001b[0m \u001b[0mServerError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m**\u001b[0m\u001b[0merr\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0;34m'error'\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m    184\u001b[0m                 \u001b[0;32melse\u001b[0m\u001b[0;34m:\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m    185\u001b[0m                     \u001b[0;32mraise\u001b[0m \u001b[0mServerError\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m'Unknown'\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0mret\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mtext\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n",
                            "\u001b[0;31mServerError\u001b[0m: JSONRPCError: -32500. There is no job 5d7821f9e4b08a85517210e8 viewable by user wjriehl\nus.kbase.common.service.ServerException: There is no job 5d7821f9e4b08a85517210e8 viewable by user wjriehl\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCallStatic(JsonClientCaller.java:409)\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCall(JsonClientCaller.java:326)\n\tat us.kbase.common.service.JsonClientCaller.jsonrpcCall(JsonClientCaller.java:295)\n\tat us.kbase.userandjobstate.UserAndJobStateClient.getJobStatus(UserAndJobStateClient.java:613)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJobCondor(SDKMethodRunner.java:917)\n\tat us.kbase.narrativejobservice.sdkjobs.SDKMethodRunner.checkJob(SDKMethodRunner.java:744)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.checkJob(NarrativeJobServiceServer.java:647)\n\tat jdk.internal.reflect.GeneratedMethodAccessor110.invoke(Unknown Source)\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\n\tat us.kbase.common.service.JsonServerServlet.processRpcCall(JsonServerServlet.java:610)\n\tat us.kbase.narrativejobservice.NarrativeJobServiceServer.processRpcCall(NarrativeJobServiceServer.java:225)\n\tat us.kbase.common.service.JsonServerServlet.doPost(JsonServerServlet.java:463)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:707)\n\tat javax.servlet.http.HttpServlet.service(HttpServlet.java:790)\n\tat org.eclipse.jetty.servlet.ServletHolder.handle(ServletHolder.java:857)\n\tat org.eclipse.jetty.servlet.ServletHandler.doHandle(ServletHandler.java:535)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:146)\n\tat org.eclipse.jetty.security.SecurityHandler.handle(SecurityHandler.java:548)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:257)\n\tat org.eclipse.jetty.server.session.SessionHandler.doHandle(SessionHandler.java:1595)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextHandle(ScopedHandler.java:255)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doHandle(ContextHandler.java:1340)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:203)\n\tat org.eclipse.jetty.servlet.ServletHandler.doScope(ServletHandler.java:473)\n\tat org.eclipse.jetty.server.session.SessionHandler.doScope(SessionHandler.java:1564)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.nextScope(ScopedHandler.java:201)\n\tat org.eclipse.jetty.server.handler.ContextHandler.doScope(ContextHandler.java:1242)\n\tat org.eclipse.jetty.server.handler.ScopedHandler.handle(ScopedHandler.java:144)\n\tat org.eclipse.jetty.server.handler.ContextHandlerCollection.handle(ContextHandlerCollection.java:220)\n\tat org.eclipse.jetty.server.handler.HandlerCollection.handle(HandlerCollection.java:126)\n\tat org.eclipse.jetty.server.handler.HandlerWrapper.handle(HandlerWrapper.java:132)\n\tat org.eclipse.jetty.server.Server.handle(Server.java:503)\n\tat org.eclipse.jetty.server.HttpChannel.handle(HttpChannel.java:364)\n\tat org.eclipse.jetty.server.HttpConnection.onFillable(HttpConnection.java:260)\n\tat org.eclipse.jetty.io.AbstractConnection$ReadCallback.succeeded(AbstractConnection.java:305)\n\tat org.eclipse.jetty.io.FillInterest.fillable(FillInterest.java:103)\n\tat org.eclipse.jetty.io.ChannelEndPoint$2.run(ChannelEndPoint.java:118)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.runTask(EatWhatYouKill.java:333)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.doProduce(EatWhatYouKill.java:310)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.tryProduce(EatWhatYouKill.java:168)\n\tat org.eclipse.jetty.util.thread.strategy.EatWhatYouKill.run(EatWhatYouKill.java:126)\n\tat org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread.run(ReservedThreadExecutor.java:366)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool.runJob(QueuedThreadPool.java:765)\n\tat org.eclipse.jetty.util.thread.QueuedThreadPool$2.run(QueuedThreadPool.java:683)\n\tat java.base/java.lang.Thread.run(Thread.java:834)\n"
                        ]
                    }
                ],
                "source": "job_id = '5d7821f9e4b08a85517210e8'\njob_service = biokbase.narrative.clients.get(\"job_service\")\njob_service.check_job(job_id)"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                "id": "NarrativeTest/test_input_params",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "actual_input_object",
                                                "target_property": "input_genome_name"
                                            },
                                            {
                                                "input_parameter": "actual_output_object",
                                                "target_property": "output_genome_name"
                                            }
                                        ],
                                        "kb_service_method": "test_async_job",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "16",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "contig_filter_result"
                                            },
                                            {
                                                "input_parameter": "actual_output_object",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "ce273c5ba9f7aae461a78a861be3e0949095f2c6"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [
                                            "active"
                                        ],
                                        "git_commit_hash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                        "id": "NarrativeTest/test_input_params",
                                        "input_types": [
                                            "KBaseFBA.FBAModel",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "NarrativeTest",
                                        "name": "Test Input Parameters",
                                        "namespace": "NarrativeTest",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Used for testing that input parameters are properly validated.",
                                        "tooltip": "Used for testing that input parameters are properly validated.",
                                        "ver": "0.0.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "actual_input_object",
                                            "optional": 0,
                                            "short_hint": "Should be a genome (KBaseGenomes.Genome)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome to be duplicated"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "actual_output_object",
                                            "optional": 0,
                                            "short_hint": "The name of the new Genome object that gets created (a KBaseGenomes.Genome)",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Name of new Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_int",
                                            "optional": 1,
                                            "short_hint": "Only accept a single integer between [-100, 100]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 100,
                                                "min_int": -100,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single integer"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_ints",
                                            "optional": 1,
                                            "short_hint": "Accept multiple integers between [-100, 100]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 100,
                                                "min_int": -100,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple integers"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_float",
                                            "optional": 1,
                                            "short_hint": "Only accept a single float between [-55.5, 55.5]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 55.5,
                                                "min_float": -55.5,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single floating point number"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_floats",
                                            "optional": 1,
                                            "short_hint": "Accept multiple floating point numbers between [-55.5, 55.5]",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 55.5,
                                                "min_float": -55.5,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple floating point numbers"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_string",
                                            "optional": 1,
                                            "short_hint": "Just validate that it is a something.",
                                            "ui_class": "parameter",
                                            "ui_name": "Single random string"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_strings",
                                            "optional": 1,
                                            "short_hint": "Accept multple random strings",
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple strings"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "single_ws_object",
                                            "optional": 1,
                                            "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "A single ws object"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "list_of_ws_objects",
                                            "optional": 1,
                                            "short_hint": "Accepts both KBaseGenomes.Genome or KBaseFBA.FBAModel",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Multiple ws objects"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Apple",
                                                        "index": 0,
                                                        "value": "apple"
                                                    },
                                                    {
                                                        "display": "Banana",
                                                        "index": 1,
                                                        "value": "banana"
                                                    },
                                                    {
                                                        "display": "Carrot",
                                                        "index": 2,
                                                        "value": "carrot"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "dropdown_selection",
                                            "optional": 1,
                                            "short_hint": "Should only accept what is in that dropdown.",
                                            "ui_class": "parameter",
                                            "ui_name": "Dropdown of random strings"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Apple",
                                                        "index": 0,
                                                        "value": "apple"
                                                    },
                                                    {
                                                        "display": "Banana",
                                                        "index": 1,
                                                        "value": "banana"
                                                    },
                                                    {
                                                        "display": "Carrot",
                                                        "index": 2,
                                                        "value": "carrot"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "list_of_dropdown_selections",
                                            "optional": 1,
                                            "short_hint": "Should accept only what is in the dropdown, but a list of them.",
                                            "ui_class": "parameter",
                                            "ui_name": "Multiple dropdown results"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "single_checkbox",
                                            "optional": 1,
                                            "short_hint": "Accepts just True or False, should auto-map to actual value",
                                            "ui_class": "parameter",
                                            "ui_name": "A single checkbox"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textarea",
                                            "id": "single_textarea",
                                            "optional": 1,
                                            "short_hint": "A textarea",
                                            "textarea_options": {
                                                "n_rows": 4,
                                                "placeholder": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Single textarea"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textarea",
                                            "id": "list_of_textareas",
                                            "optional": 1,
                                            "short_hint": "Maybe you want to write an article with lots of paragraphs?",
                                            "textarea_options": {
                                                "n_rows": 3,
                                                "placeholder": ""
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "A list of textareas."
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "model_for_subdata",
                                            "optional": 1,
                                            "short_hint": "This is the FBA model that will be used for populating subdata selection",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "A single FBA model for subdata selection"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "single_textsubdata",
                                            "optional": 1,
                                            "short_hint": "Used for a KBaseFBA.FBAModel (as in the example spec)",
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 0,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}} ({{formula}})",
                                                    "parameter_id": "model_for_subdata",
                                                    "path_to_subdata": [
                                                        "modelcompounds"
                                                    ],
                                                    "selection_description": [
                                                        "name",
                                                        "formula"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelcompounds/[*]/id",
                                                        "modelcompounds/[*]/name",
                                                        "modelcompounds/[*]/formula"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "A single fancy text subdata"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.2"
                            },
                            "fsm": {
                                "currentState": {
                                    "code": "built",
                                    "mode": "editing",
                                    "params": "complete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "actual_input_object": "bsub_annotation",
                                "actual_output_object": "a_new_genome",
                                "dropdown_selection": "apple",
                                "list_of_dropdown_selections": [
                                    "banana"
                                ],
                                "list_of_floats": [
                                    null
                                ],
                                "list_of_ints": [
                                    6,
                                    20
                                ],
                                "list_of_strings": [
                                    "asd",
                                    "fgh"
                                ],
                                "list_of_textareas": [
                                    "asdf",
                                    "gasdfasdfa"
                                ],
                                "list_of_ws_objects": [
                                    "25022/25/15",
                                    "25022/15/9"
                                ],
                                "model_for_subdata": "-123.45-",
                                "single_checkbox": 1,
                                "single_float": 10.4,
                                "single_int": 10,
                                "single_string": "foobar",
                                "single_textarea": "blahblahblah",
                                "single_textsubdata": [],
                                "single_ws_object": "_Echinacea_purpurea__witches_-broom_phytoplasma"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 06 Dec 2019 23:55:48 GMT",
                            "id": "48def3c7-e567-4ee7-bd18-fead1fe0631f",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/test_input_params/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Used for testing that input parameters are properly validated.",
                            "title": "Test Input Parameters"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/test_input_params\",\n    {\n        \"actual_input_object\": \"bsub_annotation\",\n        \"actual_output_object\": \"a_new_genome\",\n        \"dropdown_selection\": \"apple\",\n        \"list_of_dropdown_selections\": [\"banana\"],\n        \"list_of_floats\": [None],\n        \"list_of_ints\": [6, 20],\n        \"list_of_strings\": [\"asd\", \"fgh\"],\n        \"list_of_textareas\": [\"asdf\", \"gasdfasdfa\"],\n        \"list_of_ws_objects\": [\"25022/25/15\", \"25022/15/9\"],\n        \"model_for_subdata\": \"-123.45-\",\n        \"single_checkbox\": 1,\n        \"single_float\": 10.4,\n        \"single_int\": 10,\n        \"single_string\": \"foobar\",\n        \"single_textarea\": \"blahblahblah\",\n        \"single_textsubdata\": [],\n        \"single_ws_object\": \"_Echinacea_purpurea__witches_-broom_phytoplasma\"\n    },\n    tag=\"dev\",\n    version=\"ce273c5ba9f7aae461a78a861be3e0949095f2c6\",\n    cell_id=\"48def3c7-e567-4ee7-bd18-fead1fe0631f\",\n    run_id=\"46eb4226-ab66-499b-9ad8-d43e0ffbeb4e\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 25,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                "id": "NarrativeTest/test_input_widget",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id"
                                            }
                                        ],
                                        "kb_service_method": "generic_test",
                                        "kb_service_name": "NarrativeTest",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "constant_value": "5",
                                                "target_property": "report_window_line_height"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0"
                                                ],
                                                "target_property": "contig_filter_result"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "ce273c5ba9f7aae461a78a861be3e0949095f2c6"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "wjriehl"
                                        ],
                                        "categories": [
                                            "active"
                                        ],
                                        "git_commit_hash": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                        "id": "NarrativeTest/test_input_widget",
                                        "input_types": [
                                            "KBaseBiochem.Media"
                                        ],
                                        "module_name": "NarrativeTest",
                                        "name": "Test Input Widget",
                                        "namespace": "NarrativeTest",
                                        "output_types": [],
                                        "subtitle": "Tests input widgets by just loading a simple, predefined widget.\nThis one just has a KBaseBiochem.Media object as an input.",
                                        "tooltip": "Tests input widgets by just loading a simple, predefined widget.\nThis one just has a KBaseBiochem.Media object as an input.",
                                        "ver": "0.0.2"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_id",
                                            "optional": 0,
                                            "short_hint": "A media object to test loading",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Media object"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "kbaseInputTest",
                                        "output": "null"
                                    }
                                },
                                "tag": "dev",
                                "version": "0.0.2"
                            },
                            "exec": {
                                "jobState": {
                                    "authstrat": "kbaseworkspace",
                                    "cell_id": "7f86750a-7c5b-494b-81a2-08b19250b5c4",
                                    "child_jobs": [],
                                    "created": 1579299486000,
                                    "job_id": "5e22329ecf3745aa7898b144",
                                    "job_input": {
                                        "app_id": "NarrativeTest/test_input_widget",
                                        "method": "NarrativeTest.generic_test",
                                        "narrative_cell_info": {
                                            "cell_id": "7f86750a-7c5b-494b-81a2-08b19250b5c4",
                                            "run_id": "147cbdfa-2585-4ef1-bcb8-fecf13a66a1f",
                                            "tag": "dev",
                                            "token_id": "dc18f614-571c-4cb0-b7e5-96f9409d3f7a"
                                        },
                                        "params": [
                                            {
                                                "media_id": "ArgonneLBMedia_plus_cpd00025",
                                                "workspace": "wjriehl:narrative_1502225097649"
                                            }
                                        ],
                                        "parent_job_id": "None",
                                        "service_ver": "ce273c5ba9f7aae461a78a861be3e0949095f2c6",
                                        "source_ws_objects": [
                                            "25022/39/1"
                                        ],
                                        "wsid": 25022
                                    },
                                    "job_output": {},
                                    "queued": 1579299487079,
                                    "run_id": "147cbdfa-2585-4ef1-bcb8-fecf13a66a1f",
                                    "scheduler_id": "13244",
                                    "scheduler_type": "condor",
                                    "status": "queued",
                                    "updated": 1579299487079,
                                    "user": "wjriehl",
                                    "wsid": 25022
                                },
                                "jobStateUpdated": 1579299489368,
                                "launchState": {
                                    "cell_id": "7f86750a-7c5b-494b-81a2-08b19250b5c4",
                                    "event": "launched_job",
                                    "event_at": "2020-01-17T22:18:07.554016Z",
                                    "job_id": "5e22329ecf3745aa7898b144",
                                    "run_id": "147cbdfa-2585-4ef1-bcb8-fecf13a66a1f"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "processing",
                                    "stage": "queued"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "media_id": "ArgonneLBMedia_plus_cpd00025"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 02 Jan 2020 22:54:40 GMT",
                            "id": "7f86750a-7c5b-494b-81a2-08b19250b5c4",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/NarrativeTest/test_input_widget/dev"
                            },
                            "lastLoaded": "Tue, 14 Jan 2020 18:13:16 GMT",
                            "status": "new",
                            "subtitle": "Tests input widgets by just loading a simple, predefined widget.\nThis one just has a KBaseBiochem.Media object as an input.",
                            "title": "Test Input Widget"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"NarrativeTest/test_input_widget\",\n    {\n        \"media_id\": \"ArgonneLBMedia_plus_cpd00025\"\n    },\n    tag=\"dev\",\n    version=\"ce273c5ba9f7aae461a78a861be3e0949095f2c6\",\n    cell_id=\"7f86750a-7c5b-494b-81a2-08b19250b5c4\",\n    run_id=\"147cbdfa-2585-4ef1-bcb8-fecf13a66a1f\"\n)"
            }
        ],
        "metadata": {
            "creator": "wjriehl",
            "data_dependencies": [],
            "description": "",
            "format": "ipynb",
            "is_temporary": "false",
            "job_ids": {
                "apps": [],
                "job_usage": {
                    "queue_time": 0,
                    "run_time": 0
                },
                "methods": []
            },
            "kbase": {
                "creator": "wjriehl",
                "job_ids": {
                    "apps": [],
                    "job_usage": {
                        "queue_time": 0,
                        "run_time": 0
                    },
                    "methods": []
                },
                "name": "Untitled",
                "ws_name": "wjriehl:narrative_1502225097649"
            },
            "kernelspec": {
                "display_name": "Python 3",
                "language": "python",
                "name": "python3"
            },
            "language_info": {
                "codemirror_mode": {
                    "name": "ipython",
                    "version": 3
                },
                "file_extension": ".py",
                "mimetype": "text/x-python",
                "name": "python",
                "nbconvert_exporter": "python",
                "pygments_lexer": "ipython3",
                "version": "3.7.3"
            },
            "name": "Scratch",
            "type": "KBaseNarrative.Narrative",
            "ws_name": "wjriehl:narrative_1502225097649"
        },
        "nbformat": 4,
        "nbformat_minor": 1
    },
    "info": [
        1,
        "Narrative.1502225097649",
        "KBaseNarrative.Narrative-4.0",
        "2020-01-17T22:18:13+0000",
        114,
        "wjriehl",
        25022,
        "wjriehl:narrative_1502225097649",
        "9d86727d867fdbda37b1d271af243c4d",
        313324,
        {
            "method.kb_uploadmethods/import_fastq_sra_as_reads_from_staging/4c0579bec5aa606f5e42cf29d920872d34ea5b52": "1",
            "job_info": "{\"queue_time\": 0, \"run_time\": 0, \"running\": 0, \"completed\": 0, \"error\": 0}",
            "method.fba_tools/edit_media/f6f8088e846831fc94a0b0806d7a769dfaccf836": "2",
            "description": "",
            "type": "KBaseNarrative.Narrative",
            "method.kb_Msuite/run_checkM_lineage_wf/4b0c3c462f1ccf0dcc30330e99fa2173d7907c7a": "2",
            "method.NarrativeTest/test_input_widget/ce273c5ba9f7aae461a78a861be3e0949095f2c6": "1",
            "is_temporary": "false",
            "method.kb_uploadmethods/import_fasta_as_assembly_from_staging/376efd14d584f6642a5ceeea33d3acd2d3c78b20": "1",
            "method.kb_uploadmethods/import_fasta_as_assembly_from_staging/cac123b09271d200e018fbef52286b98e56daf42": "1",
            "method.kb_uploadmethods/import_gff_fasta_as_metagenome_from_staging/eaacbb349d721977a6c667031f37c5a60f3528c5": "1",
            "method.kb_trimmomatic/run_trimmomatic/09b94c39b2fab79962a8d978aa15a424342defe4": "1",
            "method.NarrativeTest/report_example/4fa11388bfaea2d912e62ffc24220f60c8acdda3": "1",
            "method.NarrativeTest/test_input_params/ce273c5ba9f7aae461a78a861be3e0949095f2c6": "2",
            "creator": "wjriehl",
            "method.kb_SPAdes/run_metaSPAdes/e0a0f9df50bb6765db40f6949b18c7a016610801": "1",
            "data_dependencies": "[]",
            "format": "ipynb",
            "method.NarrativeTest/introspect_job/daaf0bd2a797f60c85dfbfe3a0b4e7568037e763": "1",
            "method.RAST_SDK/reannotate_microbial_genome/50b012d9b41b71ba31b30355627cf85f2611bc3e": "1",
            "name": "Scratch",
            "method.NarrativeTest/report_example/be11b8565ec27d8d1df75b3f26862dbf4a738e5b": "1",
            "method.NarrativeTest/report_example/b45261584ab5c5bd6c6efc0d9abf123377467a8f": "1",
            "method.kb_uploadmethods/import_fastq_sra_as_reads_from_staging/cac123b09271d200e018fbef52286b98e56daf42": "2",
            "ws_name": "wjriehl:narrative_1502225097649"
        }
    ],
    "path": [
        "25022/1/114"
    ],
    "provenance": [
        {
            "service": "narrative",
            "service_ver": "4.0.0",
            "input_ws_objects": [],
            "resolved_ws_objects": [],
            "external_data": [],
            "subactions": [],
            "custom": {},
            "description": "Saved by KBase Narrative Interface"
        }
    ],
    "creator": "wjriehl",
    "orig_wsid": 25022,
    "created": "2020-01-17T22:18:13+0000",
    "epoch": 1579299493111,
    "refs": [],
    "copy_source_inaccessible": 0,
    "extracted_ids": {}
}
