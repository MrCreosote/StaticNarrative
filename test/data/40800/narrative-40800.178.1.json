{
    "data": {
        "cells": [
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": ""
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "<img src=\"http://bioseed.mcs.anl.gov/~chenry/WOM-Icon.png\" alt=\"WOM-network\" style=\"height: 10\npx;\"/>\n\n### Master narrative for study\n\nThis narrative is part of a larger study. [Click here for the home narrative for this study](https://narrative.kbase.us/narrative/ws.39477.obj.1)\n\n### Narrative synopsis\n\nIn this narrative, we apply the modeling and flux analysis tools in KBase to integrate the Pseudomonas flourescens GW456-L13 genome with exometabolomic data from the [Web of Microbes](http://www.webofmicrobes.org/).\n\n### Steps in this Narrative\n1. [Importing isolate genome into narrative](#Step-1:-Importing-isolate-genome-into-narrative)\n2. [Reannotating isolate genome with RAST in prepartion for modeling](#Step-2:-Reannotating-isolate-genome-with-RAST-in-prepartion-for-modeling)\n3. [Constructing a genome-scale metabolic model based on RAST annotations](#Step-3:-Constructing-a-genome-scale-metabolic-model-based-on-RAST-annotations)\n4. [Reconciling metabolic model to exometabolite data](#Step-4:-Reconciling-metabolic-model-to-exometabolite-data)\n5. [Finding gene candidates for gapfilled reactions](#Step-5:-Finding-gene-candidates-for-gapfilled-reactions)\n6. [Running FBA in exometabolite media](#Step-6:-Running-FBA-in-exometabolite-media)\n\n### Table of other organisms with similar studies on exometabolomic data from WOM\n\n|Species name (links to genome landing page)|Genbank ID (links to NCBI landing page)|Narrative link (links to narrative)|\n|---|---|---|\n|[Pseudomonas fluorescens GW456-L13](https://narrative.kbase.us/#dataview/39597/13/1)|[GCF_001440325.1](https://www.ncbi.nlm.nih.gov/assembly/GCF_001440325.1/)|[Go to narrative](https://narrative.kbase.us/narrative/ws.39597.obj.12)|\n|[Pseudomonas FW300-N2E3](https://narrative.kbase.us/#dataview/39598/13/1)|[GCF_001307155.1](https://www.ncbi.nlm.nih.gov/assembly/GCF_001307155.1/)|[Go to narrative](https://narrative.kbase.us/narrative/ws.39598.obj.12)|\n|[Zymomonas mobilis ZM4](https://narrative.kbase.us/#dataview/39595/14/1)|[GCF_000007105.1](https://www.ncbi.nlm.nih.gov/assembly/GCF_000007105.1/)|[Go to narrative](https://narrative.kbase.us/narrative/ws.39595.obj.12)|\n|[Escherichia coli BW25113](https://narrative.kbase.us/#dataview/39594/13/1)|[GCF_000750555.1](https://www.ncbi.nlm.nih.gov/assembly/GCF_000750555.1/)|[Go to narrative](https://narrative.kbase.us/narrative/ws.39594.obj.12)|\n|[Microcoleus vaginatus PCC9802](https://narrative-dev.kbase.us/#dataview/39588/10/1)|Not found in GenBank|[Go to narrative](https://narrative.kbase.us/narrative/ws.39588.obj.1)|\n|[Synechococcus PCC7002](https://narrative-dev.kbase.us/#dataview/39590/13/1)|[GCA_000019485.1](https://www.ncbi.nlm.nih.gov/assembly/GCA_000019485.1/)|[Go to narrative](https://narrative.kbase.us/narrative/ws.39590.obj.12)|\n\n### Related publications\n\n1. [Kosina SM, Danielewicz MA, Mohammed M, Ray J, Suh Y, Yilmaz S, et al. Exometabolomics Assisted Design and Validation of Synthetic Obligate Mutualism. ACS Synth Biol. 2016;5:569\u201376. DOI: 10.1021/acssynbio.5b00236.](https://pubs.acs.org/doi/10.1021/acssynbio.5b00236)\n2. [Baran R, Brodie EL, Mayberry-Lewis J, Hummel E, Da Rocha UN, Chakraborty R, et al. Exometabolite niche partitioning among sympatric soil bacteria. Nat Commun. 2015;6:8289. DOI: 10.1038/ncomms9289.](https://www.nature.com/articles/ncomms9289)\n3. [Baran R, Bowen BP, Northen TR. Untargeted metabolic footprinting reveals a surprising breadth of metabolite uptake and release by Synechococcus sp. PCC 7002. Mol Biosyst. 2011;7:3200. DOI: 10.1039/c1mb05196b.](https://pubs.rsc.org/en/Content/ArticleLanding/2011/MB/c1mb05196b#!divAbstract)\n4. [Erbilgin O, Bowen BP, Kosina SM, Jenkins S, Lau RK, Northen TR. Dynamic substrate preferences and predicted metabolic properties of a simple microbial consortium. 2016. DOI: 10.1186/s12859-017-1478-2.](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-017-1478-2)\n5. [Kosina SM, Greiner A, Lau RK, Jenkins S, Baran R, Bowen BP, Northen TR. Web of Microbes (WoM): a curated microbial exometabolomics database for linking chemistry and microbes. In Review. 2018.](https://bmcmicrobiol.biomedcentral.com/articles/10.1186/s12866-018-1256-y)\n\n### Authors and affiliations\n\nSuzanne M. Kosina, Annette M. Greiner, Rebecca K. Lau, Stefan Jenkins, Richard Baran, Benjamin P. Bowen, and Trent Northen<sup>1*</sup>\n\n\\* Corresponding author: Trent Northen (TRNorthen@lbl.gov)   \n\n1. BioSciences, Berkeley Lab, Berkeley, CA, USA"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step 1: Importing isolate genome into narrative"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step 1: Importing isolate genome into narrative"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 21 Feb 2019 19:18:26 GMT",
                            "icon": "database",
                            "id": "cd155911-37c5-431d-8fcd-4a906076a898",
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseGenomes.Genome-9.0",
                            "title": "P_fluorescens_GW456-L13"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "69bf9329f61387ac0c1673bac6febaa9",
                                "id": 13,
                                "metadata": {
                                    "Assembly Object": "19217/118635/4",
                                    "Domain": "Bacteria",
                                    "GC content": "0.59846",
                                    "Genetic code": "11",
                                    "MD5": "2f5744d1963a2a3c5602231537aa3dc8",
                                    "Name": "Pseudomonas fluorescens",
                                    "Number contigs": "2",
                                    "Number of CDS": "5308",
                                    "Number of Protein Encoding Genes": "5308",
                                    "Size": "5757432",
                                    "Source": "RefSeq",
                                    "Source ID": "NZ_LKBJ01000002",
                                    "Taxonomy": "cellular organisms; Bacteria; Proteobacteria; Gammaproteobacteria; Pseudomonadales; Pseudomonadaceae; Pseudomonas; Pseudomonas fluorescens group",
                                    "accession": "GCF_001440325.1",
                                    "assembly_level": "Scaffold",
                                    "refid": "GCF_001440325",
                                    "refname": "GCF_001440325.1",
                                    "url": "ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/001/440/325/GCF_001440325.1_ASM144032v1/GCF_001440325.1_ASM144032v1_genomic.gbff.gz",
                                    "version": "1"
                                },
                                "name": "P_fluorescens_GW456-L13",
                                "obj_id": "ws.40589.obj.13",
                                "ref": "40589/13/1",
                                "ref_path": null,
                                "saveDate": "2019-02-15T16:15:00.000Z",
                                "save_date": "2019-02-15T16:15:00+0000",
                                "saved_by": "chenry",
                                "size": 19189915,
                                "type": "KBaseGenomes.Genome-9.0",
                                "typeMajorVersion": "9",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseGenomes",
                                "typeName": "Genome",
                                "version": 1,
                                "ws": "chenry:narrative_1550247300208",
                                "ws_id": 40589,
                                "wsid": 40589
                            },
                            "upas": {
                                "id": "[40589]/13/1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-c71fe86c-1de0-4e0e-907b-b376b473fe3f' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-c71fe86c-1de0-4e0e-907b-b376b473fe3f'), {\n                \"upas\": {\"id\": \"40589/13/1\"},\n                \"data\": {\"ws\": \"chenry:narrative_1550247300208\", \"id\": \"P_fluorescens_GW456-L13\"},\n                \"type\": \"viewer\",\n                \"widget\": \"kbaseGenomeView\",\n                \"cellId\": \"cd155911-37c5-431d-8fcd-4a906076a898\",\n                \"title\": \"P_fluorescens_GW456-L13\",\n                \"time\": 1550776708664\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 1,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"40589/13/1\",\n    cell_id=\"cd155911-37c5-431d-8fcd-4a906076a898\",\n    title=\"P_fluorescens_GW456-L13\",\n    tag=\"release\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step 2: Reannotating isolate genome with RAST in p..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step 2: Reannotating isolate genome with RAST in prepartion for modeling"
            },
            {
                "cell_type": "code",
                "execution_count": 1,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "18b20b4597b7f741a69e06c360b2b938f14e44d2",
                                "id": "RAST_SDK/reannotate_microbial_genome",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "input_genome",
                                                "target_property": "input_genome",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "call_features_rRNA_SEED",
                                                "target_property": "call_features_rRNA_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_tRNA_trnascan",
                                                "target_property": "call_features_tRNA_trnascan"
                                            },
                                            {
                                                "input_parameter": "call_selenoproteins",
                                                "target_property": "call_selenoproteins"
                                            },
                                            {
                                                "input_parameter": "call_pyrrolysoproteins",
                                                "target_property": "call_pyrrolysoproteins"
                                            },
                                            {
                                                "input_parameter": "call_features_repeat_region_SEED",
                                                "target_property": "call_features_repeat_region_SEED"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_suis_repeat",
                                                "target_property": "call_features_strep_suis_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_strep_pneumo_repeat",
                                                "target_property": "call_features_strep_pneumo_repeat"
                                            },
                                            {
                                                "input_parameter": "call_features_crispr",
                                                "target_property": "call_features_crispr"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_glimmer3",
                                                "target_property": "call_features_CDS_glimmer3"
                                            },
                                            {
                                                "input_parameter": "call_features_CDS_prodigal",
                                                "target_property": "call_features_CDS_prodigal"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_kmer_v2",
                                                "target_property": "annotate_proteins_kmer_v2"
                                            },
                                            {
                                                "input_parameter": "kmer_v1_parameters",
                                                "target_property": "kmer_v1_parameters"
                                            },
                                            {
                                                "input_parameter": "annotate_proteins_similarity",
                                                "target_property": "annotate_proteins_similarity"
                                            },
                                            {
                                                "input_parameter": "resolve_overlapping_features",
                                                "target_property": "resolve_overlapping_features"
                                            },
                                            {
                                                "input_parameter": "call_features_prophage_phispy",
                                                "target_property": "call_features_prophage_phispy"
                                            },
                                            {
                                                "input_parameter": "retain_old_anno_for_hypotheticals",
                                                "target_property": "retain_old_anno_for_hypotheticals"
                                            },
                                            {
                                                "generated_value": {
                                                    "prefix": "genome_"
                                                },
                                                "input_parameter": "output_genome",
                                                "target_property": "output_genome"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            }
                                        ],
                                        "kb_service_method": "annotate_genome",
                                        "kb_service_name": "RAST_SDK",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "output_genome",
                                                "target_property": "id"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "18b20b4597b7f741a69e06c360b2b938f14e44d2"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry",
                                            "olson"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation"
                                        ],
                                        "git_commit_hash": "18b20b4597b7f741a69e06c360b2b938f14e44d2",
                                        "icon": {
                                            "url": "img?method_id=RAST_SDK/reannotate_microbial_genome&image_name=rast-red.png&tag=release"
                                        },
                                        "id": "RAST_SDK/reannotate_microbial_genome",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "RAST_SDK",
                                        "name": "Annotate Microbial Genome",
                                        "namespace": "RAST_SDK",
                                        "output_types": [
                                            "KBaseGenomes.Genome"
                                        ],
                                        "subtitle": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                                        "tooltip": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                                        "ver": "0.0.16"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A genome (set of DNA contigs) including structural and functional annotations",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_genome",
                                            "optional": 0,
                                            "short_hint": "A genome (set of DNA contigs) including structural and functional annotations",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A genome with updated structural and functional annotations",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "output_genome",
                                            "optional": 1,
                                            "short_hint": "A genome with updated structural and functional annotations",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name to assign genome",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Name"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_rRNA_SEED",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features rRNA SEED"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_tRNA_trnascan",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features tRNA trnascan"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_selenoproteins",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call selenoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_pyrrolysoproteins",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call pyrrolysoproteins"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_repeat_region_SEED",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features repeat region SEED"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_suis_repeat",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features strep suis repeat"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_strep_pneumo_repeat",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features strep pneumo repeat"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_crispr",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features crispr"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_glimmer3",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features CDS glimmer3"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_CDS_prodigal",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features CDS prodigal"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_kmer_v2",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate proteins kmer v2"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "kmer_v1_parameters",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Kmer v1 parameters"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "annotate_proteins_similarity",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Annotate proteins similarity"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "retain_old_anno_for_hypotheticals",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Retain old annotations for hypotheticals"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "resolve_overlapping_features",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Resolve overlapping features"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "See manual page for description of annotation pipieline",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "call_features_prophage_phispy",
                                            "optional": 0,
                                            "short_hint": "See manual page for description of annotation pipieline",
                                            "ui_class": "parameter",
                                            "ui_name": "Call features prophage phispy"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseGenomeView"
                                    }
                                },
                                "tag": "release",
                                "version": "0.0.16"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "f50d07d1-3744-4f42-99a0-14f10b5661d8",
                                    "child_jobs": [],
                                    "creation_time": 1550247371250,
                                    "exec_start_time": 1550247386604,
                                    "finish_time": 1550247616018,
                                    "finished": 1,
                                    "job_id": "5c66e5c6e4b05851acb4a6b2",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "id": "P_fluorescens_GW456-L13.RAST",
                                            "report_name": "P_fluorescens_GW456-L13.RAST.report",
                                            "report_ref": "40589/17/2",
                                            "workspace": "chenry:narrative_1550247300208",
                                            "ws_report_id": "P_fluorescens_GW456-L13.RAST.report"
                                        }
                                    ],
                                    "run_id": "44c58f9e-a782-4f6e-904e-0d624bfe044f",
                                    "status": [
                                        "2019-02-15T16:20:16+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550247622316,
                                "launchState": {
                                    "cell_id": "f50d07d1-3744-4f42-99a0-14f10b5661d8",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T16:16:11.283340Z",
                                    "job_id": "5c66e5c6e4b05851acb4a6b2",
                                    "run_id": "44c58f9e-a782-4f6e-904e-0d624bfe044f"
                                },
                                "outputWidgetInfo": {
                                    "name": "kbaseGenomeView",
                                    "params": {
                                        "id": "P_fluorescens_GW456-L13.RAST",
                                        "report_name": "P_fluorescens_GW456-L13.RAST.report",
                                        "report_ref": "40589/17/2",
                                        "workspace_name": "chenry:narrative_1550247300208",
                                        "ws": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c66e5c6e4b05851acb4a6b2": {
                                        "cell": {
                                            "created": true,
                                            "id": "f528c5dd-86da-4f77-b6b4-2fab56c5e780"
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:20:22 GMT",
                                        "params": {
                                            "annotate_proteins_kmer_v2": 1,
                                            "annotate_proteins_similarity": 1,
                                            "call_features_CDS_glimmer3": 0,
                                            "call_features_CDS_prodigal": 0,
                                            "call_features_crispr": 0,
                                            "call_features_prophage_phispy": 0,
                                            "call_features_rRNA_SEED": 0,
                                            "call_features_repeat_region_SEED": 0,
                                            "call_features_strep_pneumo_repeat": 0,
                                            "call_features_strep_suis_repeat": 0,
                                            "call_features_tRNA_trnascan": 0,
                                            "call_pyrrolysoproteins": 0,
                                            "call_selenoproteins": 0,
                                            "input_genome": "P_fluorescens_GW456-L13",
                                            "kmer_v1_parameters": 1,
                                            "output_genome": "P_fluorescens_GW456-L13.RAST",
                                            "resolve_overlapping_features": 0,
                                            "retain_old_anno_for_hypotheticals": 0
                                        }
                                    }
                                }
                            },
                            "params": {
                                "annotate_proteins_kmer_v2": 1,
                                "annotate_proteins_similarity": 1,
                                "call_features_CDS_glimmer3": 0,
                                "call_features_CDS_prodigal": 0,
                                "call_features_crispr": 0,
                                "call_features_prophage_phispy": 0,
                                "call_features_rRNA_SEED": 0,
                                "call_features_repeat_region_SEED": 0,
                                "call_features_strep_pneumo_repeat": 0,
                                "call_features_strep_suis_repeat": 0,
                                "call_features_tRNA_trnascan": 0,
                                "call_pyrrolysoproteins": 0,
                                "call_selenoproteins": 0,
                                "input_genome": "P_fluorescens_GW456-L13",
                                "kmer_v1_parameters": 1,
                                "output_genome": "P_fluorescens_GW456-L13.RAST",
                                "resolve_overlapping_features": 0,
                                "retain_old_anno_for_hypotheticals": 0
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:15:43 GMT",
                            "id": "f50d07d1-3744-4f42-99a0-14f10b5661d8",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/RAST_SDK/reannotate_microbial_genome/release"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Annotate or re-annotate bacterial or archaeal genome using RASTtk.",
                            "title": "Annotate Microbial Genome"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"RAST_SDK/reannotate_microbial_genome\",\n    {\n        \"input_genome\": \"P_fluorescens_GW456-L13\",\n        \"output_genome\": \"P_fluorescens_GW456-L13.RAST\",\n        \"call_features_rRNA_SEED\": 0,\n        \"call_features_tRNA_trnascan\": 0,\n        \"call_selenoproteins\": 0,\n        \"call_pyrrolysoproteins\": 0,\n        \"call_features_repeat_region_SEED\": 0,\n        \"call_features_strep_suis_repeat\": 0,\n        \"call_features_strep_pneumo_repeat\": 0,\n        \"call_features_crispr\": 0,\n        \"call_features_CDS_glimmer3\": 0,\n        \"call_features_CDS_prodigal\": 0,\n        \"annotate_proteins_kmer_v2\": 1,\n        \"kmer_v1_parameters\": 1,\n        \"annotate_proteins_similarity\": 1,\n        \"retain_old_anno_for_hypotheticals\": 0,\n        \"resolve_overlapping_features\": 0,\n        \"call_features_prophage_phispy\": 0\n    },\n    tag=\"release\",\n    version=\"0.0.16\",\n    cell_id=\"f50d07d1-3744-4f42-99a0-14f10b5661d8\",\n    run_id=\"44c58f9e-a782-4f6e-904e-0d624bfe044f\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:20:22 GMT",
                            "icon": "arrow-right",
                            "id": "f528c5dd-86da-4f77-b6b4-2fab56c5e780",
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "title": "Output from Annotate Microbial Genome"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "upas": {
                                "id": "[40589]/16/2"
                            }
                        },
                        "outputCell": {
                            "jobId": "5c66e5c6e4b05851acb4a6b2",
                            "parentCellId": "f50d07d1-3744-4f42-99a0-14f10b5661d8",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseGenomeView",
                                "params": {
                                    "id": "P_fluorescens_GW456-L13.RAST",
                                    "report_name": "P_fluorescens_GW456-L13.RAST.report",
                                    "report_ref": "40589/17/2",
                                    "workspace_name": "chenry:narrative_1550247300208",
                                    "ws": "chenry:narrative_1550247300208"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-68be50b6-8f81-4fa2-bcd5-9a3ac8cbbb4d' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-68be50b6-8f81-4fa2-bcd5-9a3ac8cbbb4d'), {\n                \"upas\": {\"id\": \"40589/16/2\"},\n                \"data\": {\"workspace_name\": \"chenry:narrative_1550247300208\", \"report_ref\": \"40589/17/2\", \"ws\": \"chenry:narrative_1550247300208\", \"id\": \"P_fluorescens_GW456-L13.RAST\", \"report_name\": \"P_fluorescens_GW456-L13.RAST.report\"},\n                \"type\": \"method\",\n                \"widget\": \"kbaseGenomeView\",\n                \"cellId\": \"f528c5dd-86da-4f77-b6b4-2fab56c5e780\",\n                \"title\": \"\",\n                \"time\": 1550247622463\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 3,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseGenomeView\",\n    {\n        \"workspace_name\": \"chenry:narrative_1550247300208\",\n        \"report_ref\": \"40589/17/2\",\n        \"ws\": \"chenry:narrative_1550247300208\",\n        \"id\": \"P_fluorescens_GW456-L13.RAST\",\n        \"report_name\": \"P_fluorescens_GW456-L13.RAST.report\"\n    },\n    tag=\"release\",\n    cell_id=\"f528c5dd-86da-4f77-b6b4-2fab56c5e780\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step 3: Constructing a genome-scale metabolic mode..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step 3: Constructing a genome-scale metabolic model based on RAST annotations"
            },
            {
                "cell_type": "code",
                "execution_count": 2,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "584206644abfeb5f3184783aaa27b3a0993ca583",
                                "id": "fba_tools/build_metabolic_model",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "genome_id",
                                                "target_property": "genome_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "fbamodel_output_id",
                                                "target_property": "fbamodel_output_id"
                                            },
                                            {
                                                "input_parameter": "template_id",
                                                "target_property": "template_id"
                                            },
                                            {
                                                "input_parameter": "gapfill_model",
                                                "target_property": "gapfill_model"
                                            },
                                            {
                                                "input_parameter": "custom_bound_list",
                                                "target_property": "custom_bound_list"
                                            },
                                            {
                                                "input_parameter": "media_supplement_list",
                                                "target_property": "media_supplement_list"
                                            },
                                            {
                                                "input_parameter": "minimum_target_flux",
                                                "target_property": "minimum_target_flux"
                                            }
                                        ],
                                        "kb_service_method": "build_metabolic_model",
                                        "kb_service_name": "fba_tools",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "constant_value": "KBaseFBA.FBAModel",
                                                "target_property": "type"
                                            },
                                            {
                                                "input_parameter": "fbamodel_output_id",
                                                "target_property": "obj"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "584206644abfeb5f3184783aaa27b3a0993ca583"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry"
                                        ],
                                        "categories": [
                                            "active",
                                            "metabolic_modeling"
                                        ],
                                        "git_commit_hash": "584206644abfeb5f3184783aaa27b3a0993ca583",
                                        "icon": {
                                            "url": "img?method_id=fba_tools/build_metabolic_model&image_name=modelseed-teal.png&tag=release"
                                        },
                                        "id": "fba_tools/build_metabolic_model",
                                        "input_types": [
                                            "KBaseBiochem.Media",
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "fba_tools",
                                        "name": "Build Metabolic Model",
                                        "namespace": "fba_tools",
                                        "output_types": [
                                            "KBaseFBA.FBAModel"
                                        ],
                                        "subtitle": "Generate a draft metabolic model based on an annotated genome.",
                                        "tooltip": "Generate a draft metabolic model based on an annotated genome.",
                                        "ver": "1.7.6"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A genome with functional annotations generated by KBase (using one of the annotation apps)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genome_id",
                                            "optional": 0,
                                            "short_hint": "A genome with functional annotations generated by KBase",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "Genome ID for modeling",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth. In this function, the media is used as the growth condition for gapfilling, if gapfilling is performed. If none is specified complete media is used. The  Complete  media is an abstraction of what s available in our biochemistry database. Every compound that can be transported into the extracellular compartment or, in other words, for which a transport reaction is available is used in the complete media. This list is built in real-time, meaning that whenever you run FBA with complete media, the available transporters are parsed from the media database and is therefore not stored permanently in any media object in the workspace.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_id",
                                            "optional": 1,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth. In this function, the media is used as the growth condition for gapfilling, if gapfilling is performed. If none is specified complete media is used.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "Growth condition for gapfilling",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Gapfilling Media (defaults to complete media)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Enter a name for the metabolic model to be created",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fbamodel_output_id",
                                            "optional": 0,
                                            "short_hint": "Enter a name for the metabolic model to be created",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Output metabolic model name",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output model"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "auto"
                                            ],
                                            "description": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope. KBase primarily uses four template models: (i) Gram positive microbe, (ii) Gram negative microbe, (iii) Core pathways microbe, and (iv) Plant. These template models differ from each other by biomass composition and biochemical reaction functional associations.",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "Automatic selection",
                                                        "index": 0,
                                                        "value": "auto"
                                                    },
                                                    {
                                                        "display": "Gram negative",
                                                        "index": 1,
                                                        "value": "gramneg"
                                                    },
                                                    {
                                                        "display": "Gram positive",
                                                        "index": 2,
                                                        "value": "grampos"
                                                    },
                                                    {
                                                        "display": "Plant",
                                                        "index": 3,
                                                        "value": "plant"
                                                    },
                                                    {
                                                        "display": "Core metabolism",
                                                        "index": 4,
                                                        "value": "core"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "template_id",
                                            "optional": 1,
                                            "short_hint": "Models are generated based on a default template model in KBase. Template models capture the necessary biochemical information based on user-defined scope.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Template for reconstruction"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable it to produce biomass in a specified media.",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "gapfill_model",
                                            "optional": 0,
                                            "short_hint": "Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable it to produce biomass in a specified media.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Gapfill model?"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Custom bounds on reaction or exchange flux (e.g., 0;rxn00001;5, 0;cpd00001_e0;5)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "custom_bound_list",
                                            "optional": 1,
                                            "short_hint": "Custom bounds on reaction or exchange flux (e.g., 0;rxn00001;5, 0;cpd00001_e0;5)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "e.g. 0;rxn00001;5",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Custom flux bounds"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Specify additional compounds to add to media one at a time by using  add another media supplement  button",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "media_supplement_list",
                                            "optional": 1,
                                            "short_hint": "Specify additional compounds to add to media one at a time by using  add another media supplement  button",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelcompounds"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelcompounds/[*]/id",
                                                        "modelcompounds/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Media supplement"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.1"
                                            ],
                                            "description": "The minimum flux that the target reaction will have when the gapfilling is performed",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "minimum_target_flux",
                                            "optional": 0,
                                            "short_hint": "The minimum flux that the target reaction will have when the gapfilling is performed",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum reaction flux"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTabTable"
                                    }
                                },
                                "tag": "release",
                                "version": "1.7.6"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "bbedad37-140c-40c8-9568-f67c48e0f5e8",
                                    "child_jobs": [],
                                    "creation_time": 1550777109650,
                                    "exec_start_time": 1550777128151,
                                    "finish_time": 1550777276095,
                                    "finished": 1,
                                    "job_id": "5c6efb10e4b05851acb4b39e",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "html_report": "<p>The model P_flourescens_GW456-L13.mdl was gapfilled in 40589/176/1 media to force a minimum flux of 0.1 through the bio1 reaction.</p>",
                                            "new_fba_ref": "40589/21/3",
                                            "new_fbamodel_ref": "40589/20/3",
                                            "number_gapfilled_reactions": 0,
                                            "number_removed_biomass_compounds": 0,
                                            "report_name": "P_flourescens_GW456-L13.mdl.report",
                                            "report_ref": "40589/22/3"
                                        }
                                    ],
                                    "run_id": "06d60a68-4fb8-48c1-9da8-45c8c37d5f83",
                                    "status": [
                                        "2019-02-21T19:27:56+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550777278620,
                                "launchState": {
                                    "cell_id": "bbedad37-140c-40c8-9568-f67c48e0f5e8",
                                    "event": "launched_job",
                                    "event_at": "2019-02-21T19:25:09.686501Z",
                                    "job_id": "5c6efb10e4b05851acb4b39e",
                                    "run_id": "06d60a68-4fb8-48c1-9da8-45c8c37d5f83"
                                },
                                "outputWidgetInfo": {
                                    "name": "kbaseTabTable",
                                    "params": {
                                        "obj": "P_flourescens_GW456-L13.mdl",
                                        "report_name": "P_flourescens_GW456-L13.mdl.report",
                                        "report_ref": "40589/22/3",
                                        "type": "KBaseFBA.FBAModel",
                                        "workspace_name": "chenry:narrative_1550247300208",
                                        "ws": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "release"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c6efb10e4b05851acb4b39e": {
                                        "cell": {
                                            "created": true,
                                            "id": "ca0a1411-0b76-4804-86de-cb9f5f36db77"
                                        },
                                        "createdAt": "Thu, 21 Feb 2019 19:27:58 GMT",
                                        "params": {
                                            "custom_bound_list": [],
                                            "fbamodel_output_id": "P_flourescens_GW456-L13.mdl",
                                            "gapfill_model": 1,
                                            "genome_id": "P_fluorescens_GW456-L13.RAST",
                                            "media_id": "Carbon-D-Glucose",
                                            "media_supplement_list": [],
                                            "minimum_target_flux": 0.1,
                                            "template_id": "auto"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "custom_bound_list": [],
                                "fbamodel_output_id": "P_flourescens_GW456-L13.mdl",
                                "gapfill_model": 1,
                                "genome_id": "P_fluorescens_GW456-L13.RAST",
                                "media_id": "Carbon-D-Glucose",
                                "media_supplement_list": [],
                                "minimum_target_flux": 0.1,
                                "template_id": "auto"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 21 Feb 2019 19:22:47 GMT",
                            "id": "bbedad37-140c-40c8-9568-f67c48e0f5e8",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/fba_tools/build_metabolic_model/release"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Generate a draft metabolic model based on an annotated genome.",
                            "title": "Build Metabolic Model"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"fba_tools/build_metabolic_model\",\n    {\n        \"genome_id\": \"P_fluorescens_GW456-L13.RAST\",\n        \"media_id\": \"Carbon-D-Glucose\",\n        \"fbamodel_output_id\": \"P_flourescens_GW456-L13.mdl\",\n        \"template_id\": \"auto\",\n        \"gapfill_model\": 1,\n        \"custom_bound_list\": [],\n        \"media_supplement_list\": [],\n        \"minimum_target_flux\": 0.1\n    },\n    tag=\"release\",\n    version=\"1.7.6\",\n    cell_id=\"bbedad37-140c-40c8-9568-f67c48e0f5e8\",\n    run_id=\"06d60a68-4fb8-48c1-9da8-45c8c37d5f83\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 3,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Thu, 21 Feb 2019 19:27:58 GMT",
                            "icon": "arrow-right",
                            "id": "ca0a1411-0b76-4804-86de-cb9f5f36db77",
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "title": "Output from Build Metabolic Model"
                        },
                        "cellState": {
                            "toggleMinMax": "minimized"
                        },
                        "dataCell": {
                            "upas": {
                                "obj": "[40589]/20/3"
                            }
                        },
                        "outputCell": {
                            "jobId": "5c6efb10e4b05851acb4b39e",
                            "parentCellId": "bbedad37-140c-40c8-9568-f67c48e0f5e8",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseTabTable",
                                "params": {
                                    "obj": "P_flourescens_GW456-L13.mdl",
                                    "report_name": "P_flourescens_GW456-L13.mdl.report",
                                    "report_ref": "40589/22/3",
                                    "type": "KBaseFBA.FBAModel",
                                    "workspace_name": "chenry:narrative_1550247300208",
                                    "ws": "chenry:narrative_1550247300208"
                                },
                                "tag": "release"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-60ec70e4-789b-440f-94d3-d5287720d2f3' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-60ec70e4-789b-440f-94d3-d5287720d2f3'), {\n                \"upas\": {\"obj\": \"40589/20/3\"},\n                \"data\": {\"obj\": \"P_flourescens_GW456-L13.mdl\", \"workspace_name\": \"chenry:narrative_1550247300208\", \"ws\": \"chenry:narrative_1550247300208\", \"report_ref\": \"40589/22/3\", \"type\": \"KBaseFBA.FBAModel\", \"report_name\": \"P_flourescens_GW456-L13.mdl.report\"},\n                \"type\": \"method\",\n                \"widget\": \"kbaseTabTable\",\n                \"cellId\": \"ca0a1411-0b76-4804-86de-cb9f5f36db77\",\n                \"title\": \"\",\n                \"time\": 1550777278755\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 3,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseTabTable\",\n    {\n        \"obj\": \"P_flourescens_GW456-L13.mdl\",\n        \"report_name\": \"P_flourescens_GW456-L13.mdl.report\",\n        \"ws\": \"chenry:narrative_1550247300208\",\n        \"workspace_name\": \"chenry:narrative_1550247300208\",\n        \"report_ref\": \"40589/22/3\",\n        \"type\": \"KBaseFBA.FBAModel\"\n    },\n    tag=\"release\",\n    cell_id=\"ca0a1411-0b76-4804-86de-cb9f5f36db77\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step 4: Reconciling metabolic model to exometaboli..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": false,
                            "toggleMinMax": "maximized"
                        }
                    }
                },
                "source": "### Step 4: Reconciling metabolic model to exometabolite data"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step 5:. Finding gene candidates for gapfilled rea..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step 5:. Finding gene candidates for gapfilled reactions"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Additions to narrative for betaine analysis - adde..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "## Additions to narrative for betaine analysis - added by Adam Arkin"
            },
            {
                "cell_type": "code",
                "execution_count": null,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "0ab8e60f63b2b85a7b69869d7d13ad4859b46a64",
                                "id": "fba_tools/fit_exometabolite_data",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "fbamodel_id",
                                                "target_property": "fbamodel_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "metabolite_matrix_ref",
                                                "target_property": "metabolite_matrix_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "target_reaction",
                                                "target_property": "target_reaction"
                                            },
                                            {
                                                "input_parameter": "fbamodel_output_id",
                                                "target_property": "fbamodel_output_id"
                                            },
                                            {
                                                "input_parameter": "source_fbamodel_id",
                                                "target_property": "source_fbamodel_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "metabolite_condition",
                                                "target_property": "metabolite_condition"
                                            },
                                            {
                                                "input_parameter": "reaction_ko_list",
                                                "target_property": "reaction_ko_list"
                                            },
                                            {
                                                "input_parameter": "equal_weighting",
                                                "target_property": "equal_weighting"
                                            },
                                            {
                                                "input_parameter": "exomedia_output_id",
                                                "target_property": "exomedia_output_id"
                                            },
                                            {
                                                "input_parameter": "omindirectional",
                                                "target_property": "omindirectional"
                                            },
                                            {
                                                "input_parameter": "minimum_target_flux",
                                                "target_property": "minimum_target_flux"
                                            },
                                            {
                                                "input_parameter": "media_ref",
                                                "target_property": "media_ref",
                                                "target_type_transform": "resolved-ref"
                                            }
                                        ],
                                        "kb_service_method": "fit_exometabolite_data",
                                        "kb_service_name": "fba_tools",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "ws"
                                            },
                                            {
                                                "constant_value": "KBaseFBA.FBAModel",
                                                "target_property": "type"
                                            },
                                            {
                                                "input_parameter": "fbamodel_output_id",
                                                "target_property": "obj"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "0ab8e60f63b2b85a7b69869d7d13ad4859b46a64"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry"
                                        ],
                                        "categories": [
                                            "active",
                                            "metabolic_modeling"
                                        ],
                                        "git_commit_hash": "0ab8e60f63b2b85a7b69869d7d13ad4859b46a64",
                                        "icon": {
                                            "url": "img?method_id=fba_tools/fit_exometabolite_data&image_name=modelseed-teal.png&tag=beta"
                                        },
                                        "id": "fba_tools/fit_exometabolite_data",
                                        "input_types": [
                                            "KBaseBiochem.Media",
                                            "KBaseFBA.FBAModel",
                                            "KBaseMatrices.MetaboliteMatrix"
                                        ],
                                        "module_name": "fba_tools",
                                        "name": "Fit Model to Exometabolite Data",
                                        "namespace": "fba_tools",
                                        "output_types": [
                                            "KBaseBiochem.Media",
                                            "KBaseFBA.FBAModel"
                                        ],
                                        "subtitle": "Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable production and consumption of as many exometabolites as possible",
                                        "tooltip": "Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable production and consumption of as many exometabolites as possible",
                                        "ver": "1.7.6"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fbamodel_id",
                                            "optional": 0,
                                            "short_hint": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input model"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Matrix of exometabolite data to fit model to",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "metabolite_matrix_ref",
                                            "optional": 0,
                                            "short_hint": "Matrix of exometabolite data to fit model to",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseMatrices.MetaboliteMatrix"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Exometabolite matrix"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "ID of the data column to fit in the analysis",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "metabolite_condition",
                                            "optional": 0,
                                            "short_hint": "ID of the data column to fit in the analysis",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "parameter_id": "metabolite_matrix_ref",
                                                    "path_to_subdata": [
                                                        "data",
                                                        "col_ids"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "data/col_ids"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Data column to fit"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "bio1"
                                            ],
                                            "description": "ID of reaction that must carry flux in the gapfilled model",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "target_reaction",
                                            "optional": 0,
                                            "short_hint": "ID of reaction that must carry flux in the gapfilled model",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 1,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelreactions"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelreactions/[*]/id",
                                                        "modelreactions/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reaction to target"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Name of the model produced by the gapfill analysis",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fbamodel_output_id",
                                            "optional": 0,
                                            "short_hint": "Name of the model produced by the gapfill analysis",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output model"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Name of base media formulation to use when fitting exometabolite data (default is Complete media)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_ref",
                                            "optional": 1,
                                            "short_hint": "Name of base media formulation to use when fitting exometabolite data (default is Complete media)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Input base media"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Name of the media with successfully reconciled exometabolites",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "exomedia_output_id",
                                            "optional": 1,
                                            "short_hint": "Name of the media with successfully reconciled exometabolites",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output media"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A source gapfill model can be used to add additional reactions and compounds in gapfilling that are not found in the default KBase gapfilling database; the default gapfill database will still be utilized but it will be expanded with reactions in the source model",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "source_fbamodel_id",
                                            "optional": 1,
                                            "short_hint": "A source gapfill model can be used to add additional reactions and compounds in gapfilling that are not found in the default KBase gapfilling database; the default gapfill database will still be utilized but it will be expanded with reactions in the source model",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Source Gapfill Model"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "User may add reaction knockout information one at a time using  add another reaction knockout  button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "reaction_ko_list",
                                            "optional": 1,
                                            "short_hint": "User may add reaction knockout information one at a time using  add another reaction knockout  button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelreactions"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelreactions/[*]/id",
                                                        "modelreactions/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reaction Knockouts"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Ignore directionality of exometabolite data",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "omindirectional",
                                            "optional": 0,
                                            "short_hint": "Ignore directionality of exometabolite data",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Omnidirectional"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Weigh all exometabolites equally",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "equal_weighting",
                                            "optional": 0,
                                            "short_hint": "Weigh all exometabolites equally",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Equal weighting"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.1"
                                            ],
                                            "description": "The minimum flux that the transporter of the target compound should have",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "minimum_target_flux",
                                            "optional": 0,
                                            "short_hint": "The minimum flux that the transporter of the target compound should have",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Minimum transport flux"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "kbaseTabTable"
                                    }
                                },
                                "tag": "beta",
                                "version": "1.7.6"
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "editing",
                                    "params": "incomplete"
                                }
                            },
                            "output": {
                                "byJob": {}
                            },
                            "params": {
                                "equal_weighting": 0,
                                "exomedia_output_id": null,
                                "fbamodel_id": null,
                                "fbamodel_output_id": null,
                                "media_ref": null,
                                "metabolite_condition": [
                                    null
                                ],
                                "metabolite_matrix_ref": "WOM_exometabolite_profiles",
                                "minimum_target_flux": 0.1,
                                "omindirectional": 0,
                                "reaction_ko_list": [],
                                "source_fbamodel_id": null,
                                "target_reaction": [
                                    "bio1"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Thu, 21 Feb 2019 20:14:02 GMT",
                            "id": "36f62c0a-07ce-46fa-b1d0-e9f213a6d7b2",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/fba_tools/fit_exometabolite_data/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:14:02 GMT",
                            "status": "new",
                            "subtitle": "Identify the minimal set of biochemical reactions to add to a draft metabolic model to enable production and consumption of as many exometabolites as possible",
                            "title": "Fit Model to Exometabolite Data"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": ""
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B1: Identifying the pathway used by this orga..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B1: Identifying the pathway used by this organism to make betaine"
            },
            {
                "cell_type": "code",
                "execution_count": 22,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "e445caf84edc20738d49de61c7f96a0b783f9644",
                                "id": "fba_tools/predict_metabolite_biosynthesis_pathway",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace"
                                            },
                                            {
                                                "input_parameter": "fbamodel_id",
                                                "target_property": "fbamodel_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "media_id",
                                                "target_property": "media_id",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "target_metabolite_list",
                                                "target_property": "target_metabolite_list"
                                            },
                                            {
                                                "input_parameter": "fba_output_id",
                                                "target_property": "fba_output_id"
                                            },
                                            {
                                                "input_parameter": "feature_ko_list",
                                                "target_property": "feature_ko_list"
                                            },
                                            {
                                                "input_parameter": "reaction_ko_list",
                                                "target_property": "reaction_ko_list"
                                            },
                                            {
                                                "input_parameter": "source_metabolite_list",
                                                "target_property": "source_metabolite_list"
                                            },
                                            {
                                                "input_parameter": "expseries_id",
                                                "target_property": "expseries_id",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "expression_condition",
                                                "target_property": "expression_condition"
                                            },
                                            {
                                                "input_parameter": "exp_threshold_percentile",
                                                "target_property": "exp_threshold_percentile"
                                            },
                                            {
                                                "input_parameter": "exp_threshold_margin",
                                                "target_property": "exp_threshold_margin"
                                            },
                                            {
                                                "input_parameter": "activation_coefficient",
                                                "target_property": "activation_coefficient"
                                            }
                                        ],
                                        "kb_service_method": "predict_metabolite_biosynthesis_pathway",
                                        "kb_service_name": "fba_tools",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "e445caf84edc20738d49de61c7f96a0b783f9644"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "chenry"
                                        ],
                                        "categories": [
                                            "active",
                                            "metabolic_modeling"
                                        ],
                                        "git_commit_hash": "e445caf84edc20738d49de61c7f96a0b783f9644",
                                        "icon": {
                                            "url": "img?method_id=fba_tools/predict_metabolite_biosynthesis_pathway&image_name=fba-teal.png&tag=beta"
                                        },
                                        "id": "fba_tools/predict_metabolite_biosynthesis_pathway",
                                        "input_types": [
                                            "KBaseBiochem.Media",
                                            "KBaseBiochem.MediaSet",
                                            "KBaseFBA.FBAModel",
                                            "KBaseFeatureValues.ExpressionMatrix"
                                        ],
                                        "module_name": "fba_tools",
                                        "name": "Predict metabolite biosynthesis pathway",
                                        "namespace": "fba_tools",
                                        "output_types": [
                                            "KBaseFBA.FBA"
                                        ],
                                        "subtitle": "Predict metabolite biosynthesis pathway",
                                        "tooltip": "Predict metabolite biosynthesis pathway",
                                        "ver": "1.7.6"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fbamodel_id",
                                            "optional": 0,
                                            "short_hint": "The metabolic network model consisting of genome-wide set of stoichiometric reactions, compounds, and the weighted components of the biomass on which you wish to carry out Flux Balance Analysis",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "Model for FBA",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBAModel"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "FBA model"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Media specifies the set of chemical compounds organism can use for its growth. If none is specified complete media is used. The  Complete  media is an abstraction of what s available in our biochemistry database. Every compound that can be transported into the extracellular compartment or, in other words, for which a transport reaction is available is used in the complete media. This list is built in real-time, meaning that whenever you run FBA with complete media, the available transporters are parsed from the media database and is therefore not stored permanently in any media object in the workspace.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "media_id",
                                            "optional": 1,
                                            "short_hint": "Media specifies the set of chemical compounds organism can use for its growth. If none is specified complete media is used.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "Growth condition for FBA",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseBiochem.Media",
                                                    "KBaseBiochem.MediaSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Media (defaults to complete media)"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Metabolites to find pathways for",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "target_metabolite_list",
                                            "optional": 1,
                                            "short_hint": "Metabolites to find pathways for",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelcompounds"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelcompounds/[*]/id",
                                                        "modelcompounds/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Metabolites to find pathways for"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Additional source compounds",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "source_metabolite_list",
                                            "optional": 1,
                                            "short_hint": "Additional source compounds",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelcompounds"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelcompounds/[*]/id",
                                                        "modelcompounds/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Additional source compounds"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The fluxes for all reactions in the metabolic model and the predicted growth of the biomass according to the FBA model",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "fba_output_id",
                                            "optional": 0,
                                            "short_hint": "The fluxes for all reactions in the metabolic model and the predicted growth of the biomass according to the FBA model",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "ID for saving FBA results",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFBA.FBA"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output FBA Result"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "User may add gene knockout information one at a time using  add another gene knockout  button. Gene IDs should be in the same format that appears in your metabolic model (e.g., kb|g.220339.CDS.2927)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "feature_ko_list",
                                            "optional": 1,
                                            "short_hint": "User may add gene knockout information one at a time using  add another gene knockout  button. Gene IDs should be in the same format that appears in your metabolic model (e.g., kb|g.220339.CDS.2927)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Gene Knockouts"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "User may add reaction knockout information one at a time using  add another reaction knockout  button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "reaction_ko_list",
                                            "optional": 1,
                                            "short_hint": "User may add reaction knockout information one at a time using  add another reaction knockout  button. Reaction IDs should be in the same format that appears in your metabolic model (e.g rxn00002_c0)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 1,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "description_template": "- {{name}}",
                                                    "parameter_id": "fbamodel_id",
                                                    "path_to_subdata": [
                                                        "modelreactions"
                                                    ],
                                                    "selection_description": [
                                                        "name"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "modelreactions/[*]/id",
                                                        "modelreactions/[*]/name"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Reaction Knockouts"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "An imported ExpressionMatrix containing gene expression values, one condition (column) of which will be used to constrain reaction activity in FBA",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "expseries_id",
                                            "optional": 1,
                                            "short_hint": "An imported ExpressionMatrix containing gene expression values, one condition (column) of which will be used to constrain reaction activity in FBA",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseFeatureValues.ExpressionMatrix"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Expression data set"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Specific condition in expression matrix to which reaction activity in FBA should be fit",
                                            "disabled": 0,
                                            "field_type": "textsubdata",
                                            "id": "expression_condition",
                                            "optional": 1,
                                            "short_hint": "Specific condition in expression matrix to which reaction activity in FBA should be fit",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": []
                                            },
                                            "textsubdata_options": {
                                                "allow_custom": 0,
                                                "multiselection": 0,
                                                "placeholder": "",
                                                "show_src_obj": 1,
                                                "subdata_selection": {
                                                    "parameter_id": "expseries_id",
                                                    "path_to_subdata": [
                                                        "data",
                                                        "col_ids"
                                                    ],
                                                    "selection_id": "id",
                                                    "subdata_included": [
                                                        "data/col_ids"
                                                    ]
                                                }
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Expression condition"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.5"
                                            ],
                                            "description": "Reactions with expression values in the percentile above this threshold are considered ON; if below, they are considered OFF",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "exp_threshold_percentile",
                                            "optional": 0,
                                            "short_hint": "Reactions with expression values in the percentile above this threshold are considered ON; if below, they are considered OFF",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Expression threshold"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.1"
                                            ],
                                            "description": "Range of uncertainty for classification of reaction activity based on expression threshold",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "exp_threshold_margin",
                                            "optional": 0,
                                            "short_hint": "Range of uncertainty for classification of reaction activity based on expression threshold",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Expression uncertainty"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0.5"
                                            ],
                                            "description": "What fraction of the optimal objective value should analyses like FVA, single gene knockout, and transcriptomic FBA be constrained at? Values between 0 and 1.",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "activation_coefficient",
                                            "optional": 0,
                                            "short_hint": "What fraction of the optimal objective value should analyses like FVA, single gene knockout, and transcriptomic FBA be constrained at? Values between 0 and 1.",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Activation coefficient"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "1.7.6"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "71043e85-979d-41da-8ff7-2b1e9a9dc548",
                                    "child_jobs": [],
                                    "creation_time": 1550252660335,
                                    "exec_start_time": 1550252678898,
                                    "finish_time": 1550252726461,
                                    "finished": 1,
                                    "job_id": "5c66fa6fe4b05851acb4a744",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "Betaine_pathway_FBA.pathway.report",
                                            "report_ref": "40589/30/2"
                                        }
                                    ],
                                    "run_id": "dd698182-95f4-48c3-9a29-e80648060f8f",
                                    "status": [
                                        "2019-02-15T17:45:26+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550252734956,
                                "launchState": {
                                    "cell_id": "71043e85-979d-41da-8ff7-2b1e9a9dc548",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T17:44:20.368560Z",
                                    "job_id": "5c66fa6fe4b05851acb4a744",
                                    "run_id": "dd698182-95f4-48c3-9a29-e80648060f8f"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "Betaine_pathway_FBA.pathway.report",
                                        "report_ref": "40589/30/2",
                                        "workspace_name": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Predict metabolite biosynthesis pathway",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5c66e9e3e4b05851acb4a6bf": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:35:01 GMT",
                                        "params": {
                                            "activation_coefficient": 0.5,
                                            "exp_threshold_margin": 0.1,
                                            "exp_threshold_percentile": 0.5,
                                            "expression_condition": [],
                                            "expseries_id": null,
                                            "fba_output_id": "Betaine_pathway_FBA",
                                            "fbamodel_id": "P_flourescens_GW456-L13.mdl.recon",
                                            "feature_ko_list": [],
                                            "media_id": null,
                                            "reaction_ko_list": [],
                                            "source_metabolite_list": [],
                                            "target_metabolite_list": [
                                                "cpd00540_c0"
                                            ]
                                        }
                                    },
                                    "5c66fa6fe4b05851acb4a744": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 17:45:34 GMT",
                                        "params": {
                                            "activation_coefficient": 0.5,
                                            "exp_threshold_margin": 0.1,
                                            "exp_threshold_percentile": 0.5,
                                            "expression_condition": [],
                                            "expseries_id": null,
                                            "fba_output_id": "Betaine_pathway_FBA",
                                            "fbamodel_id": "P_flourescens_GW456-L13.mdl.recon",
                                            "feature_ko_list": [],
                                            "media_id": null,
                                            "reaction_ko_list": [],
                                            "source_metabolite_list": [],
                                            "target_metabolite_list": [
                                                "cpd00540_c0"
                                            ]
                                        }
                                    }
                                }
                            },
                            "params": {
                                "activation_coefficient": 0.5,
                                "exp_threshold_margin": 0.1,
                                "exp_threshold_percentile": 0.5,
                                "expression_condition": [],
                                "expseries_id": null,
                                "fba_output_id": "Betaine_pathway_FBA",
                                "fbamodel_id": "P_flourescens_GW456-L13.mdl.recon",
                                "feature_ko_list": [],
                                "media_id": null,
                                "reaction_ko_list": [],
                                "source_metabolite_list": [],
                                "target_metabolite_list": [
                                    "cpd00540_c0"
                                ]
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:30:08 GMT",
                            "id": "71043e85-979d-41da-8ff7-2b1e9a9dc548",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/fba_tools/predict_metabolite_biosynthesis_pathway/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Predict metabolite biosynthesis pathway",
                            "title": "Predict metabolite biosynthesis pathway"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"fba_tools/predict_metabolite_biosynthesis_pathway\",\n    {\n        \"fbamodel_id\": \"P_flourescens_GW456-L13.mdl.recon\",\n        \"media_id\": None,\n        \"target_metabolite_list\": [\"cpd00540_c0\"],\n        \"source_metabolite_list\": [],\n        \"fba_output_id\": \"Betaine_pathway_FBA\",\n        \"feature_ko_list\": [],\n        \"reaction_ko_list\": [],\n        \"expseries_id\": None,\n        \"expression_condition\": [],\n        \"exp_threshold_percentile\": 0.5,\n        \"exp_threshold_margin\": 0.1,\n        \"activation_coefficient\": 0.5\n    },\n    tag=\"beta\",\n    version=\"e445caf84edc20738d49de61c7f96a0b783f9644\",\n    cell_id=\"71043e85-979d-41da-8ff7-2b1e9a9dc548\",\n    run_id=\"dd698182-95f4-48c3-9a29-e80648060f8f\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B2: Identifying gene candidates for missing g..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B2: Identifying gene candidates for missing genes in pathway"
            },
            {
                "cell_type": "code",
                "execution_count": 15,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "b3460385b29e058580923f6fb737d795cf0b52c4",
                                "id": "kb_reaction_gene_finder/find_genes_from_similar_reactions",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace_id",
                                                "target_property": "workspace_id"
                                            },
                                            {
                                                "input_parameter": "reaction_set",
                                                "target_property": "reaction_set"
                                            },
                                            {
                                                "input_parameter": "structural_similarity_floor",
                                                "target_property": "structural_similarity_floor"
                                            },
                                            {
                                                "input_parameter": "difference_similarity_floor",
                                                "target_property": "difference_similarity_floor"
                                            },
                                            {
                                                "input_parameter": "blast_score_floor",
                                                "target_property": "blast_score_floor"
                                            },
                                            {
                                                "input_parameter": "query_genome_ref",
                                                "target_property": "query_genome_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "feature_set_prefix",
                                                "target_property": "feature_set_prefix"
                                            },
                                            {
                                                "input_parameter": "number_of_hits_to_report",
                                                "target_property": "number_of_hits_to_report"
                                            },
                                            {
                                                "input_parameter": "bulk_reaction_ids",
                                                "target_property": "bulk_reaction_ids"
                                            }
                                        ],
                                        "kb_service_method": "find_genes_from_similar_reactions",
                                        "kb_service_name": "kb_reaction_gene_finder",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "b3460385b29e058580923f6fb737d795cf0b52c4"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "janakakbase",
                                            "jjeffryes"
                                        ],
                                        "categories": [
                                            "active",
                                            "annotation",
                                            "knowledge_engine"
                                        ],
                                        "git_commit_hash": "b3460385b29e058580923f6fb737d795cf0b52c4",
                                        "icon": {
                                            "url": "img?method_id=kb_reaction_gene_finder/find_genes_from_similar_reactions&image_name=hal.png&tag=beta"
                                        },
                                        "id": "kb_reaction_gene_finder/find_genes_from_similar_reactions",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Genome",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "kb_reaction_gene_finder",
                                        "name": "Find Candidate Genes for a Reaction",
                                        "namespace": "kb_reaction_gene_finder",
                                        "output_types": [
                                            "KBaseCollections.FeatureSet"
                                        ],
                                        "subtitle": "Searches for genes that may perform a reaction based on BLAST of known genes performing similar reactions against a supplied genome",
                                        "tooltip": "Searches for genes that may perform a reaction based on BLAST of known genes performing similar reactions against a supplied genome",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [],
                                            "description": "",
                                            "disabled": 0,
                                            "dynamic_dropdown_options": {
                                                "data_source": "custom",
                                                "description_template": "<strong>{{id}}</strong>: {{name}}",
                                                "multiselection": 0,
                                                "selection_id": "id",
                                                "service_function": "BiochemistryAPI.search_reactions",
                                                "service_params": [
                                                    {
                                                        "query": "{{dynamic_dropdown_input}}"
                                                    }
                                                ],
                                                "service_version": "dev"
                                            },
                                            "field_type": "dynamic_dropdown",
                                            "id": "reaction_set",
                                            "optional": 1,
                                            "short_hint": "The reactions to search a gene candidate",
                                            "ui_class": "parameter",
                                            "ui_name": "Reaction"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "query_genome_ref",
                                            "optional": 0,
                                            "short_hint": "The Target Genome to find matches",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomeAnnotations.Genome",
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Target Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "feature_set_prefix",
                                            "optional": 0,
                                            "short_hint": "A prefix for the feature sets containing the gene candidates",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseCollections.FeatureSet"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Gene Candidate Feature Set"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1.0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "structural_similarity_floor",
                                            "optional": 0,
                                            "short_hint": "The minimum Tannimoto similarity or a realated reaction based on a structural fingerprint",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Structural Similarity Floor"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1.0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "difference_similarity_floor",
                                            "optional": 0,
                                            "short_hint": "The minimum Tannimoto similarity or a realated reaction based on a difference fingerprint",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Difference Similarity Floor"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "50.0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "blast_score_floor",
                                            "optional": 0,
                                            "short_hint": "The minimal blast score to consider a gene candidate a possible hit",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Blast Score Floor"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "number_of_hits_to_report",
                                            "optional": 0,
                                            "short_hint": "The number of hits to report for each reaction",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Gene hits per reaction"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "textarea",
                                            "id": "bulk_reaction_ids",
                                            "optional": 1,
                                            "short_hint": "Supply a set of reaction IDs to search, one id per line.",
                                            "ui_class": "parameter",
                                            "ui_name": "Bulk Reaction IDs"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "30643092-8ccf-44a1-87b6-2581b2a51d05",
                                    "child_jobs": [],
                                    "creation_time": 1550249288562,
                                    "exec_start_time": 1550249304045,
                                    "finish_time": 1550249486893,
                                    "finished": 1,
                                    "job_id": "5c66ed44e4b05851acb4a6c8",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "feature_set_refs": [
                                                "40589/37/1",
                                                "40589/39/1",
                                                "40589/41/1"
                                            ],
                                            "gene_hits": [
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "52.4",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "9.20e-09",
                                                    "Genome Gene": "AO361_RS19745_CDS_1",
                                                    "Match Length": "105",
                                                    "Mismatches": "64",
                                                    "Percent Identity": "37.143",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "46.2",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "1.00e-06",
                                                    "Genome Gene": "AO361_RS05670_CDS_1",
                                                    "Match Length": "102",
                                                    "Mismatches": "59",
                                                    "Percent Identity": "35.294",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "45.4",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "1.93e-06",
                                                    "Genome Gene": "AO361_RS11690_CDS_1",
                                                    "Match Length": "152",
                                                    "Mismatches": "94",
                                                    "Percent Identity": "28.947",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "8.48e-06",
                                                    "Genome Gene": "AO361_RS18900_CDS_1",
                                                    "Match Length": "101",
                                                    "Mismatches": "54",
                                                    "Percent Identity": "33.663",
                                                    "Total Gene Hits": "2"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "6.44e-06",
                                                    "Genome Gene": "AO361_RS01230_CDS_1",
                                                    "Match Length": "118",
                                                    "Mismatches": "79",
                                                    "Percent Identity": "28.814",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "38.1",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "4.53e-04",
                                                    "Genome Gene": "AO361_RS11680_CDS_1",
                                                    "Match Length": "172",
                                                    "Mismatches": "98",
                                                    "Percent Identity": "24.419",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "33.9",
                                                    "Closest Database Gene": "KR49_RS10880",
                                                    "E Value": "0.011",
                                                    "Genome Gene": "AO361_RS18790_CDS_1",
                                                    "Match Length": "104",
                                                    "Mismatches": "56",
                                                    "Percent Identity": "33.654",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn01373",
                                                    "Bit Score": "32.7",
                                                    "Closest Database Gene": "FSYMDG_RS02520",
                                                    "E Value": "0.033",
                                                    "Genome Gene": "AO361_RS16350_CDS_1",
                                                    "Match Length": "148",
                                                    "Mismatches": "85",
                                                    "Percent Identity": "27.703",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "32.3",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "0.026",
                                                    "Genome Gene": "AO361_RS02260_CDS_1",
                                                    "Match Length": "111",
                                                    "Mismatches": "71",
                                                    "Percent Identity": "27.027",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "31.6",
                                                    "Closest Database Gene": "KR49_RS10880",
                                                    "E Value": "0.062",
                                                    "Genome Gene": "AO361_RS03480_CDS_1",
                                                    "Match Length": "119",
                                                    "Mismatches": "82",
                                                    "Percent Identity": "26.050",
                                                    "Total Gene Hits": "2"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "52.4",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "9.20e-09",
                                                    "Genome Gene": "AO361_RS19745_CDS_1",
                                                    "Match Length": "105",
                                                    "Mismatches": "64",
                                                    "Percent Identity": "37.143",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "46.2",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "1.00e-06",
                                                    "Genome Gene": "AO361_RS05670_CDS_1",
                                                    "Match Length": "102",
                                                    "Mismatches": "59",
                                                    "Percent Identity": "35.294",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "45.4",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "1.93e-06",
                                                    "Genome Gene": "AO361_RS11690_CDS_1",
                                                    "Match Length": "152",
                                                    "Mismatches": "94",
                                                    "Percent Identity": "28.947",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "8.48e-06",
                                                    "Genome Gene": "AO361_RS18900_CDS_1",
                                                    "Match Length": "101",
                                                    "Mismatches": "54",
                                                    "Percent Identity": "33.663",
                                                    "Total Gene Hits": "2"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "6.44e-06",
                                                    "Genome Gene": "AO361_RS01230_CDS_1",
                                                    "Match Length": "118",
                                                    "Mismatches": "79",
                                                    "Percent Identity": "28.814",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "38.1",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "4.53e-04",
                                                    "Genome Gene": "AO361_RS11680_CDS_1",
                                                    "Match Length": "172",
                                                    "Mismatches": "98",
                                                    "Percent Identity": "24.419",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "33.9",
                                                    "Closest Database Gene": "KR49_RS10880",
                                                    "E Value": "0.011",
                                                    "Genome Gene": "AO361_RS18790_CDS_1",
                                                    "Match Length": "104",
                                                    "Mismatches": "56",
                                                    "Percent Identity": "33.654",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn01373",
                                                    "Bit Score": "32.7",
                                                    "Closest Database Gene": "FSYMDG_RS02520",
                                                    "E Value": "0.033",
                                                    "Genome Gene": "AO361_RS16350_CDS_1",
                                                    "Match Length": "148",
                                                    "Mismatches": "85",
                                                    "Percent Identity": "27.703",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "32.3",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "0.026",
                                                    "Genome Gene": "AO361_RS02260_CDS_1",
                                                    "Match Length": "111",
                                                    "Mismatches": "71",
                                                    "Percent Identity": "27.027",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "31.6",
                                                    "Closest Database Gene": "KR49_RS10880",
                                                    "E Value": "0.062",
                                                    "Genome Gene": "AO361_RS03480_CDS_1",
                                                    "Match Length": "119",
                                                    "Mismatches": "82",
                                                    "Percent Identity": "26.050",
                                                    "Total Gene Hits": "2"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "52.4",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "9.20e-09",
                                                    "Genome Gene": "AO361_RS19745_CDS_1",
                                                    "Match Length": "105",
                                                    "Mismatches": "64",
                                                    "Percent Identity": "37.143",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "46.2",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "1.00e-06",
                                                    "Genome Gene": "AO361_RS05670_CDS_1",
                                                    "Match Length": "102",
                                                    "Mismatches": "59",
                                                    "Percent Identity": "35.294",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "45.4",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "1.93e-06",
                                                    "Genome Gene": "AO361_RS11690_CDS_1",
                                                    "Match Length": "152",
                                                    "Mismatches": "94",
                                                    "Percent Identity": "28.947",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "8.48e-06",
                                                    "Genome Gene": "AO361_RS18900_CDS_1",
                                                    "Match Length": "101",
                                                    "Mismatches": "54",
                                                    "Percent Identity": "33.663",
                                                    "Total Gene Hits": "2"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "43.5",
                                                    "Closest Database Gene": "TX72_RS09615",
                                                    "E Value": "6.44e-06",
                                                    "Genome Gene": "AO361_RS01230_CDS_1",
                                                    "Match Length": "118",
                                                    "Mismatches": "79",
                                                    "Percent Identity": "28.814",
                                                    "Total Gene Hits": "3"
                                                },
                                                {
                                                    "Associated Reactions": "rxn03065",
                                                    "Bit Score": "38.9",
                                                    "Closest Database Gene": "GOBS_RS01000",
                                                    "E Value": "3.42e-04",
                                                    "Genome Gene": "AO361_RS12810_CDS_1",
                                                    "Match Length": "152",
                                                    "Mismatches": "93",
                                                    "Percent Identity": "26.974",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "38.1",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "4.53e-04",
                                                    "Genome Gene": "AO361_RS11680_CDS_1",
                                                    "Match Length": "172",
                                                    "Mismatches": "98",
                                                    "Percent Identity": "24.419",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "33.9",
                                                    "Closest Database Gene": "KR49_RS10880",
                                                    "E Value": "0.011",
                                                    "Genome Gene": "AO361_RS18790_CDS_1",
                                                    "Match Length": "104",
                                                    "Mismatches": "56",
                                                    "Percent Identity": "33.654",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn01373",
                                                    "Bit Score": "32.7",
                                                    "Closest Database Gene": "FSYMDG_RS02520",
                                                    "E Value": "0.033",
                                                    "Genome Gene": "AO361_RS16350_CDS_1",
                                                    "Match Length": "148",
                                                    "Mismatches": "85",
                                                    "Percent Identity": "27.703",
                                                    "Total Gene Hits": "1"
                                                },
                                                {
                                                    "Associated Reactions": "rxn05011",
                                                    "Bit Score": "32.3",
                                                    "Closest Database Gene": "SYNWH7803_RS01775",
                                                    "E Value": "0.026",
                                                    "Genome Gene": "AO361_RS02260_CDS_1",
                                                    "Match Length": "111",
                                                    "Mismatches": "71",
                                                    "Percent Identity": "27.027",
                                                    "Total Gene Hits": "1"
                                                }
                                            ],
                                            "report_name": "find_genes_for_rxn_0aa26841-df98-45e2-9817-cd6a81536eb1",
                                            "report_ref": "40589/43/1"
                                        }
                                    ],
                                    "run_id": "47196297-0d99-41a7-a8f8-80366ea75a11",
                                    "status": [
                                        "2019-02-15T16:51:26+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550249495333,
                                "launchState": {
                                    "cell_id": "30643092-8ccf-44a1-87b6-2581b2a51d05",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T16:48:08.596925Z",
                                    "job_id": "5c66ed44e4b05851acb4a6c8",
                                    "run_id": "47196297-0d99-41a7-a8f8-80366ea75a11"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "find_genes_for_rxn_0aa26841-df98-45e2-9817-cd6a81536eb1",
                                        "report_ref": "40589/43/1",
                                        "workspace_name": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c66ed44e4b05851acb4a6c8": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:51:35 GMT",
                                        "params": {
                                            "blast_score_floor": 30,
                                            "bulk_reaction_ids": "rxn00270\nrxn05010\nrxn05011",
                                            "difference_similarity_floor": 0.75,
                                            "feature_set_prefix": "Betaine_pathway_candidates",
                                            "number_of_hits_to_report": 10,
                                            "query_genome_ref": "P_fluorescens_GW456-L13",
                                            "reaction_set": "",
                                            "structural_similarity_floor": 0.75
                                        }
                                    }
                                }
                            },
                            "params": {
                                "blast_score_floor": 30,
                                "bulk_reaction_ids": "rxn00270\nrxn05010\nrxn05011",
                                "difference_similarity_floor": 0.75,
                                "feature_set_prefix": "Betaine_pathway_candidates",
                                "number_of_hits_to_report": 10,
                                "query_genome_ref": "P_fluorescens_GW456-L13",
                                "reaction_set": "",
                                "structural_similarity_floor": 0.75
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:43:42 GMT",
                            "id": "30643092-8ccf-44a1-87b6-2581b2a51d05",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_reaction_gene_finder/find_genes_from_similar_reactions/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Searches for genes that may perform a reaction based on BLAST of known genes performing similar reactions against a supplied genome",
                            "title": "Find Candidate Genes for a Reaction"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_reaction_gene_finder/find_genes_from_similar_reactions\",\n    {\n        \"reaction_set\": \"\",\n        \"query_genome_ref\": \"P_fluorescens_GW456-L13\",\n        \"feature_set_prefix\": \"Betaine_pathway_candidates\",\n        \"structural_similarity_floor\": 0.75,\n        \"difference_similarity_floor\": 0.75,\n        \"blast_score_floor\": 30,\n        \"number_of_hits_to_report\": 10,\n        \"bulk_reaction_ids\": \"rxn00270\\nrxn05010\\nrxn05011\"\n    },\n    tag=\"beta\",\n    version=\"b3460385b29e058580923f6fb737d795cf0b52c4\",\n    cell_id=\"30643092-8ccf-44a1-87b6-2581b2a51d05\",\n    run_id=\"47196297-0d99-41a7-a8f8-80366ea75a11\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B3: Viewing top gene candidates in context"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B3: Viewing top gene candidates in context"
            },
            {
                "cell_type": "code",
                "execution_count": 16,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "32374e065449eb18a2a0eefe5c9f9dbc7fa2b179",
                                "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "input_parameter": "param0",
                                                "target_property": "new_genomes",
                                                "target_type_transform": "list<ref>"
                                            },
                                            {
                                                "input_parameter": "param1",
                                                "target_property": "nearest_genome_count",
                                                "target_type_transform": "int"
                                            },
                                            {
                                                "input_parameter": "copy_genomes",
                                                "target_property": "copy_genomes"
                                            },
                                            {
                                                "input_parameter": "treeID",
                                                "target_property": "out_tree_id"
                                            },
                                            {
                                                "input_parameter": "genomeSetName",
                                                "target_property": "out_genomeset_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "out_workspace"
                                            },
                                            {
                                                "constant_value": 0,
                                                "target_property": "use_ribosomal_s9_only"
                                            }
                                        ],
                                        "kb_service_method": "construct_species_tree",
                                        "kb_service_name": "SpeciesTreeBuilder",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "output_result_id"
                                                ],
                                                "target_property": "output_result_id"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspaceID"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "32374e065449eb18a2a0eefe5c9f9dbc7fa2b179"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "rsutormin"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "32374e065449eb18a2a0eefe5c9f9dbc7fa2b179",
                                        "icon": {
                                            "url": "img?method_id=SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree&image_name=speciestree-purple.png&tag=beta"
                                        },
                                        "id": "SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.GenomeAnnotation",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "SpeciesTreeBuilder",
                                        "name": "Insert Genome Into Species Tree 2.1.10",
                                        "namespace": "SpeciesTreeBuilder",
                                        "output_types": [
                                            "KBaseSearch.GenomeSet",
                                            "KBaseTrees.Tree"
                                        ],
                                        "subtitle": "Add one or more genomes to a KBase species tree.",
                                        "tooltip": "Add one or more genomes to a KBase species tree.",
                                        "ver": "0.0.12"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 1,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Genome to be inserted into a phylogenetic species tree composed of closely related publicly available genomes",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param0",
                                            "optional": 0,
                                            "short_hint": "Genome to be inserted into a phylogenetic species tree",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.Genome",
                                                    "KBaseGenomeAnnotations.GenomeAnnotation"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "20"
                                            ],
                                            "description": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "param1",
                                            "optional": 1,
                                            "short_hint": "Number of closest public genomes the tree will contain. (optional, default value is 20)",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 200,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Neighbor public genome count"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "checkbox_options": {
                                                "checked_value": 1,
                                                "unchecked_value": 0
                                            },
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them.  If you don't want to do anything else with the species tree, you may not need copies",
                                            "disabled": 0,
                                            "field_type": "checkbox",
                                            "id": "copy_genomes",
                                            "optional": 0,
                                            "short_hint": "We recommend copying public genomes to your workspace, so that you can conveniently do other analyses on them",
                                            "ui_class": "parameter",
                                            "ui_name": "Copy public genomes to your workspace"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The name of the output phylogenetic tree relating genomes available in KBase to your genome",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "treeID",
                                            "optional": 0,
                                            "short_hint": "Output species tree name",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "A collection of Genome objects",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "genomeSetName",
                                            "optional": 0,
                                            "short_hint": "A collection of Genome objects",
                                            "text_options": {
                                                "is_output_name": 1,
                                                "placeholder": "Name the set of genomes generated",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "output",
                                            "ui_name": "Output Genome Set"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "0.0.12"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "36695827-93d3-47bb-bfee-97cc855280b3",
                                    "child_jobs": [],
                                    "creation_time": 1550249344418,
                                    "exec_start_time": 1550249358895,
                                    "finish_time": 1550249517522,
                                    "finished": 1,
                                    "job_id": "5c66ed7ce4b05851acb4a6ca",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "output_result_id": "40589/33/2",
                                            "report_name": "blast_report_5091efe8-fc74-44a6-bcf1-c61878aed0d5",
                                            "report_ref": "40589/44/1"
                                        }
                                    ],
                                    "run_id": "e11305b1-57c8-4e53-9366-54220180b5c3",
                                    "status": [
                                        "2019-02-15T16:51:57+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550249527032,
                                "launchState": {
                                    "cell_id": "36695827-93d3-47bb-bfee-97cc855280b3",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T16:49:04.455197Z",
                                    "job_id": "5c66ed7ce4b05851acb4a6ca",
                                    "run_id": "e11305b1-57c8-4e53-9366-54220180b5c3"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "output_result_id": "40589/33/2",
                                        "report_name": "blast_report_5091efe8-fc74-44a6-bcf1-c61878aed0d5",
                                        "report_ref": "40589/44/1",
                                        "workspaceID": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c66eba2e4b05851acb4a6c3": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:44:32 GMT",
                                        "params": {
                                            "copy_genomes": 0,
                                            "genomeSetName": "P_fluorescens_GW456-L13.genome_set",
                                            "param0": [
                                                "40589/13/1"
                                            ],
                                            "param1": 10,
                                            "treeID": "P_fluorescens_GW456-L13.tree"
                                        }
                                    },
                                    "5c66ed7ce4b05851acb4a6ca": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:52:07 GMT",
                                        "params": {
                                            "copy_genomes": 0,
                                            "genomeSetName": "P_fluorescens_GW456-L13.genome_set",
                                            "param0": [
                                                "40589/16/2"
                                            ],
                                            "param1": 10,
                                            "treeID": "P_fluorescens_GW456-L13.tree"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "copy_genomes": 0,
                                "genomeSetName": "P_fluorescens_GW456-L13.genome_set",
                                "param0": [
                                    "40589/16/2"
                                ],
                                "param1": 10,
                                "treeID": "P_fluorescens_GW456-L13.tree"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:40:17 GMT",
                            "id": "36695827-93d3-47bb-bfee-97cc855280b3",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Add one or more genomes to a KBase species tree.",
                            "title": "Insert Genome Into Species Tree 2.1.10"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree\",\n    {\n        \"param0\": [\"40589/16/2\"],\n        \"param1\": 10,\n        \"copy_genomes\": 0,\n        \"treeID\": \"P_fluorescens_GW456-L13.tree\",\n        \"genomeSetName\": \"P_fluorescens_GW456-L13.genome_set\"\n    },\n    tag=\"beta\",\n    version=\"32374e065449eb18a2a0eefe5c9f9dbc7fa2b179\",\n    cell_id=\"36695827-93d3-47bb-bfee-97cc855280b3\",\n    run_id=\"e11305b1-57c8-4e53-9366-54220180b5c3\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B4: Viewing betaine pathway genes in context"
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B4: Viewing betaine pathway genes in context"
            },
            {
                "cell_type": "code",
                "execution_count": 23,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "0e01be7c00f0bd97c8b03561de091bdcb03d4d16",
                                "id": "kb_phylogenomics/find_homologs_with_genome_context",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_featureSet_ref",
                                                "target_property": "input_featureSet_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "input_speciesTree_ref",
                                                "target_property": "input_speciesTree_ref",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "save_per_genome_featureSets",
                                                "target_property": "save_per_genome_featureSets"
                                            },
                                            {
                                                "input_parameter": "e_value",
                                                "target_property": "e_value"
                                            },
                                            {
                                                "input_parameter": "ident_thresh",
                                                "target_property": "ident_thresh"
                                            },
                                            {
                                                "input_parameter": "overlap_fraction",
                                                "target_property": "overlap_fraction"
                                            },
                                            {
                                                "input_parameter": "bitscore",
                                                "target_property": "bitscore"
                                            },
                                            {
                                                "input_parameter": "neighbor_thresh",
                                                "target_property": "neighbor_thresh"
                                            },
                                            {
                                                "input_parameter": "color_seed",
                                                "target_property": "color_seed"
                                            }
                                        ],
                                        "kb_service_method": "find_homologs_with_genome_context",
                                        "kb_service_name": "kb_phylogenomics",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "0e01be7c00f0bd97c8b03561de091bdcb03d4d16"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "dylan"
                                        ],
                                        "categories": [
                                            "active",
                                            "comparative_genomics"
                                        ],
                                        "git_commit_hash": "0e01be7c00f0bd97c8b03561de091bdcb03d4d16",
                                        "icon": {
                                            "url": "img?method_id=kb_phylogenomics/find_homologs_with_genome_context&image_name=homolog_context-purple.png&tag=beta"
                                        },
                                        "id": "kb_phylogenomics/find_homologs_with_genome_context",
                                        "input_types": [
                                            "KBaseCollections.FeatureSet",
                                            "KBaseTrees.Tree"
                                        ],
                                        "module_name": "kb_phylogenomics",
                                        "name": "Homolog Genome Context - v1.3.1",
                                        "namespace": "kb_phylogenomics",
                                        "output_types": [],
                                        "subtitle": "Find Homologs for a Collection of Genes and View in Genome Context",
                                        "tooltip": "Find Homologs for a Collection of Genes and View in Genome Context",
                                        "ver": "1.2.3"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The FeatureSet that contains the query features (not necessarily from one genome)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_featureSet_ref",
                                            "optional": 0,
                                            "short_hint": "The FeatureSet that contains the query features",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseCollections.FeatureSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Query Features"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "The Species Tree of the Genomes being searched (must include all query genomes)",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_speciesTree_ref",
                                            "optional": 0,
                                            "short_hint": "The Species Tree of the Genomes being searched",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseTrees.Tree"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Species Tree"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "0"
                                            ],
                                            "description": "Save a separate FeatureSet for each genome (homolog sets will be saved automatically)",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "DON'T save feature sets",
                                                        "index": 0,
                                                        "value": "0"
                                                    },
                                                    {
                                                        "display": "DO save feature sets",
                                                        "index": 1,
                                                        "value": "1"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "save_per_genome_featureSets",
                                            "optional": 0,
                                            "short_hint": "Save a separate FeatureSet for each genome",
                                            "ui_class": "parameter",
                                            "ui_name": "Save homologs by genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ".001"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "e_value",
                                            "optional": 0,
                                            "short_hint": "threshold for hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "E-value"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "40.0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "ident_thresh",
                                            "optional": 0,
                                            "short_hint": "threshold for hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 100,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Identity Threshold (%)"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "50.0"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "overlap_fraction",
                                            "optional": 1,
                                            "short_hint": "threshold for hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_float": 100,
                                                "min_float": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Alignment Overlap Threshold (%)"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "100"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "bitscore",
                                            "optional": 1,
                                            "short_hint": "threshold for hits",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "float"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Bit Score"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "neighbor_thresh",
                                            "optional": 0,
                                            "short_hint": "How close a gene needs to be to be a neighbor",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 1000,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Gene neighbor distance"
                                        },
                                        {
                                            "advanced": 1,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "1"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "color_seed",
                                            "optional": 0,
                                            "short_hint": "Repeatable colors with same seed",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Color random seed"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "1.2.3"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "f9b0e322-3d59-4c97-975c-2ab31a952832",
                                    "child_jobs": [],
                                    "creation_time": 1550253320024,
                                    "exec_start_time": 1550253336999,
                                    "finish_time": 1550259167817,
                                    "finished": 1,
                                    "job_id": "5c66fd03e4b05851acb4a745",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "blast_report_6b523bd4-26fb-4816-ae0f-acfd06c4449a",
                                            "report_ref": "40589/175/1"
                                        }
                                    ],
                                    "run_id": "c9ae93e6-25ee-40b6-a08f-7d632e471b4a",
                                    "status": [
                                        "2019-02-15T19:32:47+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550259175012,
                                "launchState": {
                                    "cell_id": "f9b0e322-3d59-4c97-975c-2ab31a952832",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T17:55:20.057983Z",
                                    "job_id": "5c66fd03e4b05851acb4a745",
                                    "run_id": "c9ae93e6-25ee-40b6-a08f-7d632e471b4a"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "blast_report_6b523bd4-26fb-4816-ae0f-acfd06c4449a",
                                        "report_ref": "40589/175/1",
                                        "workspace_name": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "Homolog Genome Context - v1.3.1",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5c66fd03e4b05851acb4a745": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 19:32:55 GMT",
                                        "params": {
                                            "bitscore": 100,
                                            "color_seed": 1,
                                            "e_value": 0.001,
                                            "ident_thresh": 40,
                                            "input_featureSet_ref": "cpd00540_genes",
                                            "input_speciesTree_ref": "P_fluorescens_GW456-L13.tree",
                                            "neighbor_thresh": 10,
                                            "overlap_fraction": 50,
                                            "save_per_genome_featureSets": "0"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "bitscore": 100,
                                "color_seed": 1,
                                "e_value": 0.001,
                                "ident_thresh": 40,
                                "input_featureSet_ref": "cpd00540_genes",
                                "input_speciesTree_ref": "P_fluorescens_GW456-L13.tree",
                                "neighbor_thresh": 10,
                                "overlap_fraction": 50,
                                "save_per_genome_featureSets": "0"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:45:22 GMT",
                            "id": "f9b0e322-3d59-4c97-975c-2ab31a952832",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_phylogenomics/find_homologs_with_genome_context/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Find Homologs for a Collection of Genes and View in Genome Context",
                            "title": "Homolog Genome Context - v1.3.1"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_phylogenomics/find_homologs_with_genome_context\",\n    {\n        \"input_featureSet_ref\": \"cpd00540_genes\",\n        \"input_speciesTree_ref\": \"P_fluorescens_GW456-L13.tree\",\n        \"save_per_genome_featureSets\": \"0\",\n        \"e_value\": 0.001,\n        \"ident_thresh\": 40,\n        \"overlap_fraction\": 50,\n        \"bitscore\": 100,\n        \"neighbor_thresh\": 10,\n        \"color_seed\": 1\n    },\n    tag=\"beta\",\n    version=\"0e01be7c00f0bd97c8b03561de091bdcb03d4d16\",\n    cell_id=\"f9b0e322-3d59-4c97-975c-2ab31a952832\",\n    run_id=\"c9ae93e6-25ee-40b6-a08f-7d632e471b4a\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B5: Using MASH tool to identify nearby genome..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B5: Using MASH tool to identify nearby genomes"
            },
            {
                "cell_type": "code",
                "execution_count": 11,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "1618fb569fb82c81d1a4ec2828f7f94bef45e8bc",
                                "id": "kb_mash/run_mash_dist_search",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "input_parameter": "input_upa",
                                                "target_property": "input_upa",
                                                "target_type_transform": "resolved-ref"
                                            },
                                            {
                                                "input_parameter": "search_db",
                                                "target_property": "search_db"
                                            },
                                            {
                                                "input_parameter": "n_max_results",
                                                "target_property": "n_max_results"
                                            }
                                        ],
                                        "kb_service_method": "run_mash_dist_search",
                                        "kb_service_name": "kb_mash",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            },
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspaceName"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "1618fb569fb82c81d1a4ec2828f7f94bef45e8bc"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "psdehal"
                                        ],
                                        "categories": [
                                            "active"
                                        ],
                                        "git_commit_hash": "1618fb569fb82c81d1a4ec2828f7f94bef45e8bc",
                                        "icon": {
                                            "url": "img?method_id=kb_mash/run_mash_dist_search&image_name=mash_logo_med.png&tag=beta"
                                        },
                                        "id": "kb_mash/run_mash_dist_search",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome"
                                        ],
                                        "module_name": "kb_mash",
                                        "name": "Mash Search",
                                        "namespace": "kb_mash",
                                        "output_types": [],
                                        "subtitle": "Search using Mash",
                                        "tooltip": "Search using Mash",
                                        "ver": "0.0.3"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "input_upa",
                                            "optional": 0,
                                            "short_hint": "Assembly Name or Genome Name",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.Genome"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly or Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "KBaseRefseq"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "dropdown_options": {
                                                "options": [
                                                    {
                                                        "display": "NCBI Refseq",
                                                        "index": 0,
                                                        "value": "NCBI_Refseq"
                                                    },
                                                    {
                                                        "display": "JGI_MAGS",
                                                        "index": 1,
                                                        "value": "JGI_MAGS"
                                                    }
                                                ]
                                            },
                                            "field_type": "dropdown",
                                            "id": "search_db",
                                            "optional": 0,
                                            "short_hint": "Search Databases to query against",
                                            "ui_class": "parameter",
                                            "ui_name": "Search Database"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "n_max_results",
                                            "optional": 0,
                                            "short_hint": "Maximum number of results to return",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 100,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Maximum number of results to return"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "no-display"
                                    }
                                },
                                "tag": "beta",
                                "version": "0.0.3"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "eba436ac-c1b3-4a04-adb2-c1f192a459a2",
                                    "child_jobs": [],
                                    "creation_time": 1550248536430,
                                    "exec_start_time": 1550248551826,
                                    "finish_time": 1550248637631,
                                    "finished": 1,
                                    "job_id": "5c66ea53e4b05851acb4a6c0",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "kb_mash_report_3a3947ad-9eba-424c-aadc-d4a74d465cbd",
                                            "report_ref": "40589/32/1"
                                        }
                                    ],
                                    "run_id": "1606ab36-5ae7-4cfa-a101-99ddb146bfc6",
                                    "status": [
                                        "2019-02-15T16:37:17+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550248642550,
                                "launchState": {
                                    "cell_id": "eba436ac-c1b3-4a04-adb2-c1f192a459a2",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T16:35:36.470266Z",
                                    "job_id": "5c66ea53e4b05851acb4a6c0",
                                    "run_id": "1606ab36-5ae7-4cfa-a101-99ddb146bfc6"
                                },
                                "outputWidgetInfo": {
                                    "name": "no-display",
                                    "params": {
                                        "report_name": "kb_mash_report_3a3947ad-9eba-424c-aadc-d4a74d465cbd",
                                        "report_ref": "40589/32/1",
                                        "workspaceName": "chenry:narrative_1550247300208"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "output": {
                                "byJob": {
                                    "5c66ea53e4b05851acb4a6c0": {
                                        "cell": {
                                            "created": false
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:37:22 GMT",
                                        "params": {
                                            "input_upa": "P_fluorescens_GW456-L13",
                                            "n_max_results": 100,
                                            "search_db": "NCBI_Refseq"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "input_upa": "P_fluorescens_GW456-L13",
                                "n_max_results": 100,
                                "search_db": "NCBI_Refseq"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:35:19 GMT",
                            "id": "eba436ac-c1b3-4a04-adb2-c1f192a459a2",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/kb_mash/run_mash_dist_search/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "Search using Mash",
                            "title": "Mash Search"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"kb_mash/run_mash_dist_search\",\n    {\n        \"input_upa\": \"P_fluorescens_GW456-L13\",\n        \"search_db\": \"NCBI_Refseq\",\n        \"n_max_results\": 100\n    },\n    tag=\"beta\",\n    version=\"1618fb569fb82c81d1a4ec2828f7f94bef45e8bc\",\n    cell_id=\"eba436ac-c1b3-4a04-adb2-c1f192a459a2\",\n    run_id=\"1606ab36-5ae7-4cfa-a101-99ddb146bfc6\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B6: Exploring the conditions under which the ..."
                        },
                        "cellState": {
                            "selected": false,
                            "showTitle": false
                        }
                    }
                },
                "source": "### Step B6: Exploring the conditions under which the betaine pathway is expressed"
            },
            {
                "cell_type": "code",
                "execution_count": 24,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 18:22:56 GMT",
                            "icon": "database",
                            "id": "67156574-363d-4188-920c-df7eba5ebdb5",
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "v1 - KBaseFeatureValues.ExpressionMatrix-1.0",
                            "title": "PF_D50_trimm_paired_SampleSet_TPM_ExpressionMatrix"
                        },
                        "dataCell": {
                            "objectInfo": {
                                "checksum": "5f6e7151ca7df7d7ed8813ef575c7080",
                                "id": 109,
                                "metadata": {
                                    "Genome": "39253/2/1",
                                    "condition_count": "12",
                                    "feature_count": "6177",
                                    "scale": "log2",
                                    "type": "level"
                                },
                                "name": "PF_D50_trimm_paired_SampleSet_TPM_ExpressionMatrix",
                                "obj_id": "ws.40589.obj.109",
                                "ref": "40589/109/1",
                                "ref_path": null,
                                "saveDate": "2019-02-15T18:21:11.000Z",
                                "save_date": "2019-02-15T18:21:11+0000",
                                "saved_by": "chenry",
                                "size": 1626940,
                                "type": "KBaseFeatureValues.ExpressionMatrix-1.0",
                                "typeMajorVersion": "1",
                                "typeMinorVersion": "0",
                                "typeModule": "KBaseFeatureValues",
                                "typeName": "ExpressionMatrix",
                                "version": 1,
                                "ws": "chenry:narrative_1550247300208",
                                "ws_id": 40589,
                                "wsid": 40589
                            },
                            "upas": {
                                "expressionMatrixID": "[40589]/109/1"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "type": "data"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-0dc34f94-b96e-413a-9e64-52f63d8a68f4' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-0dc34f94-b96e-413a-9e64-52f63d8a68f4'), {\n                \"upas\": {\"expressionMatrixID\": \"40589/109/1\"},\n                \"data\": {\"workspaceID\": \"chenry:narrative_1550247300208\", \"expressionMatrixID\": \"PF_D50_trimm_paired_SampleSet_TPM_ExpressionMatrix\"},\n                \"type\": \"viewer\",\n                \"widget\": \"kbaseExpressionMatrix\",\n                \"cellId\": \"67156574-363d-4188-920c-df7eba5ebdb5\",\n                \"title\": \"PF_D50_trimm_paired_SampleSet_TPM_ExpressionMatrix\",\n                \"time\": 1550254976302\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 24,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_data_widget(\n    \"40589/109/1\",\n    cell_id=\"67156574-363d-4188-920c-df7eba5ebdb5\",\n    title=\"PF_D50_trimm_paired_SampleSet_TPM_ExpressionMatrix\",\n    tag=\"beta\"\n)"
            },
            {
                "cell_type": "markdown",
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "icon": "paragraph",
                            "title": "Step B7: Using JGI MAG/MASH tool to find nearby me..."
                        },
                        "cellState": {
                            "message": "",
                            "selected": false,
                            "showTitle": true,
                            "toggleMinMax": "minimized"
                        }
                    }
                },
                "source": "### Step B7: Using JGI MAG/MASH tool to find nearby metagenome assembled genomes"
            },
            {
                "cell_type": "code",
                "execution_count": 8,
                "metadata": {
                    "kbase": {
                        "appCell": {
                            "app": {
                                "gitCommitHash": "72111c6891b3d102f5ed17f17008fedd27619430",
                                "id": "mags_mash/run_mags_mash",
                                "spec": {
                                    "behavior": {
                                        "kb_service_input_mapping": [
                                            {
                                                "narrative_system_variable": "workspace",
                                                "target_property": "workspace_name"
                                            },
                                            {
                                                "narrative_system_variable": "workspace_id",
                                                "target_property": "workspace_id"
                                            },
                                            {
                                                "input_parameter": "ws_ref",
                                                "target_property": "ws_ref",
                                                "target_type_transform": "ref"
                                            },
                                            {
                                                "input_parameter": "n_max_results",
                                                "target_property": "n_max_results"
                                            }
                                        ],
                                        "kb_service_method": "run_mags_mash",
                                        "kb_service_name": "mags_mash",
                                        "kb_service_output_mapping": [
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_name"
                                                ],
                                                "target_property": "report_name"
                                            },
                                            {
                                                "service_method_output_path": [
                                                    "0",
                                                    "report_ref"
                                                ],
                                                "target_property": "report_ref"
                                            }
                                        ],
                                        "kb_service_url": "",
                                        "kb_service_version": "72111c6891b3d102f5ed17f17008fedd27619430"
                                    },
                                    "fixed_parameters": [],
                                    "info": {
                                        "app_type": "app",
                                        "authors": [
                                            "slebras",
                                            "psdehal"
                                        ],
                                        "categories": [
                                            "active"
                                        ],
                                        "git_commit_hash": "72111c6891b3d102f5ed17f17008fedd27619430",
                                        "icon": {
                                            "url": "img?method_id=mags_mash/run_mags_mash&image_name=JGI_logo.png&tag=beta"
                                        },
                                        "id": "mags_mash/run_mags_mash",
                                        "input_types": [
                                            "KBaseGenomeAnnotations.Assembly",
                                            "KBaseGenomes.ContigSet",
                                            "KBaseGenomes.Genome",
                                            "KBaseSearch.GenomeSet",
                                            "KBaseSets.GenomeSet"
                                        ],
                                        "module_name": "mags_mash",
                                        "name": "MAG(Metagenomic Assembled Genomes) Mash",
                                        "namespace": "mags_mash",
                                        "output_types": [],
                                        "subtitle": "performs Mash search against JGI GOLD MAG data.",
                                        "tooltip": "performs Mash search against JGI GOLD MAG data.",
                                        "ver": "0.0.1"
                                    },
                                    "job_id_output_field": "docker",
                                    "parameters": [
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                ""
                                            ],
                                            "description": "Assembly or Genome object name",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "ws_ref",
                                            "optional": 0,
                                            "short_hint": "Assembly or Genome object name",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [
                                                    "KBaseGenomes.ContigSet",
                                                    "KBaseGenomeAnnotations.Assembly",
                                                    "KBaseGenomes.Genome",
                                                    "KBaseSets.GenomeSet",
                                                    "KBaseSearch.GenomeSet"
                                                ]
                                            },
                                            "ui_class": "input",
                                            "ui_name": "Assembly or Genome"
                                        },
                                        {
                                            "advanced": 0,
                                            "allow_multiple": 0,
                                            "default_values": [
                                                "10"
                                            ],
                                            "description": "Maximum number of similar sequence results to return, limit 500",
                                            "disabled": 0,
                                            "field_type": "text",
                                            "id": "n_max_results",
                                            "optional": 1,
                                            "short_hint": "Maximum number of similar sequence results to return, limit 500",
                                            "text_options": {
                                                "is_output_name": 0,
                                                "max_int": 500,
                                                "min_int": 1,
                                                "placeholder": "",
                                                "regex_constraint": [],
                                                "valid_ws_types": [],
                                                "validate_as": "int"
                                            },
                                            "ui_class": "parameter",
                                            "ui_name": "Maximum number of results"
                                        }
                                    ],
                                    "widgets": {
                                        "input": "null",
                                        "output": "null"
                                    }
                                },
                                "tag": "beta",
                                "version": "0.0.1"
                            },
                            "exec": {
                                "jobState": {
                                    "canceled": 0,
                                    "cancelled": 0,
                                    "cell_id": "6bcc3b62-2b19-44b4-b8a1-061f74aa94ae",
                                    "child_jobs": [],
                                    "creation_time": 1550248403887,
                                    "exec_start_time": 1550248420201,
                                    "finish_time": 1550248489783,
                                    "finished": 1,
                                    "job_id": "5c66e9cfe4b05851acb4a6be",
                                    "job_state": "completed",
                                    "result": [
                                        {
                                            "report_name": "Mags_Mash_702e0fb3-22db-4ddd-b5e1-9243ab1a2142",
                                            "report_ref": "40589/31/1"
                                        }
                                    ],
                                    "run_id": "49ac27b2-d780-41e8-bbd9-ce6378fbc52a",
                                    "status": [
                                        "2019-02-15T16:34:49+0000",
                                        "complete",
                                        "done",
                                        null,
                                        null,
                                        1,
                                        0
                                    ],
                                    "sub_jobs": [],
                                    "ujs_url": "https://kbase.us/services/userandjobstate"
                                },
                                "jobStateUpdated": 1550248501327,
                                "launchState": {
                                    "cell_id": "6bcc3b62-2b19-44b4-b8a1-061f74aa94ae",
                                    "event": "launched_job",
                                    "event_at": "2019-02-15T16:33:23.925192Z",
                                    "job_id": "5c66e9cfe4b05851acb4a6be",
                                    "run_id": "49ac27b2-d780-41e8-bbd9-ce6378fbc52a"
                                },
                                "outputWidgetInfo": {
                                    "name": "kbaseDefaultNarrativeOutput",
                                    "params": {
                                        "report_name": "Mags_Mash_702e0fb3-22db-4ddd-b5e1-9243ab1a2142",
                                        "report_ref": "40589/31/1"
                                    },
                                    "tag": "beta"
                                }
                            },
                            "fsm": {
                                "currentState": {
                                    "mode": "success"
                                }
                            },
                            "newAppName": "MAG(Metagenomic Assembled Genomes) Mash",
                            "outdated": true,
                            "output": {
                                "byJob": {
                                    "5c66e9cfe4b05851acb4a6be": {
                                        "cell": {
                                            "created": true,
                                            "id": "834ea51a-981e-4f35-858c-2d6258aaa66e"
                                        },
                                        "createdAt": "Fri, 15 Feb 2019 16:35:01 GMT",
                                        "params": {
                                            "n_max_results": 100,
                                            "ws_ref": "P_fluorescens_GW456-L13"
                                        }
                                    }
                                }
                            },
                            "params": {
                                "n_max_results": 100,
                                "ws_ref": "P_fluorescens_GW456-L13"
                            },
                            "user-settings": {
                                "showCodeInputArea": false
                            }
                        },
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:33:05 GMT",
                            "id": "6bcc3b62-2b19-44b4-b8a1-061f74aa94ae",
                            "info": {
                                "label": "more...",
                                "url": "/#appcatalog/app/mags_mash/run_mags_mash/beta"
                            },
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "subtitle": "performs Mash search against JGI GOLD MAG data.",
                            "title": "MAG(Metagenomic Assembled Genomes) Mash"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "type": "app"
                    }
                },
                "outputs": [],
                "source": "from biokbase.narrative.jobs.appmanager import AppManager\nAppManager().run_app(\n    \"mags_mash/run_mags_mash\",\n    {\n        \"ws_ref\": \"P_fluorescens_GW456-L13\",\n        \"n_max_results\": 100\n    },\n    tag=\"beta\",\n    version=\"72111c6891b3d102f5ed17f17008fedd27619430\",\n    cell_id=\"6bcc3b62-2b19-44b4-b8a1-061f74aa94ae\",\n    run_id=\"49ac27b2-d780-41e8-bbd9-ce6378fbc52a\"\n)"
            },
            {
                "cell_type": "code",
                "execution_count": 10,
                "metadata": {
                    "kbase": {
                        "attributes": {
                            "created": "Fri, 15 Feb 2019 16:35:01 GMT",
                            "icon": "arrow-right",
                            "id": "834ea51a-981e-4f35-858c-2d6258aaa66e",
                            "lastLoaded": "Thu, 21 Feb 2019 20:13:19 GMT",
                            "status": "new",
                            "title": "Output from MAG(Metagenomic Assembled Genomes) Mash"
                        },
                        "cellState": {
                            "toggleMinMax": "maximized"
                        },
                        "dataCell": {
                            "upas": {}
                        },
                        "outputCell": {
                            "jobId": "5c66e9cfe4b05851acb4a6be",
                            "parentCellId": "6bcc3b62-2b19-44b4-b8a1-061f74aa94ae",
                            "user-settings": {
                                "showCodeInputArea": false
                            },
                            "widget": {
                                "name": "kbaseDefaultNarrativeOutput",
                                "params": {
                                    "report_name": "Mags_Mash_702e0fb3-22db-4ddd-b5e1-9243ab1a2142",
                                    "report_ref": "40589/31/1"
                                },
                                "tag": "beta"
                            }
                        },
                        "type": "output"
                    }
                },
                "outputs": [
                    {
                        "data": {
                            "application/javascript": "\n        element.html(\"<div id='kb-vis-41ad86fc-7184-44d3-b012-b018090c8233' class='kb-vis-area'></div>\");\n        require(['kbaseNarrativeOutputCell'], function(KBaseNarrativeOutputCell) {\n            var w = new KBaseNarrativeOutputCell($('#kb-vis-41ad86fc-7184-44d3-b012-b018090c8233'), {\n                \"upas\": {},\n                \"data\": {\"report_ref\": \"40589/31/1\", \"report_name\": \"Mags_Mash_702e0fb3-22db-4ddd-b5e1-9243ab1a2142\"},\n                \"type\": \"method\",\n                \"widget\": \"kbaseDefaultNarrativeOutput\",\n                \"cellId\": \"834ea51a-981e-4f35-858c-2d6258aaa66e\",\n                \"title\": \"\",\n                \"time\": 1550248501441\n            });\n        });\n        ",
                            "text/plain": "<IPython.core.display.Javascript object>"
                        },
                        "execution_count": 10,
                        "metadata": {},
                        "output_type": "execute_result"
                    }
                ],
                "source": "from biokbase.narrative.widgetmanager import WidgetManager\nWidgetManager().show_output_widget(\n    \"kbaseDefaultNarrativeOutput\",\n    {\n        \"report_ref\": \"40589/31/1\",\n        \"report_name\": \"Mags_Mash_702e0fb3-22db-4ddd-b5e1-9243ab1a2142\"\n    },\n    tag=\"beta\",\n    cell_id=\"834ea51a-981e-4f35-858c-2d6258aaa66e\"\n)"
            }
        ],
        "metadata": {
            "creator": "trentnorth",
            "data_dependencies": [],
            "description": "",
            "format": "ipynb",
            "is_temporary": "false",
            "job_ids": {
                "apps": [],
                "job_usage": {
                    "queue_time": 0,
                    "run_time": 0
                },
                "methods": []
            },
            "kbase": {
                "creator": "trentnorth",
                "job_ids": {
                    "apps": [],
                    "job_usage": {
                        "queue_time": 0,
                        "run_time": 0
                    },
                    "methods": []
                },
                "name": "Untitled",
                "ws_name": "trentnorth:narrative_1547576298419"
            },
            "kernelspec": {
                "display_name": "Python 2",
                "language": "python",
                "name": "python2"
            },
            "language_info": {
                "codemirror_mode": {
                    "name": "ipython",
                    "version": 2
                },
                "file_extension": ".py",
                "mimetype": "text/x-python",
                "name": "python",
                "nbconvert_exporter": "python",
                "pygments_lexer": "ipython2",
                "version": "2.7.14"
            },
            "name": "Web of Microbes: Exometabolomics of Pseudomonas fluorescens GW456-L13 - GSP Demo - Copy",
            "type": "KBaseNarrative.Narrative",
            "ws_name": "wjriehl:narrative_1550780359051"
        },
        "nbformat": 4,
        "nbformat_minor": 1
    },
    "info": [
        178,
        "Narrative.1547576298419",
        "KBaseNarrative.Narrative-4.0",
        "2019-02-21T20:19:20+0000",
        1,
        "wjriehl",
        40800,
        "wjriehl:narrative_1550780359051",
        "534138e78440217401a15f499c5b5359",
        117013,
        {
            "creator": "trentnorth",
            "method.kb_reaction_gene_finder/find_genes_from_similar_reactions/b3460385b29e058580923f6fb737d795cf0b52c4": "1",
            "method.mags_mash/run_mags_mash/72111c6891b3d102f5ed17f17008fedd27619430": "1",
            "data_dependencies": "[]",
            "jupyter.markdown": "14",
            "method.SpeciesTreeBuilder/insert_set_of_genomes_into_species_tree/32374e065449eb18a2a0eefe5c9f9dbc7fa2b179": "1",
            "job_info": "{\"queue_time\": 0, \"running\": 0, \"completed\": 0, \"run_time\": 0, \"error\": 0}",
            "format": "ipynb",
            "description": "",
            "method.fba_tools/fit_exometabolite_data/0ab8e60f63b2b85a7b69869d7d13ad4859b46a64": "1",
            "type": "KBaseNarrative.Narrative",
            "method.fba_tools/build_metabolic_model/584206644abfeb5f3184783aaa27b3a0993ca583": "1",
            "method.fba_tools/predict_metabolite_biosynthesis_pathway/e445caf84edc20738d49de61c7f96a0b783f9644": "1",
            "method.kb_mash/run_mash_dist_search/1618fb569fb82c81d1a4ec2828f7f94bef45e8bc": "1",
            "is_temporary": "false",
            "name": "Web of Microbes: Exometabolomics of Pseudomonas fluorescens GW456-L13 - GSP Demo - Copy",
            "method.kb_phylogenomics/find_homologs_with_genome_context/0e01be7c00f0bd97c8b03561de091bdcb03d4d16": "1",
            "method.RAST_SDK/reannotate_microbial_genome/18b20b4597b7f741a69e06c360b2b938f14e44d2": "1",
            "ws_name": "wjriehl:narrative_1550780359051"
        }
    ],
    "path": [
        "40800/178/1"
    ],
    "provenance": [
        {
            "service": "narrative",
            "service_ver": "3.10.0",
            "input_ws_objects": [],
            "resolved_ws_objects": [],
            "external_data": [],
            "subactions": [],
            "custom": {},
            "description": "Saved by KBase Narrative Interface"
        }
    ],
    "creator": "wjriehl",
    "orig_wsid": 40800,
    "created": "2019-02-21T20:19:20+0000",
    "epoch": 1550780360934,
    "refs": [],
    "copy_source_inaccessible": 0,
    "extracted_ids": {}
}